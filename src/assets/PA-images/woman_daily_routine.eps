%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: 2010.i518.006.F.m005.c7.woman daily routine.eps
%%Creator: Adobe Illustrator(R) 24.1
%%For: Elena Pimonova
%%CreationDate: 27.10.2020
%%BoundingBox: 0 0 590 300
%%HiResBoundingBox: 0 0 590 300
%%CropBox: 0 0 590 300
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 24.1.3%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 24.1.3 x429 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 6.0-c002 79.164360, 2020/02/13-01:07:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpMM:DocumentID>xmp.did:b9d932b5-fb11-41b0-945e-11d050b879a3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b9d932b5-fb11-41b0-945e-11d050b879a3</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:1e828a18-c473-45dd-8159-293cbe355806</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>default</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:5a1b3110-edc4-4190-a3b4-2d75d09417ef</stRef:instanceID>
            <stRef:documentID>xmp.did:5a1b3110-edc4-4190-a3b4-2d75d09417ef</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:1e828a18-c473-45dd-8159-293cbe355806</stRef:originalDocumentID>
            <stRef:renditionClass>default</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1e828a18-c473-45dd-8159-293cbe355806</stEvt:instanceID>
                  <stEvt:when>2019-08-28T12:03:05+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3ba8c851-ad68-49a6-a36e-932f5ed01eba</stEvt:instanceID>
                  <stEvt:when>2019-09-03T23:33:43+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2516a517-30e3-4479-8ca8-ef703ab08356</stEvt:instanceID>
                  <stEvt:when>2019-09-04T00:58:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ec7e03a4-de0c-42e6-bb3c-131cfb2e3553</stEvt:instanceID>
                  <stEvt:when>2019-09-04T01:05:01+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c32af41e-fc38-441e-ba57-38e6c24eb2ee</stEvt:instanceID>
                  <stEvt:when>2019-09-04T01:19:07+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34809029-4e8a-434a-8a27-6ecc9a11f334</stEvt:instanceID>
                  <stEvt:when>2019-09-04T01:21:17+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:52437e33-7861-4c7d-bdd5-6452efada9ae</stEvt:instanceID>
                  <stEvt:when>2019-09-06T21:55:56+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5e3f203e-3ff2-4e7c-8a7b-09cfe1c5c600</stEvt:instanceID>
                  <stEvt:when>2020-10-23T18:26:49+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5a1b3110-edc4-4190-a3b4-2d75d09417ef</stEvt:instanceID>
                  <stEvt:when>2020-10-27T11:10:51+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b9d932b5-fb11-41b0-945e-11d050b879a3</stEvt:instanceID>
                  <stEvt:when>2020-10-27T11:11:03+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.1 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">2010.i518.006.F.m005.c7.woman daily routine</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator 24.1 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2020-10-27T11:11:03+05:00</xmp:CreateDate>
         <xmp:MetadataDate>2020-10-27T11:11:03+05:00</xmp:MetadataDate>
         <xmp:ModifyDate>2020-10-27T11:11:03+05:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>132</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgAhAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A75hc92KuxV2KqM15aQuEmmSNyOQVmANPHfISnEcyyjjkRYCsCCKjcHockxdh&#xA;V2KuxV2KuxV2KuxV2KoWLVdLl1CbTYruF9Qt0WSezWRTMiN9lmjB5AH3GC1pFYVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY95jWNtSsI3ACzconboaOQOvtXMHUgGcR3udpCR&#xA;CR7t0X5ZvfrGnekzVltWMMgrWnHp+G2W6Wdxo8w1auFTscjum2ZLjOxV2KuxV2KuxVZNKkMLyvsk&#xA;al2PsoqcjI0LTGNmgxa41/zDqSTLoVqjGNhGxd1TiSAfjchuPwkGiqTmGMuTIfTsHOODHiHr3Pcx&#xA;ex8n6h5e8/Wvm3V9TsxPqQe11FubRVT0yIlXlRZKv6deQFAg33plsQYEXvbVOQmDw7U9UBBFR0zI&#xA;cV2FXYq7FVG+vbSwsp728lWC0to2mnmfZURByZj8gMCgW8j/AC6/OfWtd8zwWGvR2VpZajGy6cYB&#xA;OCbhSCsZaQcSSvLv1p8srjOy3TxULD2LLWl2KuxV2KuxV2KtO6RozuwREBZmY0AA3JJOBUstvNPl&#xA;m6u4rO11azuLufl6MEU8UjtwBLcVViTQDGwnhKaYUOxV2KuxV2KuxV2KsV161h8x6nf6Hb3S2l/p&#xA;tpDOWlBMEiXjSo0bso5RFPRUiTcfH9k9sXPjEue1N+HNLHyFg/P4PLPyZ8kXthr9tepdOl3AKaxa&#xA;qXQRpKjmNWooWRWKDqfAioyOOUjOugbsoiIX1L33MxwnYq7FXYq7FXYq1IiSI0biqOCrDxB2OAix&#xA;Sg0beI6rrWp+T/Oupiyk5nmk0sRJ9KS3S3jLc1/mA6UP8cx8cTjFPRQxxzYQZDn9jH/N2jXGr6hd&#xA;+Y/N1zHbfWGWTSLd5qRLaMiyRxsSUAPpmvwmvL4vEGnNllxUHEhpYxBs3RTH8hfPest5ruvKt8HX&#xA;TZ4GuNKilVg8PpcQI1LfEU9MEb/y5fin0cHPAVb37MhxnYq7FUt8zaZY6p5f1HT79glpcwSJNISF&#xA;CqV+1UhgOPXcYCLZQviFPJPLflnRL/zVplt6kcNvpFxHd2jo8ZEzwgusUKiRmAEnxuZEDHoCe2Hg&#xA;geKy7TVYzGH0l7bma6l2KuxV2KuxV2KsM/NG3ttS0e20OTk0+o3CCKPg7xMqEep6wT4igRq0Xcn7&#xA;xTm+lytJiMiZbVF5l+XPkLQ9L/Mi3ubi9t2t443k0+KV0gea8DlF9GFmEkgRQzbqd6ZVgnxHdnqY&#xA;cIFdX0BmW4TsVdirsVdirHtSlutQHprPJa23OsZhoJHUQySKzMwagJQEAD8egcvGBDpZ8/eE1tbi&#xA;dbmS0nIkKgtDMBQsqheQYDao5jcdfAYtEoirDB7u7vdP/Oy2uoNMvW0+80wWWo6ktvM1rHJzaaN/&#xA;VUKoK8VRm57BvnlWQWoFxZ9PHHbw21vAvpIsiRRqg4qojUkqQAoACBhxoN/2AfiyGK7/AB+Pu9ya&#xA;G58vx+N/63RUkliiXlI6ovixAH45eSBzaxEnkuVgwDKQQdwR0OFDmZVUsxAUCpJ2AAxViF4NU1uI&#xA;3D31xpcESyXVpBacFchEjeIztIsvIkS1KAADp8VK5HmzFBO9Jv7x55bK+4tNHyaCdBxWWJZGjNVJ&#xA;NHQqOdNviBFK0BBYkJpkkOxV4J+Z01kfN+uKrkzSJDFIRQkD6ugoi1FTVqbn2ymQ3el0A/cD4/eU&#xA;B+ZvmW4842VtYTWkNnp9mOOnWqMZXjWFAFkkbjHXbbw3oKbkiW5a8fZ4hEgm5S3JRv5caTeRedfJ&#xA;lxeKj6illqUd7NEAwZYFWKMsw70kAJPfMfTG5lwNWKgHvuZ7rXYq7FXm3n2K91u5mWK6FvYWcMqx&#xA;g8qvLQhpvh3UIdlPUkfCN65iZsm/CObuNJHghVeqX4r8fFIikOvWthZLPMl1pumJaxy3UbOOUMhc&#xA;svxElQHp4hB3pkZyog3yb8GKWnBJo2eheg+RL68fSzp1+WN7YHj6jVIkhYkxurftDYrt4ZlQkCHX&#xA;a/GBPij9MvsPVkuTcF2KrkRnYKv2m2Fdt8CCWnSaMv6kRURuI5Dyjbg7AMobgzFagilfHIcfeGVA&#xA;8j9/6mssQ8p/M7zJ5q0039/okQ9bT42CyMpkZVKspaOMAglSeRLClPw1xneX3O1x4x4NHq8HvtM8&#xA;4WN3pvmbVlbnJNBLFfSyxtI0jH1lqOfJOPai9qbZOE4k0EZYGh3Pse31CwuXZLa5indPtrG6uV7b&#xA;hSaZmutljlHmCFfCxdirsVdiqT6fpN3PYWsyFmBijIKQOw2gMVKg06PkDMOTPIBIj9I77RyRTR3/&#xA;AO9NGZXYoY2jYf3Y/aPTbDGQLUfp/b70SyqylWAKkUYHcEHxwtYYXdebZiILWwjDraEiS8uCWYMo&#xA;ZBFEFPxemG4lnYiv7FanNdkz8JPC7PHpuIknl9/4/BKFt7PUdcuuBuGRti9wwDhBWtOJpWtKcRT6&#xA;OuUQjLJLdyMk44Y7BH2WoX2hXZs7xS1sTWg3FD+3GfD2/jluPLLEeGXJpyYo5o8Uef45slvJY5tK&#xA;uJYmDo8DlWG4PwnNkCCLDqzEg0Uvs9LvJLJH+sxj1rfgR6TbCSKNT/uz/ivGlJXxQTw6/aLLIkgN&#xA;teuOKFKF57dj1Z/HFeicZJCA1/UH07Rb29SnqQQs0denOlFr7cqYC26fHx5BHvL5w1SyW5lMlxGJ&#xA;LmaVDJKT8TGRwGYuOtQfHKiRVvWyhGuSI0byj5gkOt6la3Mc+iwIjTRO7m4DNWvAcTWNfiPxMKds&#xA;AjbjSycGURlynyZp+VehefJPNz6l5m0z9GW2n2xhsTCU9KX1D8YakkjNyqGqNvh8cjgw8JdFqswl&#xA;s9izJcN2KsP8y695+s7q4Gj6PYXdlHLBBDNPdyRys8xjXeMRFQA0tPt9N/bIElnER6vMPzA82+Zf&#xA;LcDJ5k0bTY21ViyRx3rySgK4dmjVYjxFdqkH9eYwx8JMupdlgznYg/T9rGfLnm/W9QlGoaF5UlvY&#xA;7NyZX9dmjYha+mOMMbM+4PBakjthMx1b8msnIEbM58h+evPGrwvc6BolhKs9FDXNxcRBuHI0iaSC&#xA;NXpvXiTjgjw3Tg6ifHXF0en+UtT8x31tdjzBY29hfWtx6PpWszTIVMUcoapVaH95mSCerhyAHJPc&#xA;kxSDzdqvmnTLT63omnWt/DBFLLdi4uHgdRGOQEapFLyqAe4yMiejKIB5oSz83fmDNbNO/kvT7iS+&#xA;iQTXUermMSooJibi1oxBCt16/wAImyOSOCqqXLyYV5o/Njzejx2lhpFpYXlrIVu2/SBukeilStBa&#xA;R0IahqrU6inhCfERts7HB2fM+oi4n4fpSA/mf5zcyy6pBbizUEzpbyzNLIoXoiLGFO+3xUH0ZRLF&#xA;M85OUdLKAvgeex6/L5386aBp0sEVlppvIo4bSp4n1JB6nRQSW6cuO3hWtXFiEXGyZid+59H+RfJ8&#xA;2lXV1qtzcLcT3gKxsoIHBn5M25350UjMwBGu1gyAQAoBmOSda7FXYq7FUDpvnvyjp/la3e41uCCS&#xA;xh5TwoyyyHipJURLyZzvsF3rt7ZTfwbc+jynITwEgsK1f8//ACd6yyS2WtfWljoimyj4MpNaEpKa&#xA;VpkTIhnj0mSq4dvikd9+e7qjXEOkSfo+Q0hMsUpkKn+dVBpXLONzIaKHUy4vclWn+fNFuLcSxWN6&#xA;sSHh6EcDFhQVoplKVAr1Oa6WnkZeTlylwihfyKvP+YFtJRE0rUI4U/u4xEhp7k8xVj3P8MB082uO&#xA;QDmDfuXL+YyhBHJp2oTRD/dUsSMv0fvKr/sSMPgZOqDKPMAg+5EH8ybG10m8lSO/skVCHtHt/WL8&#xA;xSsXEsopXfkw+ZyyGPJHkaa5gT5xJPyXaf8Am9aXsFmJbDUzp8SoJFSCMGQxim9XTYkdMnU5EX9L&#xA;X4QiDQPEz7SvMWka3q2n3Onzq9bK6MkBIE0Z9W3BWSPqpBBH6tszAbcGeKURuCGR5JrSnzdCs3lf&#xA;VUbYC1lev+ohYdPlgLkaQ1lj/WD59vlZ7WT0lZxDGSG6birCvhvlPLm9ZLkWc/ljP6mt3em3EYWK&#xA;+tJEmQAryII6jp9kt2ycHXdqCoCQ5xk9diQRxogNQgC1+Qpk3nCbK7CrsVSbVP7if/to2P8Aydts&#xA;iUh5f+dn5dXvmfzPYalYrxlsrZY7hpShhaESMwPHmrgqZDXY1qPpqzChfc5+kiKuxz5bp5pFpYab&#xA;BBBbRCGzsl/0eACvJgajkQBVmY8nbvuepzVmdmy53BQodU98qabJLdpebJBagpGoAA+wVCqo+yqq&#xA;e3yzJ0uMmXGXF1mSMY8A6p/pf+92r/8AMWn/AFCQZsQ6wpjhQl+sfGlpa1obm6iUHtSEm4cH2ZIS&#xA;v04CkLdIDppslonwSWby20aHqqIx9CvziKH6cQvV87W09yUmjHpvcFjGZJwWADMCHqCvxcD18cre&#xA;yINbdExfy55nieCN9Lmd7lecHpAsHHEPQcxHU0PauHdojrcZF2PmmHl7yZLZ63DruraJcQvYN69u&#xA;Vt6yNOoPpmRwVCqr0bqa9OnVEd7cTVThlFRMd/Pd7pZBRZwBVZFEaBUkFHA4jZh4+OTdBP6irYWL&#xA;sVdirsVSzTNM01tNtGa0hLGGMkmNSSSo9sDdlyy4jueaq2l6Z9ZjH1SGnB9vTTxX2xR4sq5lLPNX&#xA;l62udGneyt1jvrUfWLYwqFZ2jBJi2pUSLVd+la9QMo1GETgR1bdNqpQmCTswNJFkRXRuSOAysOhB&#xA;3BzmSS9YAF1TjxFaCe+VLm1+vC0u4Y5Y59o2kRWKuOm5Hfpmx7P1JEuA8i6ztLCTDjjsR9zLNR0v&#xA;TBp9yRaQgiJ6H00/lPtm8LoBll3l2naXph0+2JtISTElT6afyj2xCnLLvKn9UtYPMNmYIY4i1pdc&#xA;uCha0ltutBj1QZkjcpthYJb5liupvL+owWsRmuJ7eSKOMUBJkXh3IHfAW7TEDJEk0AXhk3lrXLn/&#xA;AHHraOrkNHKGBAQkkOzEV+yu59hmL4sbI6vTz1MOEm+bNvy38sX8GsfXbiWLjaKwVELMWEqlaVKr&#xA;sCK4cGUTJp13aOpuHDXP9D0/Mp0bsVdiqTap/cT/APbRsf8Ak7bZEpCTatdfWr6a1iYGSWQKfBRU&#xA;KanwKxRvmLqpXUBzLs9PDhjxHkB+PvIXWOm2uo6gsMBrp9oo5SDYyMdyf9kfwGUQxCc6H0xTkzSx&#xA;ws/XL7GSpGsF+ERQscsICqNgvot2HuJPwzZAU64m479/3/2KOl/73av/AMxaf9QkGIYFMcKEA59X&#xA;XY0B+G0t2d1P81w4WNh7gQyD6cHVPR1t+61m9h3C3CRXK17vQwvT5LHH9+K9Hg1roguNO1bUon5f&#xA;owwrLTfkju67AV3B3+Vcg9bPUCM4g/xM/wBA8wHVPLemXjFvU0KZBcxkUZ6uIIj4iqMevgcRIF0m&#xA;pxiOQ1yn+D9rPdUhS5jis5ATHcyBZKdQqAyV+9APpybgYjwni7laymaa0ikf+8Kj1B0o42YfQ1cW&#xA;MxRKthYuxV2KuxVD6dG8en2sbji6RRqynsQoBGBlkNyJ81RlP1hGp8IRwT7krT9WKOiphQ831Pyr&#xA;qum3MiW1s91ptWa3khAdo0JqInjHx/D9lSoaoG9Dmk1WglxEw3Bd/pO0ocIjPYhAfU9R/wCWC8/6&#xA;Rbj/AJozE/JZf5rmfn8P85cltqaMHWxvVZSCrC1uKgjv9jCNHmHRB12AijIM80661S+0Sf65atDO&#xA;YmVOQ4tJVSK8DQqfY5vNPPIY+sUfvee1MMcZfuzY+5M7GN47K3jcUdI0Vh4EKAcyHGKhNBKdatJw&#xA;pMUdtco79gzyQFR9IRsV6I3CrsVYzZWP/O0XqN9ni7n/AJ60/wCaswMeP99L8c3Y5Mn7iP45N+To&#xA;2jlv42+0jRq3zBcY6IUZD8dUa82In3/oZLme692KuxVKtVtL17S5+rxepMbu2niQkDksTws25I/3&#xA;2cDKNXuw6+8recj5gJtXX9HTQvGGf0uKcYjCnOg9TkQF+z/XKjhBlxdXbY9Vh8Pe+IHl8bTr8u7L&#xA;zDa6ddDW04TtORECqqeKgA/ZJFK9DhxYhAbON2hOEpDgN7MluondoJEFWhlDcelVYFG+5Xr9GWOF&#xA;E8/MKVhbzRXWovItEnuFkiNQaqLeGOu3T4kI3xYlGYVS6EXUN/fSvbvKJXQQSKY/7pYl+H4nU7SF&#xA;z074EpJ5su/OySwT+WdGS5vEiliMl7cRxQqJSh+wjM7kGId1+eRlfRtxQgR6pAfP9TBfJvln81tB&#xA;069e80u0v9SmukmghEttBbcBDLGRJ6SqTRpuVKdu2VxhIOVlnGZFz5f1v1Kv5Xflt5n8u6d5hl1i&#xA;N21PWUKBIZo5I6gMVc85BUqzfCSajfDCHCGvPkiaETfm9Us7e5Vrcz/agt/SJBrydivI/wDJMH6c&#xA;tcechvXUq9rE8Xqo32PUZoz3o/xn/hmOLGRulbCxdirsVdiqnBc21wrNBKkyo7RuY2DAOhoymnQq&#xA;diMCqyxyMCVUsB1IFaYotbhS7FXYq7FXYq7FXYq7FXYqkRkvrfzQzCzlltLpRG1wgUohVVIZqkGl&#xA;dthmKBIZSa2LlkxOEC9wpWB1Kz1i/kaxka2nlPF0oSQCSHHTryOQhxRmTWxZ5OGeOI4hYT2e6ht7&#xA;WS6mPCGKNpZCeyqORr8hmZbg0+RtQ8z6/wDmR5u43tzKllO7ta2XI+hbQKrMpMY+Fm4p8TdzmJky&#xA;ULc/Fi3oPoX8q9PutF8pz/pDUHuLBJTNZXNw9EW0WFPjqxIRKhmpy4jqOuW4JExstGpiBKgy7T9X&#xA;0zUTP9RuUuPq0hhnMZqFcAGlfke2WxkDyaJQI5ovJIdirsVdirsVdirsVdirsVdirsVdirsVdirT&#xA;qHRlNaMCDQkHfwIoRgV8wxflx5i03zrfW1jNc2trpl3ztwknpTSQEc1nWSqciyKakEmoK02AzCyz&#xA;MTQdhigJCzyfTnlnU9Tg8u6fHdDletbxNdvICGMpjXmSNqHlXMwcnWZMYMkZZiyZ2+tMVFPhpWlf&#xA;owrO+jxn89/L3m2/1i1l0G+uRYQ29RaRu0cHNZCHldlZfjKyqg+Enw75j5snCQ5elhxjzTr8kdb1&#xA;nUvK9zDqpV7jTruW2aWpLs9fUcMC704l6DjRewG2W45WLa8seE09DyxrdirsVdirumBUovvMttCT&#xA;FZwSajd1osFuUFT/AK8jIlB33yg6iN0Ny5A00qs7BNlJKgsOJIBK9aHw2y9x28KoPWdPGpaPfacW&#xA;4C9t5bcv4eqhSv0VwEKDRfI3lXR77SdZ1XTryP6vrlqiwtazEoCEYhiD0KkcKEdeozGGx3d/2eRZ&#xA;I59P0vX/ACnf60umPp85abSbteE4SSORbdmqGjkRiH4uv8ux9zyGQz5KjVkNmphCUweH1fe9V0DS&#xA;tK03Tkh01R6D/GZalmkJ/adzVmPbfttmTjAEduToMspGR4uaY5Y1uxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxVjnn2/1O00Ifoz1PrVxMsKmH+8oVZjxNDv8ABkJGg5ugxwlk9XIB5rb3/nOS6gubm3u7&#xA;wW0gIt7yBzy9KSo3KnuKg1rlJAJsh3RhgMSARG+4sysdZ12+8x6bcRWOoW2n3MQW7jkkAiimcyO3&#xA;KOVWY7R/DQr8PbJ3cti6fJijGJBIJ6be7qyvUV1dHe4tJ4/RSLe1kjqS6knkrgg7jahHh03w5OIC&#xA;4uLi4Cakwn8wvOukHTrbThZDULy6CXIhJA9L0ZkPU/tc12H8MrkRkh73Y6PRS4iSdh9qXeRvMetR&#xA;ayNPeRZ1+uPb30KhQsQKh1KU+LjzkI5Enp2rvZjHCKbtVp4GBlVGr9/4D1fLXRuxV2KuxVjmpXk+&#xA;p6kNJtXKQKT9ZkHen2voHT55g5ZnJPgHLq5+HGMcPElz6Jxpi6cluYrB43jibg5jYN8Y68iP2sy4&#xA;QERQcPJOUjZReTYOxVQvrpbSyuLtlLrbxPKyL1IRS1B92BQ8D8vvZ6l5R1nzhqFnKdY8z6gY9Pin&#xA;YSLAqtyL27MsZWP4uJp14gVyvi2t2uihLxRX8I3T38p5rK41a70/UrcetcwUtZAAq0Q8nX7TsWNA&#xA;1fY5HgEhUnM7SOQQEh0O70ESyeXJ1SeQyaVOxCyH/dbe/b+uUxEsJ74F1xA1AsfWPtZIjpIiujBk&#xA;cBlZTUEHcEEZmOvIpvCrsVaZlVSzEKqirMdgAO5wKxyTzvbLqccC2NzJpjrvqyqDGHMbSqBFX1mQ&#xA;xxk81Qr9G+DiZcDIopYpokmhdZIpFDxyIQysrCoZSNiCMLFdhV2KuxV2KqVxcw26BpW4hmCoACWZ&#xA;j0VVFST8sCYxJ5ILTtaW6VfWt5LNpWpbiXiRICnNaMhZQxXfiTXFtyYeHkbTLC0uxVgf5ieclsHi&#xA;0u0g+tXQZZbpDQqqUJVOPOJiW6/CdspzAEUXa9n6Qy9Z5dGG6f5vunnL3EVnZquywTiT947VCpQf&#xA;WG6+HH55THDjHR2WTAK/i+z9jNdItPOMnC8srnSri3DEokUkwi58StWWONasFcj4umW4sQjydZnl&#xA;gupDID8P0lOK/mD3TSaez3NfxQ5abcf/AAb+n9jE9U1LRfLeoxyebbvSrAiIsk0X727oTQBI/R5F&#xA;T3ov09sxhh4R9TkzzxlH0cR8jy+9hkv51eSNOniNqLh0jlV0MMIRCErwJjYwHjsDWlabYIDhNkkp&#xA;llEgQfx8Xs/lLzZo3mrRItX0ib1baQlHBBVkkX7SMGANRX+OZQNurnHhNJzkmLsVSrzTqp0zQrq4&#xA;jbjdshishtVriQFYwAa9G+JttlBPQZVmyCESS24MRnMRDzqfUYHSfT4LdLGbUY1junhc/FGeXJV9&#xA;Us7s9DWn3eOk0+XmRs7/AD4eQJv5foAYd+XF7q+hfmfFbWdtPLouo/6I8dvbG2hNRyWVo+MagxcW&#xA;ZzStK5tsFgB0+ookvovMpw3Yq4gEUPTArzf83oYkg0ZUIhjjMyRqoogoI+Ow6AU7ZGfJ3XY53l8P&#xA;0sB0rURpusW18EKS20yu6qfhIB+IdOhGQjbuMuPjgY94fQhEcibgOjDvuCDlpFvG7hDWrG3l+pOS&#xA;VoWtWO9UHVCfFK/dT3xbJbji+aLwtbsVS3zEyDTKSKXikntYpUALckkuY0dSoBqGViCO4wFMUhli&#xA;uS8ZFtOQOFf3MvawmiP7P87gZFknuhuhbUYYwVggu2ESsrKR6sUc77MAf7yVskGJW615p0LRgBqF&#xA;2schFVhWryEf6q1IHucbbsOlyZfpCW2P5keUruURC7MDHZTOhRT/ALLdR9Jxtvn2bmiLq/cjNc85&#xA;aBo0KvcXAllkoIbeAiSRyxAWgB2rXapwSkIiy1YdHkyHYUO8oWy882V1cwwi3kjWVhGXYr8LE0pQ&#xA;E1FduuYI7QiZiIB3cufZU4xMrGyC1P8AMHylbearfR7q7Zb6Zobez/czGNppJvijEoT0yx4LTf2z&#xA;MGSJNW4YxyEfx3bJhcK6aRCHikDQKJGqj/CY7QqGrT9mSn05Nsj9Z35/8V+pkWFw3YqwXz55I/SE&#xA;s2rW1ytvII/36SjmjMoCoQtNidl65j5tt3baDW8I4CL7nm915T1+9024hMMSLw48mkDqpY0HEMpI&#xA;buKHtmN+Yi7OecHaubP/AMtfL/mKxvJry9U29nJFwEPqFxI1QVIUgEBRXf3zKwm962db2jqYTjwj&#xA;6gWd6kHbTrpUlaFzDIFmSnNDxNGWtRUdRlsjQJdTAWQHyjqv5OebX1O+u1vBfK6NLb39w5M0sopW&#xA;NuRJ9Sn7RNOn0a4agc3bHBvQQ/5cfkh5j85RyX8sq6bpcbmP15gTJK6sVcRr/kspBY9/Ghy8QJGz&#xA;RLJGJ3fS35ceRrTyV5bGjW7+qTM8805NTJI4UcjstPhULTwGX4okDdxM04ylcbplGWtTsVYN5zu/&#xA;X12C39cQpp8QmQ/ER68xYVPGtCkabbftnNT2lk3EQa6u57LxbGRF9El+u2KgTtdW8E9QomjUHizg&#xA;ED1Frw5hhtH1ruM1oB5dT3fj7nZmuZFxHef1/pZJ5U1fVYG+p63xjeZgIEAUem1P7ocaggdOXTl9&#xA;w2Wk1JjLgn8HV6zSxlHjh7yy/Ns6d2KuxV5H+a2q/Xtcg02D4lsEPOnT1JaFvuUL+OQkXouycXDj&#xA;Mj/F+hhc6xK9GYs1FBC9gAB1P6sriS7QPevKV2Lvy1ps9SxMCKzHqTGOBPfuuXB5HVw4csh5phd2&#xA;/rxcVbhKp5wyUrxcdD/A+I2xaYyoutLj14iSOEqHhNHWvFx1H41B7jfFZRoq2Fil2vf7wxf8xdl/&#xA;1FxYCkPO/wAxPPlzLdy6Ppcpit4SUuriMkNI42ZAR0UdD4/LIku+7O0AAE5jc8nnenXl5bXV1LbT&#xA;yQS+qP3kbsjf3ad1IORDtOCMrBF/2Kks0s0jSzO0krmru5LMT4knfC2AACgsxSmfl20WfUTM4qtq&#xA;oZR/lyVAP0BW+/NZ2lkoCPewO5Z7qGgadJqD3KXqWV16hkkC+qCJCfiDBY5InI+zy6+GVGIvmHUQ&#xA;ySAoA18N/mWOea/KIu4hFpt/dm5Ihpc249Vx6MnJECmKCRm5nluePWp8LsZF7fp/U05DOuVfL/in&#xA;s/mZdEXRpjZMkV8YjyggK7qV/eeqkfwCiknl49D2O1dTpuPjHF9Pn+hUwsXYqxfWtWTUojaWR9SN&#xA;pFjVxtzkBNaV6qtOvuO2a/UZeL0h2Wnw+GeKXc3HpkNvbajbyhZWtLbmjEbB5EcswHj8IAPtluHA&#xA;I89yGM8xkYkbcR/SyfMt16jerys516VjcfepyE/pLLGfUPewvT9Oe+ms7cCkPBpZj7eoysfmQoGa&#xA;rFi4yB0dxly8Akev7GbRoiOURQqhVooFAN2zbDm6c8lTJMUNqd61lp9xdrEZnhQskIIXm37K8jst&#xA;TtU9MjI0LTGNmnlF9+YP5v6VM97NpGlazpqmslnpjXIuUT/JMwBf34xt40AzGjqQS5ctLQ3sJTB+&#xA;Z3lbWtRudXWeG2tL8IJra8mSGaGWJAlRyYAh1A3Wo23B7azViUpk8Lt9FwwxgcSfeSdY8t6ddXVx&#xA;DaT6gwIWzu7aNp444wnFk9YhYRIFCqeL8mXiOOxJytGYxBMhwnzcLXxlIiIlxDuDLNR03TfNGnxa&#xA;tp5lSZCeUZElvIWjNDHKh4OHQilD+Ipl+fTRn6gPU4+m1UsfoJ9Kc6BqRvbPjL/vTB8EwPX2P05b&#xA;p8vFHfmGnU4eCW3IpnmQ46je/XPqc31IRm84N9X9YlY+dPh5FQxpXwGBMavfk8XtvI3m3VrudRPb&#xA;PLVpJpJJpeJYtudojuT7Zi4sonI0HpJ66OKI9KIvvyt82RRzXTvYlVBd1SaYnxNKwDLJXGN9zXj7&#xA;VjIiNF6F+XlvcWvla3trgoZIXlHwEstGcv1IU/teGSw5BONur7QN5Se9S83ecm0PW9A0w+jbQaxN&#xA;Kkuo3ZYQRiFQ3pDiV/ey8qJyYD59MlKVOJGNgo7X9d0jQ7cazd3cUNqRwl5OtZR+wIhX43DHYDqD&#xA;8skTTPGDL0/Jjv5XfmtY+eYrqNbSW1vbVnZ1KExenzolJOnMKy1BoT1G1aQhO1yYuFkPnXTLfVfL&#xA;02m3LOtveT2sMxjbi/B7qINQ79RkpDZjjlUr5sZg/IvyFBEsSW9VXoXhs5G8d2eBmP0nB4Ybzqv6&#xA;I/2X/FIC1/I3yJc3t8JYZD9UlS2iH7kjh6EUvQxEV5SHoMHAE/mq/hj/ALL/AIpFf8qC/L7/AHxJ&#xA;/wADbf8AVHHwwj83/Rj/ALL/AIp3/Kgvy+/3xJ/wNt/1Rx8ML+b/AKMf9l/xSFvf+cfvy5SKW5aC&#xA;4PpoXKq0SA8RXosQHbIziIgnubMep4pAcMd/63/FIWT8iPKthYveSaNMLZUSVnae2k+GQ0WnKFj9&#xA;AzElmMY8Rht73JhPHOXCDHi90un+cx4flj+W3Mk6fdcKDiPXjrXeu/pfLMb+UY/zftc/8mf6Pyl/&#xA;xTJbP8k/IKaSuq2kVzBNEjXMJEkYdXjBI+NY1alR45ssJE4iVc3WTy8GXgMY8/6X/FPV8yHWOIBB&#xA;B6HbbY/eMCsD8uJpumeaLnTSPSeB3WzgJLOwKhlIrUmsdTXMMQrLddHcagyyYRLv5/j3p7dXI9TW&#xA;yY3A+rICSvT92/XLoz3Ox5/oDijHtDcc/wBKfggio3B6HLnBY55w1LU7WTTbe2gkNlcTMdSu0FRF&#xA;DEvIITUcfVcgV8Kjqco1EiIuRpoCUkp/LvXf0lDeXJgaKygke3srkhqXMSlCZI6/aX1mdFK7Gnjk&#xA;NMOGFlv1XqNBl4uv37D0pPsKfs+598t8TfkXF8P08wiUdXUMpqDloNtRFJfqWuaFaLLDfXlujhCX&#xA;tpJEDspHT02NTyHbvgNVu248OSW8QfkwmS90K7gju7FZ7ZJQGSOYLtXt9qo+85qMghfpt3GIZK9V&#xA;Fj195a8hX2spqU0FvLqdeUryypHHJIDyV5YOXCR1Nfib7VfiB2ywSnWwK/ljz3A7hadzS2FuIDcX&#xA;ccdszJCJEVikYYhV2oo4ivbYDKRHilRLKzEbRZbpGpeU9MtPq8Wr2bMzGSaQ3EQ5uQATTltsAB7Z&#xA;t8cBGNB1WXDmnKzCXyKDvtd0S01NL+wv7Sb1VZbuJbiEVoKg7tQE+/f55RkiYzEo9ebkY8E5QMZR&#xA;kK5bFPNH17S9Xt1msZ1clQzwkgSpUkfGnVdxmRGQkLcLLhnA+oK+p6hbabp11qFy3G2tInmmehNE&#xA;jUsxoATsBhkaFtcRZpjPkbX/AC7cRm2t9Qtpb24YvFEkqM8iKtaoAasBuTTMPR0AR1c7XWSD0Zcy&#xA;qylWFVIoQe4OZpDgAvOtD/MLRrW+vtMs4rrU2guXia3sreaaWORG4MH+EKo23LMMwcBMCY1s7HUx&#xA;EwJXvSH/ADlstS8xz6P5M0+BpW1AzXl03rR26LDbhY+TM6yM4V5w3BFqaV7ZlZATsHFwSEbkXht/&#xA;5H1L/D+p6+r2tuul6l9S1DTzHyuV9SVUEk3qqxRWdtgdqfLKPD2crxhYFPpn8uvLd95c8tppV6LY&#xA;zxyuxntAwWYNQiRw+/M9G7bbZkwFCnCy5OOVptr3+8MX/MXZf9RcWSLAJjhQlFveW1nNrM9y4jiW&#xA;7SrGp3NpBsAN8qnkjAEyOzbjxSmRGIsov9L6eZreESgy3Sh4UoalSKgnw+nI/mIWBe8uTL8tOia2&#xA;jzRmXtCH1IE6ddAdfRk/4icqzfRL3Ftwf3kfeEp1SfTn0OWKJYDcejEAE0+eN+StVqSMeKkDq3fN&#xA;XlrgoDeh/AfvdjgExlBJNWf8pE/Z+hhP6Pv+RX6tLyABI4NWh6dvbNb4M+4/J3njw/nD5s5sVZPK&#xA;LK4KsttKGUihBAbrnQ6MViDzepIOoJH84J3mU4LsVUWs7R7lLpoI2uYwRHOUUyKDUEBqVHXBTITl&#xA;VXsuNvbt6lYkPrDjNVR8YpSjeO3jjQRxHbfkqABQABQDYAdKYoJSvzD5c07zBZxWWomU2iTJNJDF&#xA;I0ay8AR6cvH7cbcviXvglEHmyhMx5JgttbIiIkSKkaqsahQAqpQqAOwWm2GgjiK/ivLnQcqU5U3p&#xA;4Vxrqi+jlVVFFAUVJoBTcmpxApSbUprGymfnNbxSvSnJ0VjT5kYshOQ5FT/RWl/8scH/ACLT+mKf&#xA;Fn3l36K0v/ljg/5Fp/TFfFn3l36K0v8A5Y4P+Raf0xpfFn3l36K0v/ljg/5Fp/TFfFn3l36K0v8A&#xA;5Y4P+Raf0xXxZ95VYLS1t6+hCkXL7XBQtaeNBixlMnmVUgEEEVB2IPSmKFCLT7CKQSRW0Uci/ZdU&#xA;VSK7dQMaCbKvhQ7FVrRRM6yMimRK8HIFRXrQ4FWtbWzFy0SEyU9Sqj4qdOXjiqoAAAAKAbADFXFV&#xA;YUIBFQd/EGoxV2FVj28EgIkjRwTyIZQasBSu/em2RlEHmmMiORpT+oWHLl9Wi5dK8Fr+rI+FDuHy&#xA;Z+NP+cfmrIiIvFFCqOgUUH4ZMADk1kk82yARQ7g9RiriARQ7g9RirqCtabnYn5YVdxBBBAoeo+eB&#xA;XYVTT/cF/lf8NgaPW7/cF/lf8Nivrd/uC/yv+GxX1u/3Bf5X/DYr63f7gv8AK/4bFfW7/cF/lf8A&#xA;DYr63f7gv8r/AIbFfW7/AHBf5X/DYr63f7gv8r/hsV9bv9wX+V/w2K+t3+4L/K/4bFfW7/cF/lf8&#xA;Nivrd/uC/wAr/hsV9bv9wX+V/wANivrd/uC/yv8AhsV9bv8AcF/lf8Nivrd/uC/yv+GxX1u/3Bf5&#xA;X/DYr63f7gv8r/hsV9bv9wX+V/w2K+t3+4L/ACv+GxX1u/3Bf5X/AA2K+t3+4L/K/wCGxX1u/wBw&#xA;X+V/w2K+t3+4L/K/4bFfW7/cF/lf8Nivrd/uC/yv+GxX1u/3Bf5X/DYr63f7gv8AK/4bFfW7/cF/&#xA;lf8ADYr63f7gv8r/AIbFfW7/AHBf5X/DYr63/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>590.000000</stDim:w>
            <stDim:h>300.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Группа образцов по умолчанию</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -300 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 300 li
590 300 li
590 0 li
cp
clp
590 300 mo
0 300 li
0 0 li
590 0 li
590 300 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .827451 .870588 rgb
f
66.498 143.527 mo
66.396 143.527 66.314 143.444 66.314 143.343 cv
66.314 75.2783 li
66.314 67.5273 60.0073 61.2212 52.2563 61.2212 cv
44.5049 61.2212 38.1982 67.5273 38.1982 75.2783 cv
38.1982 143.343 li
38.1982 143.444 38.1157 143.527 38.0142 143.527 cv
37.9131 143.527 37.8301 143.444 37.8301 143.343 cv
37.8301 75.2783 li
37.8301 67.3237 44.3018 60.8525 52.2563 60.8525 cv
60.2104 60.8525 66.6821 67.3237 66.6821 75.2783 cv
66.6821 143.343 li
66.6821 143.444 66.6001 143.527 66.498 143.527 cv
cp
.827451 .188235 .396078 rgb
f
66.498 81.7275 mo
38.0142 81.7275 li
37.9131 81.7275 37.8301 81.645 37.8301 81.5435 cv
37.8301 81.4424 37.9131 81.3594 38.0142 81.3594 cv
66.498 81.3594 li
66.6001 81.3594 66.6821 81.4424 66.6821 81.5435 cv
66.6821 81.645 66.6001 81.7275 66.498 81.7275 cv
cp
f
43.6553 81.7275 mo
43.5537 81.7275 43.4712 81.645 43.4712 81.5435 cv
43.4712 63.9258 li
43.4712 63.8247 43.5537 63.7417 43.6553 63.7417 cv
43.7568 63.7417 43.8394 63.8247 43.8394 63.9258 cv
43.8394 81.5435 li
43.8394 81.645 43.7568 81.7275 43.6553 81.7275 cv
cp
f
49.3887 81.7275 mo
49.2876 81.7275 49.2046 81.645 49.2046 81.5435 cv
49.2046 61.3252 li
49.2046 61.2236 49.2876 61.1411 49.3887 61.1411 cv
49.4902 61.1411 49.5732 61.2236 49.5732 61.3252 cv
49.5732 81.5435 li
49.5732 81.645 49.4902 81.7275 49.3887 81.7275 cv
cp
f
55.1226 81.7275 mo
55.0205 81.7275 54.9385 81.645 54.9385 81.5435 cv
54.9385 61.3252 li
54.9385 61.2236 55.0205 61.1411 55.1226 61.1411 cv
55.2246 61.1411 55.3066 61.2236 55.3066 61.3252 cv
55.3066 81.5435 li
55.3066 81.645 55.2246 81.7275 55.1226 81.7275 cv
cp
f
60.8564 81.7275 mo
60.7539 81.7275 60.6724 81.645 60.6724 81.5435 cv
60.6724 63.9258 li
60.6724 63.8247 60.7539 63.7417 60.8564 63.7417 cv
60.9585 63.7417 61.0405 63.8247 61.0405 63.9258 cv
61.0405 81.5435 li
61.0405 81.645 60.9585 81.7275 60.8564 81.7275 cv
cp
f
52.2563 57.1958 mo
51.248 57.1958 50.4277 58.0161 50.4277 59.0244 cv
50.4277 60.0322 51.248 60.8525 52.2563 60.8525 cv
53.2637 60.8525 54.084 60.0322 54.084 59.0244 cv
54.084 58.0161 53.2637 57.1958 52.2563 57.1958 cv
cp
52.2563 61.2212 mo
51.0449 61.2212 50.0596 60.2354 50.0596 59.0244 cv
50.0596 57.813 51.0449 56.8276 52.2563 56.8276 cv
53.4663 56.8276 54.4521 57.813 54.4521 59.0244 cv
54.4521 60.2354 53.4663 61.2212 52.2563 61.2212 cv
cp
f
54.6997 59.8071 mo
54.3574 59.8071 54.0781 60.0864 54.0781 60.4297 cv
54.0781 60.772 54.3574 61.0513 54.6997 61.0513 cv
55.042 61.0513 55.3213 60.772 55.3213 60.4297 cv
55.3213 60.0864 55.042 59.8071 54.6997 59.8071 cv
cp
54.6997 61.4194 mo
54.1543 61.4194 53.7095 60.9756 53.7095 60.4297 cv
53.7095 59.8838 54.1543 59.439 54.6997 59.439 cv
55.2446 59.439 55.6895 59.8838 55.6895 60.4297 cv
55.6895 60.9756 55.2446 61.4194 54.6997 61.4194 cv
cp
f
49.812 59.8066 mo
49.4697 59.8066 49.1904 60.0859 49.1904 60.4282 cv
49.1904 60.7705 49.4697 61.0498 49.812 61.0498 cv
50.1553 61.0498 50.4341 60.7705 50.4341 60.4282 cv
50.4341 60.0859 50.1553 59.8066 49.812 59.8066 cv
cp
49.812 61.418 mo
49.2656 61.418 48.8218 60.9741 48.8218 60.4282 cv
48.8218 59.8823 49.2656 59.438 49.812 59.438 cv
50.3579 59.438 50.8022 59.8823 50.8022 60.4282 cv
50.8022 60.9741 50.3579 61.418 49.812 61.418 cv
cp
f
94.1948 37.8247 mo
91.1895 23.583 li
87.0278 22.2886 li
86.6211 17.7109 li
86.6211 17.7109 90.623 18.9819 91.0391 18.0459 cv
91.3179 17.4189 90.1338 17.0405 89.3218 16.8589 cv
89.167 16.8242 89.0527 16.6924 89.042 16.5337 cv
89.0308 16.3755 89.1245 16.228 89.2734 16.1719 cv
89.4888 16.0913 89.7705 16.0347 90.1372 16.0347 cv
91.4204 16.0347 93.2236 17.1094 93.4316 18.0459 cv
93.6401 18.9819 101.235 38.2983 101.235 38.2983 cv
94.1948 37.8247 li
cp
.929412 .533333 .427451 rgb
f
104.714 47.5811 mo
106.887 45.1997 107.373 38.4722 104.136 39.4199 cv
102.402 35.9751 87.7676 33.8481 81.895 47.5811 cv
76.0229 61.314 86.7505 60.1118 79.0283 71.0244 cv
90.3105 71.0244 li
98.8291 48.4595 li
104.714 47.5811 li
cp
.282353 0 0 rgb
f
117.504 90.7173 mo
117.504 90.7173 131.662 93.1909 147.278 97.5713 cv
155.447 98.4849 163.997 98.8691 173.06 97.9707 cv
176.529 97.627 180.077 94.4409 182.507 92.1318 cv
183.067 91.5996 183.943 92.2402 183.614 92.9395 cv
179.206 102.521 li
178.597 103.814 177.295 104.64 175.866 104.64 cv
102.587 104.64 li
117.504 90.7173 li
cp
.929412 .533333 .427451 rgb
f
63.0527 99.0913 mo
63.0527 91.1016 li
63.0527 89.4619 61.7236 88.1328 60.084 88.1328 cv
43.5493 88.1328 li
41.9097 88.1328 40.5806 89.4619 40.5806 91.1016 cv
40.5806 103.732 li
40.5806 106.302 42.6636 108.385 45.2334 108.385 cv
58.1284 108.385 li
63.0527 108.385 li
72.416 108.385 li
72.416 102.24 li
72.416 100.501 71.0068 99.0913 69.2681 99.0913 cv
63.0527 99.0913 li
cp
1 1 1 rgb
f
43.5493 88.3169 mo
42.0142 88.3169 40.7646 89.5664 40.7646 91.1016 cv
40.7646 103.732 li
40.7646 106.196 42.7695 108.202 45.2334 108.202 cv
72.2319 108.202 li
72.2319 102.24 li
72.2319 100.605 70.9023 99.2759 69.2676 99.2759 cv
63.0532 99.2759 li
62.9512 99.2759 62.8691 99.1929 62.8691 99.0913 cv
62.8691 91.1016 li
62.8691 89.5664 61.6206 88.3169 60.0835 88.3169 cv
43.5493 88.3169 li
cp
72.416 108.57 mo
45.2334 108.57 li
42.5659 108.57 40.396 106.4 40.396 103.732 cv
40.396 91.1016 li
40.396 89.3628 41.8105 87.9487 43.5493 87.9487 cv
60.0835 87.9487 li
61.8232 87.9487 63.2373 89.3628 63.2373 91.1016 cv
63.2373 98.9072 li
69.2676 98.9072 li
71.105 98.9072 72.6001 100.402 72.6001 102.24 cv
72.6001 108.386 li
72.6001 108.487 72.5181 108.57 72.416 108.57 cv
cp
1 .454902 .262745 rgb
f
194.302 111.345 mo
38.0142 111.345 li
38.0142 108.385 li
194.302 108.385 li
194.302 111.345 li
cp
.827451 .188235 .396078 rgb
f
184.916 104.64 mo
56.0015 104.64 li
53.9326 104.64 52.2559 106.317 52.2559 108.385 cv
52.2559 108.385 li
188.661 108.385 li
188.661 108.385 li
188.661 106.317 186.984 104.64 184.916 104.64 cv
cp
.282353 0 0 rgb
f
61.4575 99.3447 mo
50.7651 99.3447 li
49.2935 99.3447 48.0952 98.147 48.0952 96.6748 cv
48.0952 96.0396 li
48.0952 95.9385 48.1782 95.8555 48.2798 95.8555 cv
48.3809 95.8555 48.4639 95.9385 48.4639 96.0396 cv
48.4639 96.6748 li
48.4639 97.9438 49.4961 98.9766 50.7651 98.9766 cv
61.4575 98.9766 li
61.5601 98.9766 61.6421 99.0591 61.6421 99.1606 cv
61.6421 99.2622 61.5601 99.3447 61.4575 99.3447 cv
cp
1 .454902 .262745 rgb
f
81.5718 111.345 mo
88.54 111.345 90.8647 122.608 94.2881 132.712 cv
96.4453 139.08 102.45 143.342 109.173 143.342 cv
154.849 143.342 li
156.284 143.342 157.079 141.679 156.177 140.562 cv
156.177 140.562 li
155.622 139.875 154.932 139.319 154.139 138.93 cv
151.817 137.789 146.302 134.186 142.607 124.546 cv
137.821 112.062 131.094 111.345 131.094 111.345 cv
81.5718 111.345 li
cp
f
99.127 100.617 mo
78.936 100.617 li
76.7144 100.617 74.9131 102.418 74.9131 104.64 cv
74.9131 104.64 li
103.15 104.64 li
103.15 104.64 li
103.15 102.418 101.349 100.617 99.127 100.617 cv
cp
.827451 .188235 .396078 rgb
f
150.692 143.531 mo
109.173 143.531 li
102.343 143.531 96.2896 139.208 94.1094 132.772 cv
93.5908 131.241 93.0918 129.665 92.6089 128.142 cv
90.4575 121.354 88.4263 114.941 84.8218 112.531 cv
84.7354 112.473 84.7119 112.355 84.77 112.269 cv
84.8281 112.182 84.9463 112.161 85.0313 112.217 cv
88.7456 114.701 90.7964 121.175 92.9683 128.028 cv
93.4502 129.549 93.9487 131.124 94.4663 132.651 cv
96.5947 138.934 102.505 143.154 109.173 143.154 cv
150.692 143.154 li
150.797 143.154 150.881 143.238 150.881 143.342 cv
150.881 143.446 150.797 143.531 150.692 143.531 cv
cp
.282353 0 0 rgb
f
92.4756 51.0396 mo
104.178 58.3286 li
107.306 60.2773 107.563 63.896 105.664 67.0542 cv
103.696 70.3247 102.466 76.999 108.622 80.7114 cv
95.4434 102.189 li
95.4434 102.189 88.2393 95.5498 95.73 80.9844 cv
95.73 80.9844 83.3286 65.1982 82.7739 41.8013 cv
92.0215 47.8125 li
92.4756 51.0396 li
cp
1 1 1 rgb
f
105.883 63.8311 mo
105.85 63.8311 105.816 63.8223 105.787 63.8037 cv
84.23 50.6274 li
84.1436 50.5752 84.1162 50.4614 84.1694 50.3745 cv
84.2212 50.2881 84.3364 50.2588 84.4229 50.314 cv
105.979 63.4897 li
106.065 63.5425 106.093 63.6563 106.04 63.7432 cv
106.005 63.7993 105.945 63.8311 105.883 63.8311 cv
cp
1 .454902 .262745 rgb
f
104.451 67.7681 mo
104.418 67.7681 104.385 67.7598 104.355 67.7412 cv
85.6401 56.3018 li
85.5537 56.249 85.5264 56.1353 85.5796 56.0483 cv
85.6328 55.9629 85.7466 55.9331 85.833 55.9878 cv
104.548 67.4272 li
104.634 67.48 104.661 67.5933 104.608 67.6807 cv
104.574 67.7368 104.513 67.7681 104.451 67.7681 cv
cp
f
103.343 71.9028 mo
103.31 71.9028 103.277 71.894 103.247 71.8755 cv
87.1309 62.0244 li
87.0444 61.9722 87.0171 61.8584 87.0703 61.7715 cv
87.1235 61.6841 87.2373 61.6563 87.3232 61.7109 cv
103.44 71.562 li
103.526 71.6143 103.553 71.728 103.5 71.8149 cv
103.466 71.8711 103.405 71.9028 103.343 71.9028 cv
cp
f
104.329 77.3164 mo
104.296 77.3164 104.263 77.3076 104.232 77.2891 cv
89.2646 68.1411 li
89.1782 68.0884 89.1509 67.9746 89.2041 67.8877 cv
89.2573 67.8022 89.3696 67.7725 89.4575 67.8271 cv
104.425 76.9751 li
104.512 77.0278 104.539 77.1416 104.486 77.2285 cv
104.451 77.2847 104.391 77.3164 104.329 77.3164 cv
cp
f
105.83 83.0459 mo
105.796 83.0459 105.763 83.0371 105.733 83.0186 cv
92.2529 74.7788 li
92.1665 74.7266 92.1392 74.6128 92.1924 74.5259 cv
92.2441 74.4395 92.3579 74.4102 92.4458 74.4653 cv
105.926 82.7046 li
106.012 82.7573 106.04 82.8711 105.986 82.958 cv
105.952 83.0142 105.892 83.0459 105.83 83.0459 cv
cp
f
103.858 86.6528 mo
103.825 86.6528 103.792 86.6445 103.762 86.6255 cv
96.1533 81.9751 li
96.0674 81.9229 96.04 81.8091 96.0933 81.7227 cv
96.1465 81.6357 96.2588 81.606 96.3462 81.6616 cv
103.955 86.312 li
104.041 86.3643 104.068 86.478 104.015 86.5645 cv
103.981 86.6211 103.92 86.6528 103.858 86.6528 cv
cp
f
102.125 90.4048 mo
102.092 90.4048 102.059 90.396 102.028 90.3774 cv
94.3003 85.6543 li
94.2139 85.6021 94.1865 85.4883 94.2397 85.4019 cv
94.2915 85.3149 94.4067 85.2852 94.4932 85.3408 cv
102.221 90.0635 li
102.307 90.1162 102.335 90.23 102.282 90.3159 cv
102.247 90.373 102.187 90.4048 102.125 90.4048 cv
cp
f
100.021 93.9312 mo
99.9878 93.9312 99.9551 93.9224 99.9248 93.9038 cv
93.2944 89.8506 li
93.2085 89.7983 93.1812 89.6846 93.2344 89.5977 cv
93.2871 89.5103 93.3979 89.4814 93.4873 89.5371 cv
100.118 93.5903 li
100.204 93.6426 100.231 93.7563 100.178 93.8433 cv
100.144 93.8994 100.083 93.9312 100.021 93.9312 cv
cp
f
93.4658 58.0762 mo
93.3765 58.0762 93.2974 58.0107 93.2832 57.9194 cv
92.417 52.1631 li
92.4023 52.062 92.4717 51.9688 92.5723 51.9536 cv
92.6758 51.937 92.7666 52.0083 92.7822 52.1079 cv
93.6484 57.8647 li
93.6631 57.9653 93.5938 58.0591 93.4932 58.0742 cv
93.4844 58.0757 93.4746 58.0762 93.4658 58.0762 cv
cp
.282353 0 0 rgb
f
95.4434 102.189 mo
90.4063 96.5342 92.7998 84.6196 123.843 72.8052 cv
126.671 71.729 129.852 72.2017 132.228 74.0771 cv
135.43 76.606 140.213 80.6206 144.965 85.4941 cv
152.702 93.4282 157.939 99.2271 171.359 98.6094 cv
171.891 98.5845 172.069 99.3057 171.582 99.5171 cv
159.328 104.826 li
158.19 105.318 156.901 104.824 156.3 103.74 cv
155.485 102.271 153.782 100.378 150.236 99.2993 cv
143.855 97.3574 134.098 92.6387 127.717 83.2061 cv
127.633 83.0825 112.946 104.588 101.69 104.791 cv
99.5068 104.83 97.2148 104.067 95.4434 102.189 cv
cp
.929412 .533333 .427451 rgb
f
127.294 82.1909 mo
127.221 82.1909 127.151 82.147 127.123 82.0752 cv
125.806 78.7842 li
125.769 78.6899 125.815 78.5825 125.909 78.5444 cv
126.005 78.5083 126.11 78.5527 126.149 78.647 cv
127.465 81.9385 li
127.502 82.0327 127.457 82.1401 127.363 82.1782 cv
127.34 82.1865 127.317 82.1909 127.294 82.1909 cv
cp
.282353 0 0 rgb
f
100.338 52.5229 mo
100.599 54.8262 li
100.758 56.2031 li
94.4849 52.291 li
96.2378 47.814 li
96.2378 47.814 94.3979 44.9746 96.4121 43.8877 cv
97.7734 43.1489 98.4546 45.3076 98.4546 45.3076 cv
98.4546 45.3076 102.454 44.5396 103.7 42.0044 cv
106.641 46.8579 105.945 55.1162 100.338 52.5229 cv
cp
.929412 .533333 .427451 rgb
f
97.6973 46.251 mo
97.6328 46.251 97.5708 46.2168 97.5361 46.1567 cv
96.8774 44.9775 li
96.8286 44.8882 96.8599 44.7764 96.9492 44.7271 cv
97.0342 44.6753 97.1494 44.709 97.1997 44.7974 cv
97.8584 45.9766 li
97.9072 46.0659 97.876 46.1772 97.7866 46.2271 cv
97.7593 46.2437 97.7275 46.251 97.6973 46.251 cv
cp
.282353 0 0 rgb
f
103.471 47.1875 mo
103.422 47.1875 103.375 47.1685 103.339 47.1313 cv
102.776 46.5483 102.024 46.1865 101.217 46.1118 cv
101.162 46.1069 101.112 46.0767 101.08 46.0298 cv
100.708 45.4688 li
100.651 45.3838 100.674 45.2695 100.759 45.2134 cv
100.843 45.1558 100.958 45.1802 101.015 45.2646 cv
101.339 45.7544 li
102.201 45.855 103.001 46.251 103.604 46.875 cv
103.674 46.9487 103.673 47.0649 103.6 47.1357 cv
103.563 47.1699 103.518 47.1875 103.471 47.1875 cv
cp
f
103.549 44.8945 mo
103.513 44.8945 103.477 44.8843 103.445 44.8628 cv
102.877 44.478 102.145 44.4458 101.539 44.7759 cv
101.448 44.8271 101.337 44.793 101.289 44.7031 cv
101.24 44.6143 101.271 44.5024 101.361 44.4536 cv
102.087 44.0522 102.965 44.0952 103.653 44.5581 cv
103.736 44.6147 103.759 44.729 103.702 44.8135 cv
103.666 44.8657 103.608 44.8945 103.549 44.8945 cv
cp
f
103.133 50.3882 mo
102.869 50.9678 102.302 51.2769 101.866 51.0781 cv
101.431 50.8794 101.292 50.249 101.556 49.6694 cv
101.819 49.0898 102.387 48.7813 102.823 48.9795 cv
103.258 49.1782 103.397 49.8091 103.133 50.3882 cv
cp
1 1 1 rgb
f
104.662 46.6855 mo
104.771 47.1606 105.182 47.6353 105.548 47.9795 cv
105.65 48.0762 105.685 48.2246 105.635 48.3564 cv
105.585 48.4878 105.461 48.5767 105.32 48.5806 cv
105.011 48.5898 104.67 48.5742 104.391 48.4966 cv
104.662 46.6855 li
cp
.929412 .533333 .427451 rgb
f
100.599 54.8262 mo
98.02 53.334 99.0195 50.6104 99.0195 50.6104 cv
99.0195 50.6104 99.5557 51.8999 100.338 52.5229 cv
100.599 54.8262 li
cp
.282353 0 0 rgb
f
103.998 41.7544 mo
103.972 41.7544 103.945 41.7485 103.92 41.7373 cv
103.828 41.6938 103.788 41.5845 103.831 41.4927 cv
103.834 41.4854 104.146 40.8032 103.982 40.2085 cv
103.955 40.1104 104.012 40.0093 104.11 39.9819 cv
104.207 39.9551 104.31 40.0127 104.336 40.1104 cv
104.538 40.8379 104.181 41.6157 104.165 41.6484 cv
104.133 41.7148 104.067 41.7544 103.998 41.7544 cv
cp
.929412 .533333 .427451 rgb
f
98.4253 43.5112 mo
98.3965 43.5112 98.3677 43.5049 98.3403 43.4902 cv
98.25 43.4434 98.2153 43.332 98.2612 43.2422 cv
99.1001 41.6299 100.968 40.8521 102.703 41.3945 cv
102.801 41.4248 102.854 41.5278 102.824 41.625 cv
102.793 41.7222 102.693 41.7773 102.594 41.7456 cv
101.024 41.2554 99.3447 41.9575 98.5894 43.4121 cv
98.5562 43.4751 98.4917 43.5112 98.4253 43.5112 cv
cp
.376471 .262745 .321569 rgb
f
92.7407 44.7134 mo
92.709 44.7134 92.6772 44.7056 92.6484 44.688 cv
92.5605 44.6372 92.5308 44.5249 92.5811 44.4365 cv
94.4526 41.2207 98.1694 39.5308 101.813 40.2334 cv
101.913 40.2524 101.978 40.3486 101.959 40.4487 cv
101.939 40.5488 101.84 40.6191 101.743 40.5947 cv
98.2397 39.9243 94.6919 41.5405 92.9004 44.6221 cv
92.8657 44.6802 92.8037 44.7134 92.7407 44.7134 cv
cp
f
92.0215 40.5752 mo
91.9678 40.5752 91.9146 40.5518 91.8774 40.5068 cv
91.814 40.4277 91.8271 40.311 91.9063 40.248 cv
94.998 37.7554 99.2544 37.3774 102.736 39.2813 cv
102.825 39.3301 102.858 39.4424 102.81 39.5313 cv
102.761 39.6211 102.647 39.6514 102.561 39.605 cv
99.2051 37.769 95.1147 38.1377 92.1362 40.5342 cv
92.103 40.5615 92.0615 40.5752 92.0215 40.5752 cv
cp
f
93.293 50.6318 mo
93.2412 50.6318 93.1909 50.6108 93.1548 50.5693 cv
93.0874 50.4932 93.0947 50.3765 93.1724 50.3096 cv
94.0386 49.5483 94.6499 48.5571 94.9404 47.4419 cv
94.9663 47.3442 95.0703 47.2891 95.165 47.3105 cv
95.2642 47.3364 95.3232 47.437 95.2974 47.5356 cv
94.9868 48.7217 94.3364 49.7764 93.4141 50.5859 cv
93.3794 50.6167 93.3364 50.6318 93.293 50.6318 cv
cp
f
85.1094 69.8677 mo
85.0762 69.8677 85.0415 69.8589 85.0112 69.8394 cv
84.9248 69.7861 84.8989 69.6729 84.9521 69.5864 cv
85.6992 68.3872 86.0615 67.0078 85.9995 65.5991 cv
85.9956 65.498 86.0747 65.4116 86.1753 65.4072 cv
86.27 65.415 86.3638 65.4814 86.3682 65.5835 cv
86.4326 67.0669 86.0518 68.5181 85.2661 69.7808 cv
85.23 69.8364 85.1709 69.8677 85.1094 69.8677 cv
cp
f
83.0977 68.5728 mo
83.0659 68.5728 83.0342 68.5649 83.0054 68.5483 cv
82.918 68.4971 82.8877 68.3843 82.938 68.2964 cv
85.0098 64.7124 84.0356 62.1362 83.0039 59.4087 cv
82.0171 56.7964 80.9956 54.0957 82.6055 50.3745 cv
82.6445 50.2808 82.7524 50.2393 82.8472 50.2788 cv
82.9409 50.3188 82.9839 50.4277 82.9424 50.521 cv
81.3926 54.1055 82.3867 56.7354 83.3496 59.2783 cv
84.3652 61.9663 85.4155 64.7451 83.2573 68.4805 cv
83.2227 68.5396 83.1611 68.5728 83.0977 68.5728 cv
cp
f
92.0215 47.8125 mo
87.3975 20.0225 li
87.3975 20.0225 88.126 19.8838 87.9873 18.5659 cv
87.8486 17.2485 87.4668 15.0288 85.7676 15.8262 cv
84.0684 16.624 81.3286 15.0981 81.2246 18.1499 cv
81.1206 21.2017 83.0278 20.9937 83.0278 20.9937 cv
82.7739 41.8013 li
92.0215 47.8125 li
cp
.929412 .533333 .427451 rgb
f
105.164 48.7671 mo
104.84 48.7671 104.565 48.7363 104.342 48.6743 cv
104.244 48.647 104.187 48.5454 104.214 48.4473 cv
104.24 48.3491 104.343 48.291 104.44 48.3188 cv
104.664 48.3813 104.959 48.4058 105.314 48.397 cv
105.381 48.3945 105.44 48.353 105.463 48.291 cv
105.486 48.229 105.47 48.1592 105.422 48.1138 cv
104.896 47.6191 104.579 47.1519 104.483 46.7271 cv
104.461 46.6274 104.523 46.5293 104.623 46.5059 cv
104.72 46.4839 104.819 46.5464 104.843 46.645 cv
104.922 46.9932 105.209 47.4077 105.674 47.8457 cv
105.831 47.9912 105.883 48.2178 105.808 48.4204 cv
105.73 48.624 105.542 48.7588 105.326 48.7651 cv
105.27 48.7666 105.217 48.7671 105.164 48.7671 cv
cp
.282353 0 0 rgb
f
158.415 105.199 mo
157.503 105.199 156.62 104.698 156.138 103.829 cv
155.365 102.435 153.705 100.547 150.183 99.4756 cv
145.79 98.1392 134.854 93.9189 127.711 83.5249 cv
126.386 85.311 116.815 97.9263 107.068 103.234 cv
106.983 103.283 106.869 103.251 106.819 103.161 cv
106.771 103.071 106.804 102.96 106.893 102.911 cv
117.267 97.2607 127.465 83.2393 127.567 83.0981 cv
127.602 83.0488 127.654 83.0186 127.72 83.022 cv
127.78 83.0229 127.836 83.0527 127.87 83.103 cv
134.941 93.5562 145.904 97.7886 150.29 99.123 cv
153.93 100.231 155.655 102.196 156.46 103.65 cv
157.024 104.667 158.229 105.101 159.254 104.656 cv
171.508 99.3481 li
171.67 99.2778 171.701 99.1338 171.674 99.0229 cv
171.648 98.9116 171.545 98.7798 171.368 98.7935 cv
170.833 98.8179 170.312 98.8325 169.803 98.8369 cv
169.801 98.8369 li
169.701 98.8369 169.618 98.7554 169.617 98.6543 cv
169.616 98.5527 169.698 98.4692 169.8 98.4688 cv
170.303 98.4644 170.821 98.4497 171.351 98.4253 cv
171.683 98.4233 171.959 98.6216 172.033 98.9395 cv
172.106 99.2563 171.954 99.5562 171.654 99.6865 cv
159.401 104.994 li
159.081 105.133 158.745 105.199 158.415 105.199 cv
cp
1 1 1 rgb
f
194.303 143.527 mo
194.201 143.527 194.119 143.444 194.119 143.343 cv
194.119 75.2783 li
194.119 67.5273 187.813 61.2212 180.062 61.2212 cv
172.309 61.2212 166.002 67.5273 166.002 75.2783 cv
166.002 143.343 li
166.002 143.444 165.921 143.527 165.818 143.527 cv
165.716 143.527 165.634 143.444 165.634 143.343 cv
165.634 75.2783 li
165.634 67.3237 172.106 60.8525 180.062 60.8525 cv
188.015 60.8525 194.487 67.3237 194.487 75.2783 cv
194.487 143.343 li
194.487 143.444 194.405 143.527 194.303 143.527 cv
cp
.282353 0 0 rgb
f
194.303 81.7275 mo
165.818 81.7275 li
165.716 81.7275 165.634 81.645 165.634 81.5435 cv
165.634 81.4424 165.716 81.3594 165.818 81.3594 cv
194.303 81.3594 li
194.405 81.3594 194.487 81.4424 194.487 81.5435 cv
194.487 81.645 194.405 81.7275 194.303 81.7275 cv
cp
f
171.46 81.7275 mo
171.358 81.7275 171.276 81.645 171.276 81.5435 cv
171.276 63.9258 li
171.276 63.8247 171.358 63.7417 171.46 63.7417 cv
171.563 63.7417 171.645 63.8247 171.645 63.9258 cv
171.645 81.5435 li
171.645 81.645 171.563 81.7275 171.46 81.7275 cv
cp
f
177.194 81.7275 mo
177.092 81.7275 177.01 81.645 177.01 81.5435 cv
177.01 61.3252 li
177.01 61.2236 177.092 61.1411 177.194 61.1411 cv
177.296 61.1411 177.378 61.2236 177.378 61.3252 cv
177.378 81.5435 li
177.378 81.645 177.296 81.7275 177.194 81.7275 cv
cp
f
182.928 81.7275 mo
182.825 81.7275 182.743 81.645 182.743 81.5435 cv
182.743 61.3252 li
182.743 61.2236 182.825 61.1411 182.928 61.1411 cv
183.03 61.1411 183.112 61.2236 183.112 61.3252 cv
183.112 81.5435 li
183.112 81.645 183.03 81.7275 182.928 81.7275 cv
cp
f
188.661 81.7275 mo
188.559 81.7275 188.477 81.645 188.477 81.5435 cv
188.477 63.9258 li
188.477 63.8247 188.559 63.7417 188.661 63.7417 cv
188.763 63.7417 188.846 63.8247 188.846 63.9258 cv
188.846 81.5435 li
188.846 81.645 188.763 81.7275 188.661 81.7275 cv
cp
f
180.062 57.1958 mo
179.053 57.1958 178.232 58.0161 178.232 59.0244 cv
178.232 60.0322 179.053 60.8525 180.062 60.8525 cv
181.069 60.8525 181.889 60.0322 181.889 59.0244 cv
181.889 58.0161 181.069 57.1958 180.062 57.1958 cv
cp
180.062 61.2212 mo
178.85 61.2212 177.864 60.2354 177.864 59.0244 cv
177.864 57.813 178.85 56.8276 180.062 56.8276 cv
181.271 56.8276 182.257 57.813 182.257 59.0244 cv
182.257 60.2354 181.271 61.2212 180.062 61.2212 cv
cp
f
182.504 59.8071 mo
182.162 59.8071 181.883 60.0864 181.883 60.4297 cv
181.883 60.772 182.162 61.0513 182.504 61.0513 cv
182.847 61.0513 183.126 60.772 183.126 60.4297 cv
183.126 60.0864 182.847 59.8071 182.504 59.8071 cv
cp
182.504 61.4194 mo
181.959 61.4194 181.515 60.9756 181.515 60.4297 cv
181.515 59.8838 181.959 59.439 182.504 59.439 cv
183.05 59.439 183.495 59.8838 183.495 60.4297 cv
183.495 60.9756 183.05 61.4194 182.504 61.4194 cv
cp
f
177.617 59.8066 mo
177.274 59.8066 176.995 60.0859 176.995 60.4282 cv
176.995 60.7705 177.274 61.0498 177.617 61.0498 cv
177.959 61.0498 178.238 60.7705 178.238 60.4282 cv
178.238 60.0859 177.959 59.8066 177.617 59.8066 cv
cp
177.617 61.418 mo
177.072 61.418 176.627 60.9741 176.627 60.4282 cv
176.627 59.8823 177.072 59.438 177.617 59.438 cv
178.162 59.438 178.607 59.8823 178.607 60.4282 cv
178.607 60.9741 178.162 61.418 177.617 61.418 cv
cp
f
186.258 108.57 mo
171.46 108.57 li
171.358 108.57 171.276 108.487 171.276 108.386 cv
171.276 108.284 171.358 108.202 171.46 108.202 cv
186.258 108.202 li
186.36 108.202 186.442 108.284 186.442 108.386 cv
186.442 108.487 186.36 108.57 186.258 108.57 cv
cp
1 1 1 rgb
f
161.291 108.57 mo
99.7148 108.57 li
99.6123 108.57 99.5303 108.487 99.5303 108.386 cv
99.5303 108.284 99.6123 108.202 99.7148 108.202 cv
161.291 108.202 li
161.393 108.202 161.475 108.284 161.475 108.386 cv
161.475 108.487 161.393 108.57 161.291 108.57 cv
cp
f
85.6504 108.57 mo
77.7798 108.57 li
77.6777 108.57 77.5957 108.487 77.5957 108.386 cv
77.5957 108.284 77.6777 108.202 77.7798 108.202 cv
85.6504 108.202 li
85.7524 108.202 85.8345 108.284 85.8345 108.386 cv
85.8345 108.487 85.7524 108.57 85.6504 108.57 cv
cp
f
61.4575 108.57 mo
56.498 108.57 li
56.396 108.57 56.314 108.487 56.314 108.386 cv
56.314 108.284 56.396 108.202 56.498 108.202 cv
61.4575 108.202 li
61.5601 108.202 61.6421 108.284 61.6421 108.386 cv
61.6421 108.487 61.5601 108.57 61.4575 108.57 cv
cp
f
93.3911 96.2505 mo
93.3896 96.2505 93.3896 96.2505 93.3882 96.2505 cv
93.2861 96.249 93.2056 96.165 93.207 96.0635 cv
93.2847 91.4443 97.709 86.3413 106.356 80.8975 cv
106.441 80.8428 106.556 80.8682 106.609 80.9561 cv
106.664 81.0415 106.638 81.1553 106.552 81.21 cv
98.0166 86.5825 93.6514 91.582 93.5752 96.0693 cv
93.5737 96.1699 93.4917 96.2505 93.3911 96.2505 cv
cp
.282353 0 0 rgb
f
92.7407 48.5234 mo
92.7061 48.5234 92.6704 48.5132 92.6401 48.4932 cv
83.5854 42.5479 li
83.5005 42.4917 83.4761 42.3779 83.5322 42.2925 cv
83.5884 42.2085 83.7031 42.1846 83.7866 42.2397 cv
92.8413 48.1851 li
92.9263 48.2412 92.9507 48.355 92.8945 48.4404 cv
92.8584 48.4937 92.8013 48.5234 92.7407 48.5234 cv
cp
f
99.7148 55.7324 mo
99.6802 55.7324 99.644 55.7227 99.6123 55.7017 cv
93.7593 51.8076 li
93.6743 51.7515 93.6514 51.6367 93.7075 51.5522 cv
93.7637 51.4673 93.8774 51.4434 93.9639 51.501 cv
99.8169 55.395 li
99.9019 55.4512 99.9248 55.5654 99.8687 55.6504 cv
99.8325 55.7036 99.7734 55.7324 99.7148 55.7324 cv
cp
f
87.7007 22.0269 mo
87.6113 22.0269 87.5337 21.9624 87.519 21.8726 cv
87.2168 20.0527 li
87.2012 19.9634 87.2529 19.877 87.3394 19.8481 cv
87.3608 19.8398 87.9189 19.6279 87.8154 18.7852 cv
87.8027 18.6846 87.8745 18.5923 87.9751 18.5801 cv
88.0918 18.5679 88.168 18.6396 88.1812 18.7402 cv
88.2773 19.5239 87.9019 19.9556 87.6025 20.1294 cv
87.8818 21.812 li
87.8989 21.9131 87.8315 22.0073 87.7305 22.0244 cv
87.7207 22.0259 87.7104 22.0269 87.7007 22.0269 cv
cp
1 1 1 rgb
f
101.778 46.2075 mo
101.697 46.2075 101.623 46.1538 101.6 46.0718 cv
101.421 45.4146 li
101.395 45.3169 101.453 45.2153 101.55 45.189 cv
101.656 45.1606 101.75 45.2197 101.778 45.3184 cv
101.957 45.9751 li
101.982 46.0732 101.925 46.1743 101.827 46.2012 cv
101.81 46.2056 101.793 46.2075 101.778 46.2075 cv
cp
.282353 0 0 rgb
f
106.167 78.8711 mo
106.115 78.8711 106.062 78.8496 106.025 78.8062 cv
102.919 75.2324 103.577 70.1587 105.502 66.957 cv
107.485 63.6577 106.914 60.2549 104.078 58.4883 cv
103.99 58.4336 103.962 58.3174 104.018 58.2295 cv
104.073 58.1401 104.19 58.1138 104.277 58.1689 cv
107.301 60.0522 107.923 63.6621 105.825 67.1514 cv
104.491 69.3691 102.875 74.6084 106.309 78.5591 cv
106.377 78.6377 106.37 78.7568 106.291 78.8252 cv
106.255 78.856 106.211 78.8711 106.167 78.8711 cv
cp
.827451 .188235 .396078 rgb
f
92.3398 94.1123 mo
92.2393 94.1123 92.1558 94.0332 92.1514 93.9316 cv
91.9907 90.0283 93.1201 85.6802 95.5083 81.0044 cv
95.0771 80.4355 92.8247 77.3765 90.3438 72.4365 cv
90.2969 72.3433 90.334 72.2305 90.4272 72.1836 cv
90.5205 72.1353 90.6328 72.1743 90.6802 72.2671 cv
93.4087 77.7002 95.854 80.8374 95.8784 80.8682 cv
95.9238 80.9258 95.9316 81.0049 95.8979 81.0703 cv
93.5024 85.728 92.3687 90.0493 92.5278 93.916 cv
92.5322 94.02 92.4517 94.1079 92.3477 94.1123 cv
92.3447 94.1123 92.3423 94.1123 92.3398 94.1123 cv
cp
f
271.046 23.6641 mo
265.568 26.0229 li
262.434 18.7437 li
262.255 18.3276 262.447 17.8452 262.863 17.6665 cv
266.835 15.9561 li
267.251 15.7769 267.733 15.9692 267.913 16.3848 cv
271.046 23.6641 li
cp
.282353 0 0 rgb
f
271.046 23.6641 mo
265.568 26.0229 li
268.928 30.1641 li
271.745 28.9512 li
271.046 23.6641 li
cp
f
268.026 27.9424 mo
267.955 27.9424 267.887 27.9009 267.857 27.8311 cv
267.816 27.7373 267.859 27.6294 267.953 27.5894 cv
270.204 26.6206 li
270.301 26.5815 270.408 26.623 270.446 26.7168 cv
270.487 26.8101 270.444 26.918 270.35 26.9585 cv
268.1 27.9277 li
268.075 27.9375 268.051 27.9424 268.026 27.9424 cv
cp
1 1 1 rgb
f
252.398 28.8735 mo
264.544 23.6445 li
265.568 26.0229 li
253.423 31.2515 li
252.766 31.5347 252.004 31.231 251.722 30.5742 cv
251.722 30.5742 li
251.438 29.9175 251.742 29.1563 252.398 28.8735 cv
cp
.282353 0 0 rgb
f
273.692 33.5142 mo
273.674 33.5142 273.655 33.5117 273.637 33.5059 cv
273.54 33.4751 273.487 33.3711 273.517 33.2739 cv
273.648 32.8633 273.654 32.5488 273.536 32.3389 cv
273.366 32.0352 272.929 31.9302 272.507 31.8281 cv
272.064 31.7207 271.606 31.6104 271.431 31.2446 cv
271.31 30.9956 271.344 30.6748 271.536 30.2632 cv
271.581 30.1719 271.686 30.1333 271.78 30.1743 cv
271.873 30.2168 271.913 30.3267 271.87 30.4189 cv
271.73 30.7197 271.694 30.9434 271.762 31.0845 cv
271.862 31.293 272.218 31.3794 272.593 31.4697 cv
273.069 31.585 273.607 31.7153 273.856 32.1582 cv
274.029 32.4648 274.034 32.8672 273.868 33.3862 cv
273.844 33.4648 273.77 33.5142 273.692 33.5142 cv
cp
1 .454902 .262745 rgb
f
271.932 34.7505 mo
271.898 34.7505 271.865 34.7417 271.835 34.7231 cv
271.749 34.6704 271.721 34.5566 271.774 34.4697 cv
272.037 34.041 272.127 33.6992 272.051 33.4253 cv
271.941 33.0352 271.484 32.7993 271.042 32.5708 cv
270.589 32.3359 270.119 32.0928 270.025 31.6543 cv
269.962 31.3555 270.084 31.0181 270.4 30.6226 cv
270.464 30.5435 270.579 30.5298 270.66 30.5938 cv
270.739 30.6567 270.751 30.7729 270.688 30.8525 cv
270.449 31.1519 270.347 31.396 270.386 31.5776 cv
270.442 31.8462 270.816 32.0391 271.212 32.2432 cv
271.7 32.4956 272.254 32.7822 272.405 33.3267 cv
272.511 33.7036 272.408 34.1411 272.088 34.6626 cv
272.054 34.7188 271.993 34.7505 271.932 34.7505 cv
cp
f
269.792 34.9751 mo
269.746 34.9751 269.7 34.9575 269.664 34.9238 cv
269.59 34.8535 269.589 34.7368 269.66 34.6631 cv
269.958 34.3525 270.101 34.0728 270.088 33.8325 cv
270.068 33.4849 269.723 33.1978 269.389 32.9209 cv
269.04 32.6294 268.677 32.3281 268.68 31.9224 cv
268.681 31.646 268.854 31.3726 269.206 31.0879 cv
269.284 31.0254 269.4 31.0361 269.465 31.1152 cv
269.529 31.1943 269.516 31.3101 269.437 31.374 cv
269.179 31.583 269.048 31.7676 269.048 31.9248 cv
269.045 32.1563 269.327 32.3901 269.625 32.6377 cv
270 32.9497 270.428 33.3042 270.457 33.8115 cv
270.476 34.1631 270.303 34.5254 269.924 34.918 cv
269.888 34.9561 269.841 34.9751 269.792 34.9751 cv
cp
f
244.707 49.1914 mo
241.015 45.0537 239.1 41.3779 237.981 37.8589 cv
236.893 34.436 237.886 31.6313 240.944 29.748 cv
245.105 27.1851 252.629 23.6587 261.044 21.5596 cv
261.589 21.4238 262.172 21.627 262.514 22.0718 cv
263.274 23.061 li
264.466 24.6123 264.804 26.7065 264.002 28.4912 cv
263.704 29.1538 263.315 29.6279 262.818 29.5586 cv
262.194 30.3213 261.595 29.8813 261.422 28.7368 cv
261.352 30.3354 260.612 30.2813 260.057 29.7261 cv
259.78 31.2866 258.67 30.3853 258.531 29.1021 cv
258.393 27.8188 257.283 26.8477 257.283 26.8477 cv
252.375 29.2881 249.966 33.4585 245.505 36.2368 cv
244.707 49.1914 li
cp
.929412 .533333 .427451 rgb
f
280.019 40.7598 mo
297.394 42.771 284.007 79.439 287.336 87.022 cv
287.336 87.022 282.157 90.2817 275.591 85.9121 cv
269.025 81.543 262.194 88.8252 262.194 88.8252 cv
260.429 86.9253 254.133 75.4546 258.389 52.9263 cv
262.712 30.041 279.36 34.4482 280.019 40.7598 cv
cp
.282353 0 0 rgb
f
276.697 99.6875 mo
276.697 67.166 li
274.422 64.0078 271.982 60.9824 269.454 58.0347 cv
269.454 58.0347 li
269.979 57.0659 269.839 55.8804 269.12 55.0459 cv
267.26 52.8906 264.167 49.8374 262.471 48.1924 cv
261.783 47.5249 260.708 47.46 259.947 48.0425 cv
259.945 48.0439 li
255.181 43.5229 250.104 39.3242 244.712 35.5288 cv
244.712 71.5264 li
228.177 91.229 242.942 99.5986 235.889 124.835 cv
255.388 124.835 li
255.576 120.591 li
270.685 120.591 li
271.714 105.8 268.051 87.5596 258.648 76.2759 cv
270.946 71.2783 276.697 99.6875 276.697 99.6875 cv
cp
.827451 .188235 .396078 rgb
f
245.351 65.2886 mo
245.264 65.2886 245.187 65.2275 245.169 65.1396 cv
245.15 65.0396 245.215 64.9434 245.316 64.9238 cv
250.375 63.9399 254.047 59.4854 254.047 54.3311 cv
254.047 49.1782 250.375 44.7227 245.316 43.7383 cv
245.215 43.7188 245.15 43.6221 245.169 43.522 cv
245.188 43.4224 245.287 43.3472 245.385 43.377 cv
250.618 44.395 254.415 49.002 254.415 54.3311 cv
254.415 59.6606 250.618 64.2681 245.385 65.2852 cv
245.374 65.2871 245.362 65.2886 245.351 65.2886 cv
cp
.929412 .533333 .427451 rgb
f
238.949 104.637 mo
238.86 104.637 238.781 104.571 238.767 104.48 cv
238.752 104.38 238.821 104.286 238.922 104.271 cv
240.814 103.984 242.539 103.025 243.779 101.571 cv
245.73 99.2808 246.223 96.1318 245.062 93.3545 cv
243.899 90.5776 241.312 88.7178 238.311 88.5005 cv
238.098 88.4863 237.892 88.4839 237.679 88.4795 cv
237.677 88.4795 li
237.577 88.4795 237.493 88.3984 237.493 88.2969 cv
237.493 88.1763 237.614 88.1113 237.73 88.1113 cv
237.931 88.1113 238.133 88.1187 238.336 88.1338 cv
241.477 88.3604 244.185 90.3062 245.401 93.2119 cv
246.617 96.1191 246.102 99.4131 244.059 101.81 cv
242.762 103.332 240.957 104.335 238.977 104.635 cv
238.968 104.636 238.958 104.637 238.949 104.637 cv
cp
f
245.115 123.712 mo
245.037 123.712 244.963 123.663 244.939 123.584 cv
243.595 119.362 244.713 114.797 247.857 111.671 cv
251.169 108.377 256.119 107.354 260.465 109.065 cv
264.812 110.776 267.737 114.898 267.916 119.567 cv
267.92 119.669 267.841 119.754 267.739 119.758 cv
267.634 119.772 267.552 119.684 267.547 119.581 cv
267.375 115.059 264.542 111.065 260.33 109.408 cv
256.12 107.751 251.325 108.742 248.116 111.933 cv
245.071 114.96 243.988 119.382 245.29 123.472 cv
245.32 123.569 245.267 123.672 245.171 123.704 cv
245.152 123.709 245.133 123.712 245.115 123.712 cv
cp
f
264.45 98.0933 mo
262.903 98.0933 261.365 97.604 260.097 96.6602 cv
257.867 95.0024 256.769 92.168 257.299 89.4395 cv
257.784 86.9468 259.567 84.8594 261.953 83.9927 cv
262.05 83.9604 262.153 84.0063 262.189 84.1035 cv
262.224 84.1992 262.175 84.3042 262.08 84.3394 cv
259.813 85.1616 258.12 87.1431 257.661 89.5098 cv
257.158 92.0996 258.201 94.791 260.316 96.3652 cv
262.234 97.7925 264.801 98.1235 267.017 97.23 cv
267.111 97.1904 267.218 97.2373 267.257 97.3315 cv
267.294 97.4258 267.248 97.5337 267.155 97.5708 cv
266.286 97.9214 265.366 98.0933 264.45 98.0933 cv
cp
f
273.684 76.1509 mo
270.257 76.1509 267.1 74.0205 265.893 70.665 cv
264.458 66.6772 266.248 62.2681 270.055 60.4077 cv
270.147 60.3652 270.257 60.4009 270.301 60.4922 cv
270.346 60.5835 270.309 60.6938 270.216 60.7383 cv
266.578 62.5161 264.868 66.7295 266.238 70.5396 cv
267.609 74.3491 271.61 76.5073 275.549 75.5605 cv
275.648 75.5396 275.747 75.5981 275.77 75.6963 cv
275.795 75.7959 275.734 75.895 275.635 75.9189 cv
274.983 76.0757 274.329 76.1509 273.684 76.1509 cv
cp
f
257.365 119.389 mo
257.269 119.389 257.187 119.313 257.181 119.216 cv
254.654 78.4502 li
254.648 78.3491 254.726 78.2612 254.827 78.2549 cv
254.939 78.2617 255.017 78.3252 255.022 78.4272 cv
257.549 119.193 li
257.555 119.294 257.477 119.382 257.376 119.388 cv
257.372 119.389 257.369 119.389 257.365 119.389 cv
cp
.282353 0 0 rgb
f
257.753 75.9038 mo
257.737 75.9038 257.72 75.9014 257.705 75.897 cv
245.138 72.4087 li
245.04 72.3813 244.982 72.2798 245.01 72.1821 cv
245.036 72.0845 245.139 72.0288 245.235 72.0532 cv
257.802 75.542 li
257.9 75.5693 257.958 75.6704 257.93 75.7686 cv
257.909 75.8506 257.834 75.9038 257.753 75.9038 cv
cp
f
257.93 77.9575 mo
257.915 77.9575 257.897 77.9556 257.881 77.9512 cv
244.102 74.1411 li
244.004 74.1138 243.946 74.0122 243.974 73.9146 cv
244 73.8164 244.102 73.7598 244.2 73.7856 cv
257.979 77.5957 li
258.077 77.623 258.135 77.7246 258.107 77.8223 cv
258.085 77.9043 258.011 77.9575 257.93 77.9575 cv
cp
f
267.977 57.793 mo
264.317 61.7979 257.37 66.2192 257.37 66.2192 cv
257.37 66.2192 261.091 55.7891 261.636 50.6831 cv
261.702 50.062 262.453 49.8052 262.879 50.2617 cv
264.467 51.9619 266.464 54.2544 267.954 55.8296 cv
268.475 56.3813 268.489 57.2324 267.977 57.793 cv
cp
1 1 1 rgb
f
255.217 73.3872 mo
255.207 73.3872 255.195 73.3862 255.184 73.3843 cv
255.084 73.3662 255.018 73.2705 255.035 73.1704 cv
255.448 70.8564 256.141 68.3921 256.755 67.0396 cv
256.798 66.9478 256.907 66.9053 257 66.9482 cv
257.091 66.9902 257.133 67.0996 257.091 67.1924 cv
256.496 68.4995 255.801 70.9844 255.398 73.2354 cv
255.382 73.3247 255.304 73.3872 255.217 73.3872 cv
cp
.282353 0 0 rgb
f
256.494 64.7339 mo
256.468 64.7339 256.441 64.7285 256.417 64.7168 cv
256.325 64.6738 256.284 64.5635 256.328 64.4717 cv
257.077 62.875 256.962 60.5298 256.841 58.0464 cv
256.68 54.7427 256.513 51.3262 258.241 48.9063 cv
258.3 48.8228 258.417 48.8018 258.497 48.8638 cv
258.581 48.9229 258.599 49.0381 258.541 49.1206 cv
256.887 51.4365 257.05 54.7876 257.208 58.0283 cv
257.332 60.5586 257.448 62.9482 256.661 64.6284 cv
256.629 64.6953 256.563 64.7339 256.494 64.7339 cv
cp
f
258.76 66.8613 mo
258.707 66.8613 258.654 66.8384 258.618 66.7935 cv
258.553 66.7153 258.565 66.5996 258.644 66.5347 cv
259.214 66.0684 260.567 65.8721 262.284 65.623 cv
265.25 65.1938 269.31 64.6045 270.421 62.1616 cv
270.464 62.0693 270.575 62.0264 270.665 62.0698 cv
270.757 62.1123 270.799 62.2212 270.757 62.314 cv
269.562 64.9404 265.386 65.5454 262.337 65.9878 cv
260.743 66.2188 259.368 66.418 258.877 66.8198 cv
258.842 66.8477 258.802 66.8613 258.76 66.8613 cv
cp
f
264.432 75.4375 mo
264.368 75.4375 264.306 75.4038 264.272 75.3438 cv
264.222 75.2554 264.254 75.1426 264.342 75.0928 cv
268.383 72.814 271.34 68.9209 272.454 64.4131 cv
272.478 64.3154 272.572 64.2549 272.677 64.2778 cv
272.774 64.3022 272.835 64.4023 272.811 64.501 cv
271.674 69.1074 268.652 73.085 264.523 75.4136 cv
264.494 75.4297 264.462 75.4375 264.432 75.4375 cv
cp
f
245.374 70.7334 mo
245.338 70.7334 245.3 70.7222 245.269 70.7007 cv
245.185 70.6426 245.165 70.5283 245.223 70.4438 cv
246.634 68.4014 li
246.691 68.3188 246.807 68.2979 246.89 68.355 cv
246.974 68.4131 246.994 68.5273 246.936 68.6118 cv
245.525 70.6543 li
245.489 70.7051 245.433 70.7334 245.374 70.7334 cv
cp
f
242.002 124.839 mo
242.187 136.868 244.519 140.197 245.166 147.595 cv
245.759 154.377 244.573 157.817 244.546 161.406 cv
244.542 161.954 245.007 162.392 245.555 162.392 cv
254.793 162.392 li
255.407 162.392 255.788 161.711 255.45 161.199 cv
254.958 160.455 254.171 159.452 253.003 158.462 cv
250.715 156.52 248.883 152.202 250.701 142.906 cv
252.347 134.489 252.688 124.839 252.688 124.839 cv
242.002 124.839 li
cp
.929412 .533333 .427451 rgb
f
267.102 120.594 mo
268.155 131.55 265.427 147.086 267.896 154.508 cv
268.961 157.711 273.109 159.617 277.48 160.75 cv
277.889 160.856 278.162 161.248 278.119 161.664 cv
278.075 162.08 277.729 162.392 277.309 162.392 cv
262.373 162.392 li
261.853 162.392 261.357 162.146 261.036 161.729 cv
260.714 161.313 260.605 160.773 260.741 160.274 cv
261.321 158.145 261.962 154.638 261.356 150.832 cv
260.375 144.659 255.868 131.456 256.835 120.594 cv
267.102 120.594 li
cp
f
264.286 159.811 mo
264.227 159.811 264.169 159.782 264.133 159.73 cv
263.782 159.212 263.26 158.823 262.666 158.637 cv
262.567 158.606 262.514 158.503 262.544 158.406 cv
262.575 158.309 262.686 158.257 262.775 158.285 cv
263.45 158.496 264.04 158.936 264.438 159.523 cv
264.496 159.607 264.473 159.723 264.389 159.779 cv
264.357 159.801 264.321 159.811 264.286 159.811 cv
cp
.282353 0 0 rgb
f
253.775 161.709 mo
253.72 161.709 253.667 161.685 253.631 161.639 cv
252.66 160.414 li
252.597 160.334 252.609 160.218 252.688 160.154 cv
252.769 160.092 252.886 160.105 252.948 160.185 cv
253.919 161.41 li
253.982 161.49 253.969 161.605 253.89 161.669 cv
253.855 161.695 253.815 161.709 253.775 161.709 cv
cp
f
252.027 161.709 mo
251.972 161.709 251.919 161.685 251.883 161.639 cv
250.912 160.414 li
250.848 160.334 250.861 160.218 250.94 160.154 cv
251.021 160.092 251.138 160.105 251.199 160.185 cv
252.171 161.41 li
252.234 161.49 252.221 161.605 252.142 161.669 cv
252.107 161.695 252.067 161.709 252.027 161.709 cv
cp
f
250.28 161.709 mo
250.226 161.709 250.172 161.685 250.136 161.639 cv
249.165 160.414 li
249.102 160.334 249.115 160.218 249.194 160.154 cv
249.274 160.092 249.391 160.105 249.453 160.185 cv
250.424 161.41 li
250.487 161.49 250.474 161.605 250.395 161.669 cv
250.361 161.695 250.32 161.709 250.28 161.709 cv
cp
f
260.011 29.3442 mo
260.008 29.3442 260.003 29.3442 260 29.3442 cv
259.898 29.3384 259.821 29.251 259.827 29.1489 cv
259.897 27.9282 259.517 26.7065 258.813 25.8809 cv
258.746 25.8037 258.755 25.687 258.833 25.6211 cv
258.91 25.5557 259.028 25.5645 259.091 25.6421 cv
259.857 26.5376 260.27 27.8569 260.195 29.1709 cv
260.189 29.2686 260.107 29.3442 260.011 29.3442 cv
cp
f
261.24 28.4072 mo
261.235 28.4072 261.232 28.4072 261.228 28.4072 cv
261.127 28.4009 261.05 28.313 261.055 28.2119 cv
261.114 27.2598 261.114 25.8843 260.447 24.9302 cv
260.389 24.8472 260.409 24.7319 260.493 24.6733 cv
260.575 24.6152 260.69 24.6348 260.749 24.7188 cv
261.483 25.7671 261.486 27.2275 261.424 28.2349 cv
261.418 28.3315 261.336 28.4072 261.24 28.4072 cv
cp
f
262.973 28.8413 mo
262.953 28.8413 262.933 28.8384 262.915 28.8311 cv
262.818 28.7988 262.766 28.6938 262.799 28.5972 cv
263.321 27.0649 263.041 25.3857 262.048 24.1055 cv
261.986 24.0244 262 23.9087 262.081 23.8472 cv
262.161 23.7832 262.277 23.7993 262.339 23.8794 cv
263.408 25.2583 263.71 27.0664 263.147 28.7168 cv
263.122 28.793 263.05 28.8413 262.973 28.8413 cv
cp
f
278.363 42.4443 mo
278.276 49.3838 274.408 55.4692 270.279 52.4844 cv
269.815 53.4409 269.293 54.4258 268.598 55.3677 cv
268.381 55.6865 268.149 55.9907 267.888 56.2949 cv
266.816 57.541 264.788 57.2075 264.15 55.6865 cv
262.904 52.731 li
262.557 51.9194 262.774 50.9775 263.44 50.3979 cv
267.149 47.1382 li
267.149 47.1382 265.048 43.9072 267.584 42.4443 cv
269.685 41.2417 270.279 44.2261 270.279 44.2261 cv
270.279 44.2261 274.075 41.082 278.363 42.4443 cv
cp
.929412 .533333 .427451 rgb
f
269.303 45.3135 mo
269.204 45.3135 269.123 45.2354 269.119 45.1357 cv
269.097 44.5078 268.944 43.9028 268.668 43.3379 cv
268.624 43.2466 268.661 43.1357 268.753 43.0913 cv
268.845 43.0469 268.956 43.0854 268.999 43.1753 cv
269.298 43.7876 269.462 44.4429 269.487 45.123 cv
269.49 45.2241 269.411 45.3101 269.31 45.3135 cv
269.307 45.3135 269.304 45.3135 269.303 45.3135 cv
cp
.282353 0 0 rgb
f
274.505 46.146 mo
274.435 46.146 274.367 46.105 274.337 46.0366 cv
273.98 45.2329 273.215 44.6904 272.34 44.6191 cv
272.256 44.6128 272.188 44.5508 272.173 44.4683 cv
272.009 43.5591 li
271.99 43.459 272.058 43.3633 272.157 43.3452 cv
272.264 43.3198 272.354 43.394 272.372 43.4941 cv
272.511 44.2676 li
273.461 44.3936 274.281 45.0044 274.674 45.8867 cv
274.715 45.9795 274.674 46.0884 274.58 46.1299 cv
274.556 46.1406 274.53 46.146 274.505 46.146 cv
cp
f
276.031 44.3774 mo
275.985 44.3774 275.937 44.3599 275.901 44.3242 cv
275.271 43.7026 274.307 43.5356 273.507 43.9092 cv
273.411 43.9502 273.306 43.9116 273.262 43.8198 cv
273.219 43.728 273.259 43.6177 273.352 43.5757 cv
274.291 43.1382 275.419 43.3325 276.16 44.0625 cv
276.232 44.1338 276.233 44.25 276.162 44.3228 cv
276.125 44.3599 276.078 44.3774 276.031 44.3774 cv
cp
f
277.835 46.8359 mo
277.833 46.8359 277.832 46.8359 277.831 46.8359 cv
277.73 46.8335 277.649 46.7495 277.651 46.6475 cv
277.661 46.2173 277.544 45.7983 277.314 45.4355 cv
277.259 45.3501 277.285 45.2358 277.37 45.1816 cv
277.459 45.1284 277.572 45.1533 277.625 45.2388 cv
277.894 45.6626 278.031 46.1523 278.019 46.6558 cv
278.016 46.7559 277.934 46.8359 277.835 46.8359 cv
cp
f
277.284 48.625 mo
277.222 48.625 277.163 48.5942 277.128 48.5396 cv
276.926 48.2173 276.649 47.937 276.329 47.7295 cv
276.244 47.6733 276.219 47.5596 276.275 47.4741 cv
276.329 47.3892 276.442 47.3652 276.53 47.4199 cv
276.852 47.6299 277.136 47.9033 277.356 48.2178 cv
277.589 48.1323 li
277.678 48.0962 277.791 48.145 277.825 48.2407 cv
277.861 48.3364 277.812 48.4424 277.715 48.4775 cv
277.347 48.6133 li
277.327 48.6216 277.306 48.625 277.284 48.625 cv
cp
f
274.375 49.2744 mo
274.195 49.2744 274.019 49.2041 273.888 49.0732 cv
273.146 48.3335 273.105 48.125 273.09 48.0464 cv
273.071 47.9468 273.136 47.8496 273.236 47.8306 cv
273.332 47.8071 273.432 47.876 273.452 47.9761 cv
273.455 47.9946 273.504 48.1709 274.147 48.812 cv
274.228 48.8916 274.34 48.9209 274.452 48.8975 cv
274.56 48.8716 274.649 48.7905 274.686 48.6841 cv
274.848 48.1968 275.028 47.7754 275.219 47.4307 cv
275.268 47.3428 275.379 47.3101 275.469 47.3589 cv
275.559 47.4082 275.59 47.52 275.542 47.6094 cv
275.361 47.9346 275.19 48.3359 275.034 48.8018 cv
274.958 49.0308 274.77 49.2007 274.536 49.2559 cv
274.482 49.269 274.429 49.2744 274.375 49.2744 cv
cp
f
272.581 50.6719 mo
272.547 50.6719 272.513 50.6631 272.482 50.6436 cv
271.745 50.1855 271.233 49.4321 271.081 48.5776 cv
271.064 48.4775 271.13 48.3818 271.229 48.3638 cv
271.334 48.3379 271.426 48.4126 271.444 48.5127 cv
271.578 49.2646 272.028 49.9277 272.678 50.3315 cv
272.765 50.3848 272.791 50.4985 272.737 50.5845 cv
272.701 50.6406 272.642 50.6719 272.581 50.6719 cv
cp
.827451 .188235 .396078 rgb
f
270.279 52.4844 mo
269.815 53.4409 269.293 54.4258 268.598 55.3677 cv
267.468 53.2959 268.83 50.4849 268.83 50.4849 cv
268.83 50.4849 269.598 52.0933 270.279 52.4844 cv
cp
f
280.885 40.1113 mo
280.859 40.1113 280.835 40.1064 280.811 40.0957 cv
280.717 40.0537 280.675 39.9453 280.717 39.8525 cv
281.63 37.8066 li
281.671 37.7114 281.782 37.6714 281.874 37.7129 cv
281.967 37.7544 282.009 37.8633 281.967 37.9561 cv
281.054 40.002 li
281.023 40.0713 280.956 40.1113 280.885 40.1113 cv
cp
.282353 0 0 rgb
f
281.343 40.4307 mo
281.251 40.4307 281.171 40.3633 281.16 40.2695 cv
281.147 40.1689 281.219 40.0771 281.32 40.064 cv
283.845 39.7446 li
283.94 39.7324 284.038 39.8037 284.051 39.9043 cv
284.063 40.0049 283.992 40.0972 283.891 40.1099 cv
281.366 40.4292 li
281.358 40.4302 281.35 40.4307 281.343 40.4307 cv
cp
f
278.823 42.2861 mo
278.771 42.2861 278.721 42.2646 278.684 42.2231 cv
278.618 42.146 278.626 42.0293 278.703 41.9634 cv
279.468 41.2998 li
279.543 41.2324 279.659 41.2407 279.729 41.3179 cv
279.794 41.395 279.786 41.5117 279.71 41.5776 cv
278.944 42.2407 li
278.91 42.271 278.867 42.2861 278.823 42.2861 cv
cp
.929412 .533333 .427451 rgb
f
289.887 81.3071 mo
289.822 81.3071 289.757 81.272 289.724 81.21 cv
287.539 77.1504 288.137 71.8296 288.715 66.6846 cv
289.176 62.585 289.653 58.3462 288.737 54.7427 cv
288.712 54.644 288.771 54.5444 288.869 54.519 cv
288.971 54.4917 289.068 54.5542 289.094 54.6523 cv
290.026 58.3203 289.545 62.5933 289.081 66.7256 cv
288.508 71.8154 287.917 77.0776 290.049 81.0356 cv
290.097 81.125 290.063 81.2368 289.974 81.2847 cv
289.945 81.2998 289.917 81.3071 289.887 81.3071 cv
cp
.282353 0 0 rgb
f
273.811 61.96 mo
273.763 61.96 273.715 61.9419 273.68 61.9053 cv
273.607 61.8335 273.609 61.7168 273.681 61.645 cv
278.233 57.1372 280.089 50.7192 278.644 44.4775 cv
278.621 44.3784 278.683 44.2788 278.782 44.2568 cv
278.89 44.2324 278.98 44.2964 279.003 44.394 cv
280.477 50.7617 278.584 57.3081 273.94 61.9067 cv
273.904 61.9419 273.858 61.96 273.811 61.96 cv
cp
.376471 .262745 .321569 rgb
f
270.277 41.9546 mo
270.225 41.9546 270.173 41.9321 270.136 41.8892 cv
270.071 41.8115 270.08 41.6958 270.157 41.6304 cv
272.468 39.6748 275.799 39.3418 278.452 40.8071 cv
278.542 40.856 278.573 40.9683 278.524 41.0576 cv
278.475 41.147 278.363 41.1807 278.274 41.1294 cv
275.757 39.7388 272.592 40.0532 270.396 41.9106 cv
270.362 41.9404 270.318 41.9546 270.277 41.9546 cv
cp
f
262.193 46.6313 mo
262.184 46.6313 262.173 46.6309 262.163 46.6294 cv
262.064 46.6128 261.995 46.5181 262.012 46.418 cv
262.601 42.8193 264.953 39.813 268.304 38.3755 cv
271.652 36.938 275.454 37.3071 278.466 39.3589 cv
278.552 39.4165 278.573 39.5308 278.516 39.6152 cv
278.458 39.7007 278.343 39.7202 278.259 39.6641 cv
275.352 37.6821 271.688 37.3242 268.448 38.7134 cv
265.213 40.1016 262.943 43.0034 262.375 46.4766 cv
262.36 46.5674 262.283 46.6313 262.193 46.6313 cv
cp
f
276.697 67.1611 mo
279.522 70.9771 li
279.522 70.9771 279.984 69.2202 280.955 66.6768 cv
281.926 64.1338 280.955 62.4692 280.955 62.4692 cv
280.955 62.4692 279.707 60.4229 279.429 58.8623 cv
279.152 57.3018 277.175 56.5044 277.487 55.4292 cv
277.799 54.354 280.054 57.8223 280.47 57.8223 cv
280.886 57.8223 281.198 55.7065 280.088 55.6372 cv
278.979 55.5679 278.736 54.7358 278.632 54.3193 cv
277.418 54.458 277.037 53.3833 277.487 53.1055 cv
277.791 52.9189 279.542 52.9839 280.653 53.0459 cv
281.255 53.0796 281.791 53.3994 282.106 53.9131 cv
282.94 55.2734 284.516 58.1953 284.943 61.4634 cv
285.406 65.0005 285.904 70.9053 284.646 77.0752 cv
283.957 80.4517 279.583 82.1216 276.697 79.0527 cv
276.697 67.1611 li
cp
.929412 .533333 .427451 rgb
f
279.707 75.415 mo
279.636 75.415 279.569 75.375 279.539 75.3057 cv
279.498 75.2144 278.544 73.0459 279.118 71.478 cv
279.153 71.3813 279.256 71.332 279.354 71.3687 cv
279.449 71.4028 279.5 71.5088 279.464 71.6045 cv
278.941 73.0317 279.865 75.1348 279.875 75.1563 cv
279.917 75.249 279.875 75.3574 279.782 75.3994 cv
279.757 75.4102 279.731 75.415 279.707 75.415 cv
cp
.282353 0 0 rgb
f
280.885 54.417 mo
280.879 54.417 280.874 54.417 280.87 54.416 cv
279.136 54.2603 li
279.033 54.251 278.958 54.1616 278.969 54.0601 cv
278.978 53.9644 279.057 53.8926 279.151 53.8926 cv
279.157 53.8926 279.163 53.8926 279.167 53.8931 cv
280.901 54.0493 li
281.003 54.0586 281.078 54.1479 281.068 54.2495 cv
281.061 54.3452 280.98 54.417 280.885 54.417 cv
cp
f
282.226 57.9829 mo
282.137 57.9829 282.06 57.9189 282.045 57.8291 cv
281.957 57.3032 281.648 56.479 281.225 55.9219 cv
281.163 55.8408 281.179 55.7256 281.261 55.6636 cv
281.343 55.6025 281.458 55.6191 281.519 55.6987 cv
281.978 56.3037 282.313 57.1982 282.408 57.7686 cv
282.425 57.8696 282.357 57.9639 282.256 57.981 cv
282.246 57.9824 282.236 57.9829 282.226 57.9829 cv
cp
f
246.184 61.96 mo
246.167 61.96 246.149 61.958 246.132 61.9526 cv
246.034 61.9238 245.978 61.8218 246.007 61.7241 cv
247.767 55.7227 250.702 50.2554 254.735 45.4731 cv
254.799 45.3955 254.915 45.3853 254.995 45.4512 cv
255.073 45.5166 255.082 45.6328 255.017 45.7104 cv
251.017 50.4536 248.104 55.876 246.361 61.8276 cv
246.336 61.9082 246.263 61.96 246.184 61.96 cv
cp
f
255.388 125.023 mo
240.843 125.023 li
240.741 125.023 240.659 124.94 240.659 124.839 cv
240.659 124.737 240.741 124.655 240.843 124.655 cv
255.212 124.655 li
255.392 120.586 li
255.396 120.488 255.479 120.41 255.576 120.41 cv
266.688 120.41 li
266.791 120.41 266.873 120.493 266.873 120.594 cv
266.873 120.696 266.791 120.778 266.688 120.778 cv
255.752 120.778 li
255.572 124.847 li
255.568 124.945 255.486 125.023 255.388 125.023 cv
cp
f
276.697 79.4463 mo
276.595 79.4463 276.513 79.3633 276.513 79.2617 cv
276.513 66.2197 li
276.513 66.1182 276.595 66.0356 276.697 66.0356 cv
276.799 66.0356 276.881 66.1182 276.881 66.2197 cv
276.881 79.2617 li
276.881 79.3633 276.799 79.4463 276.697 79.4463 cv
cp
f
244.708 48.625 mo
244.605 48.625 244.523 48.5425 244.523 48.4409 cv
244.523 35.5186 li
244.523 35.4175 244.605 35.3345 244.708 35.3345 cv
244.81 35.3345 244.892 35.4175 244.892 35.5186 cv
244.892 48.4409 li
244.892 48.5425 244.81 48.625 244.708 48.625 cv
cp
f
267.165 25.519 mo
267.093 25.519 267.025 25.4771 266.995 25.4072 cv
266.955 25.314 266.998 25.2061 267.091 25.1655 cv
269.839 23.9829 li
269.938 23.9448 270.042 23.9863 270.083 24.0796 cv
270.123 24.1729 270.08 24.2808 269.986 24.3213 cv
267.238 25.5039 li
267.213 25.5137 267.189 25.519 267.165 25.519 cv
cp
1 1 1 rgb
f
272.833 44.707 mo
272.731 44.707 272.649 44.6245 272.649 44.5229 cv
272.649 43.8599 li
272.649 43.7583 272.731 43.6753 272.833 43.6753 cv
272.936 43.6753 273.018 43.7583 273.018 43.8599 cv
273.018 44.5229 li
273.018 44.6245 272.936 44.707 272.833 44.707 cv
cp
.282353 0 0 rgb
f
396.781 73.1152 mo
395.33 70.4966 391.956 63.644 390.355 58.7524 cv
390.046 57.8076 389.033 57.2578 388.149 56.8022 cv
386.187 55.791 384.136 55.0269 382.04 54.4883 cv
382.04 53.5376 li
382.04 52.6289 381.304 51.8926 380.395 51.8926 cv
369.213 51.8926 li
368.304 51.8926 367.567 52.6289 367.567 53.5376 cv
367.567 54.4551 li
365.316 55.0259 363.118 55.8667 361.021 56.9824 cv
360.471 57.2754 359.81 57.5869 359.604 58.1763 cv
357.536 64.1143 355.186 68.6753 352.337 72.2607 cv
351.945 72.7534 352.146 73.4937 352.402 74.0684 cv
353.649 76.8618 li
361.232 73.8794 li
361.232 73.8794 368.104 78.4385 365.153 82.2646 cv
362.931 85.1479 361.204 85.8384 359.135 90.9639 cv
384.953 87.8203 li
379.166 79.8667 385.279 78.5029 385.369 73.4634 cv
395.309 77.4858 li
396.62 74.8315 li
396.884 74.2964 397.07 73.6372 396.781 73.1152 cv
cp
.827451 .188235 .396078 rgb
f
378.107 46.9102 mo
380.931 46.3359 383.223 44.2783 384.097 41.5327 cv
384.971 38.7871 384.291 35.7832 382.319 33.6821 cv
380.348 31.5806 377.394 30.7109 374.598 31.4087 cv
370.871 30.771 367.251 33.0005 366.143 36.6147 cv
365.034 40.2295 366.783 44.105 370.227 45.6655 cv
378.107 46.9102 li
cp
.282353 0 0 rgb
f
378.474 44.4775 mo
378.474 51.8955 li
370.085 51.8955 li
370.085 44.4775 li
378.474 44.4775 li
cp
.929412 .533333 .427451 rgb
f
378.474 45.0718 mo
378.474 50.2729 li
377.257 50.6499 375.938 50.6206 374.707 50.186 cv
373.012 49.563 371.664 48.2158 371.085 46.5059 cv
378.474 45.0718 li
cp
.282353 0 0 rgb
f
411.264 85.4624 mo
337.836 85.4624 li
337.021 85.4624 336.355 84.7964 336.355 83.9824 cv
336.355 83.9824 li
336.355 83.1689 337.021 82.5029 337.836 82.5029 cv
411.264 82.5029 li
412.077 82.5029 412.743 83.1689 412.743 83.9824 cv
412.743 83.9824 li
412.743 84.7964 412.077 85.4624 411.264 85.4624 cv
cp
f
411.264 85.4624 mo
346.364 85.4624 li
345.55 85.4624 344.884 84.7964 344.884 83.9824 cv
344.884 83.9824 li
344.884 83.1689 345.55 82.5029 346.364 82.5029 cv
411.264 82.5029 li
412.077 82.5029 412.743 83.1689 412.743 83.9824 cv
412.743 83.9824 li
412.743 84.7964 412.077 85.4624 411.264 85.4624 cv
cp
f
393.829 105.53 mo
357.649 105.53 li
356.836 105.53 356.17 104.864 356.17 104.05 cv
356.17 104.05 li
356.17 103.236 356.836 102.571 357.649 102.571 cv
393.829 102.571 li
394.643 102.571 395.309 103.236 395.309 104.05 cv
395.309 104.05 li
395.309 104.864 394.643 105.53 393.829 105.53 cv
cp
.827451 .188235 .396078 rgb
f
337.836 142.798 mo
337.733 142.798 337.651 142.715 337.651 142.614 cv
337.651 85.4624 li
337.651 85.3608 337.733 85.2783 337.836 85.2783 cv
337.938 85.2783 338.02 85.3608 338.02 85.4624 cv
338.02 142.614 li
338.02 142.715 337.938 142.798 337.836 142.798 cv
cp
.282353 0 0 rgb
f
346.343 142.798 mo
346.241 142.798 346.159 142.715 346.159 142.614 cv
346.159 85.4624 li
346.159 85.3608 346.241 85.2783 346.343 85.2783 cv
346.445 85.2783 346.527 85.3608 346.527 85.4624 cv
346.527 142.614 li
346.527 142.715 346.445 142.798 346.343 142.798 cv
cp
f
411.263 142.798 mo
411.161 142.798 411.079 142.715 411.079 142.614 cv
411.079 85.4624 li
411.079 85.3608 411.161 85.2783 411.263 85.2783 cv
411.365 85.2783 411.447 85.3608 411.447 85.4624 cv
411.447 142.614 li
411.447 142.715 411.365 142.798 411.263 142.798 cv
cp
f
348.841 142.798 mo
348.825 142.798 348.811 142.796 348.795 142.792 cv
348.695 142.766 348.637 142.667 348.663 142.568 cv
358.279 105.484 li
358.306 105.385 358.409 105.333 358.504 105.352 cv
358.604 105.378 358.662 105.478 358.637 105.576 cv
349.02 142.66 li
348.998 142.743 348.923 142.798 348.841 142.798 cv
cp
.827451 .188235 .396078 rgb
f
402.328 142.798 mo
402.246 142.798 402.171 142.743 402.149 142.66 cv
392.532 105.576 li
392.507 105.478 392.565 105.378 392.665 105.352 cv
392.761 105.33 392.863 105.384 392.889 105.484 cv
402.506 142.568 li
402.532 142.667 402.474 142.766 402.374 142.792 cv
402.358 142.796 402.344 142.798 402.328 142.798 cv
cp
f
352.657 142.798 mo
352.641 142.798 352.627 142.796 352.61 142.792 cv
352.512 142.766 352.452 142.667 352.479 142.568 cv
362.097 105.484 li
362.123 105.385 362.225 105.333 362.321 105.352 cv
362.421 105.378 362.479 105.478 362.454 105.576 cv
352.835 142.66 li
352.813 142.743 352.739 142.798 352.657 142.798 cv
cp
f
392.941 102.571 mo
365.232 102.571 li
360.967 102.571 357.476 99.0801 357.476 94.814 cv
357.476 94.814 li
357.476 82.7842 400.697 82.7778 400.697 94.814 cv
400.697 94.814 li
400.697 99.0801 397.207 102.571 392.941 102.571 cv
cp
.282353 0 0 rgb
f
364.103 59.7759 mo
360.028 59.7759 li
359.926 59.7759 359.844 59.6929 359.844 59.5918 cv
359.844 59.4902 359.926 59.4072 360.028 59.4072 cv
364.103 59.4072 li
364.205 59.4072 364.287 59.4902 364.287 59.5918 cv
364.287 59.6929 364.205 59.7759 364.103 59.7759 cv
cp
.929412 .533333 .427451 rgb
f
389.748 59.7759 mo
383.731 59.7759 li
383.629 59.7759 383.547 59.6929 383.547 59.5918 cv
383.547 59.4902 383.629 59.4072 383.731 59.4072 cv
389.748 59.4072 li
389.851 59.4072 389.933 59.4902 389.933 59.5918 cv
389.933 59.6929 389.851 59.7759 389.748 59.7759 cv
cp
f
392.709 66.8501 mo
357.113 66.8501 li
357.011 66.8501 356.929 66.7676 356.929 66.666 cv
356.929 66.5649 357.011 66.4819 357.113 66.4819 cv
392.709 66.4819 li
392.812 66.4819 392.894 66.5649 392.894 66.666 cv
392.894 66.7676 392.812 66.8501 392.709 66.8501 cv
cp
f
395.154 72.2603 mo
353.326 72.2603 li
353.224 72.2603 353.142 72.1777 353.142 72.0762 cv
353.142 71.9746 353.224 71.8921 353.326 71.8921 cv
395.154 71.8921 li
395.256 71.8921 395.338 71.9746 395.338 72.0762 cv
395.338 72.1777 395.256 72.2603 395.154 72.2603 cv
cp
f
374.409 66.666 mo
369.132 66.666 li
367.683 55.4517 li
375.858 55.4517 li
374.409 66.666 li
cp
1 1 1 rgb
f
374.926 65.7192 mo
374.798 65.7192 374.668 65.7139 374.54 65.7017 cv
374.439 65.6919 374.364 65.6021 374.374 65.501 cv
374.383 65.3999 374.474 65.3223 374.574 65.3345 cv
375.606 65.4302 376.647 65.0986 377.432 64.4224 cv
377.51 64.356 377.626 64.3643 377.692 64.4419 cv
377.759 64.5186 377.75 64.6353 377.674 64.7017 cv
376.909 65.3584 375.926 65.7192 374.926 65.7192 cv
cp
f
374.729 142.613 mo
372.541 144.75 369.328 142.874 367.945 139.713 cv
367.64 139.004 367.42 138.11 367.293 137.106 cv
366.811 133.599 367.438 128.847 369.152 126.875 cv
372.43 123.139 375.64 130.404 376.06 136.432 cv
376.23 139.091 375.871 141.496 374.729 142.613 cv
cp
.827451 .188235 .396078 rgb
f
377.938 110.958 mo
385.606 92.2026 396.615 88.2725 399.754 92.5576 cv
404.888 99.5688 389.097 111.102 384.409 116.614 cv
380.021 121.775 375.289 129.059 375.433 137.101 cv
375.576 145.144 368.359 143.274 368.264 135.476 cv
368.168 127.677 369.28 128.397 370.693 126.715 cv
372.106 125.033 375.334 117.327 377.938 110.958 cv
cp
.929412 .533333 .427451 rgb
f
374.729 142.613 mo
372.541 144.75 369.328 142.874 367.945 139.713 cv
367.64 139.004 367.42 138.11 367.293 137.106 cv
370.485 133.82 373.904 134.848 376.06 136.432 cv
376.23 139.091 375.871 141.496 374.729 142.613 cv
cp
.827451 .188235 .396078 rgb
f
384.319 99.5 mo
384.28 99.5 384.242 99.4878 384.209 99.4634 cv
384.128 99.4028 384.111 99.2871 384.171 99.2061 cv
389.622 91.9082 395.17 89.9253 398.259 91.2031 cv
398.353 91.2422 398.397 91.3501 398.358 91.4443 cv
398.32 91.5371 398.213 91.5815 398.118 91.5444 cv
395.167 90.3169 389.797 92.2852 384.468 99.4263 cv
384.431 99.4741 384.376 99.5 384.319 99.5 cv
cp
1 1 1 rgb
f
375.243 34.0903 mo
374.979 36.8965 372.694 39.083 369.879 39.2231 cv
368.764 39.4131 367.947 40.3799 367.947 41.5117 cv
367.947 42.644 368.764 43.6108 369.879 43.8008 cv
369.843 45.4912 370.725 47.0693 372.183 47.9253 cv
373.642 48.7808 375.448 48.7808 376.907 47.9253 cv
378.365 47.0693 379.246 45.4912 379.21 43.8008 cv
380.372 43.6655 381.248 42.6816 381.248 41.5122 cv
381.248 40.3433 380.373 39.3589 379.211 39.2231 cv
377.104 38.2949 375.611 36.3633 375.243 34.0903 cv
cp
.929412 .533333 .427451 rgb
f
381.034 47.9912 mo
381.034 48.4028 380.701 48.7368 380.289 48.7368 cv
379.877 48.7368 379.543 48.4028 379.543 47.9912 cv
379.543 47.5796 379.877 47.2456 380.289 47.2456 cv
380.701 47.2456 381.034 47.5796 381.034 47.9912 cv
cp
.827451 .188235 .396078 rgb
f
369.438 47.2456 mo
369.438 47.6572 369.104 47.9912 368.692 47.9912 cv
368.281 47.9912 367.947 47.6572 367.947 47.2456 cv
367.947 46.834 368.281 46.5 368.692 46.5 cv
369.104 46.5 369.438 46.834 369.438 47.2456 cv
cp
f
375.142 33.1768 mo
375.065 33.1768 374.994 33.1294 374.967 33.0532 cv
374.652 32.1509 li
374.619 32.0552 374.669 31.9502 374.766 31.9165 cv
374.86 31.8843 374.966 31.9346 375 32.0303 cv
375.315 32.9321 li
375.349 33.0278 375.298 33.1328 375.202 33.167 cv
375.182 33.1733 375.161 33.1768 375.142 33.1768 cv
cp
.929412 .533333 .427451 rgb
f
369.07 31.6631 mo
372.642 29.9302 376.787 29.8208 380.445 31.3623 cv
380.932 29.0015 379.918 26.5845 377.894 25.2759 cv
375.869 23.9678 373.249 24.0371 371.296 25.4502 cv
369.344 26.8638 368.46 29.3311 369.07 31.6631 cv
cp
.282353 0 0 rgb
f
374.006 27.5332 mo
372.902 27.5332 371.795 27.2554 370.784 26.6904 cv
370.695 26.6416 370.664 26.5293 370.713 26.4404 cv
370.763 26.3516 370.877 26.3174 370.963 26.3696 cv
373.178 27.6055 375.893 27.3857 377.879 25.8086 cv
377.96 25.7437 378.076 25.7573 378.139 25.8379 cv
378.201 25.918 378.188 26.0337 378.109 26.0967 cv
376.911 27.0483 375.464 27.5332 374.006 27.5332 cv
cp
.376471 .262745 .321569 rgb
f
374.388 45.7329 mo
374.349 45.7329 374.312 45.7319 374.272 45.7305 cv
374.17 45.7261 374.091 45.6406 374.096 45.5386 cv
374.1 45.4399 374.182 45.3623 374.279 45.3623 cv
374.337 45.3491 374.353 45.3638 374.388 45.3643 cv
375.151 45.3643 375.863 44.998 376.306 44.3711 cv
376.364 44.2876 376.478 44.2671 376.563 44.3271 cv
376.646 44.3853 376.665 44.5005 376.607 44.584 cv
376.096 45.3091 375.272 45.7329 374.388 45.7329 cv
cp
.827451 .188235 .396078 rgb
f
379.683 41.1187 mo
379.675 41.1187 379.666 41.1177 379.658 41.1172 cv
379.557 41.1035 379.486 41.0112 379.5 40.9106 cv
379.547 40.5444 379.744 40.2085 380.04 39.9888 cv
380.121 39.9277 380.237 39.9453 380.298 40.0264 cv
380.358 40.1084 380.341 40.2236 380.259 40.2837 cv
380.043 40.4443 379.899 40.6904 379.865 40.958 cv
379.852 41.0508 379.772 41.1187 379.683 41.1187 cv
cp
.282353 0 0 rgb
f
369.439 41.1177 mo
369.35 41.1177 369.272 41.0532 369.258 40.9629 cv
369.224 40.7529 369.09 40.5703 368.899 40.4731 cv
368.809 40.4272 368.773 40.3164 368.819 40.2256 cv
368.866 40.1343 368.975 40.1006 369.066 40.145 cv
369.361 40.2949 369.568 40.5791 369.62 40.9043 cv
369.638 41.0049 369.568 41.0991 369.468 41.1157 cv
369.458 41.1172 369.449 41.1177 369.439 41.1177 cv
cp
f
377.809 39.2251 mo
377.774 39.2251 377.738 39.2148 377.707 39.1938 cv
376.963 38.6997 376.015 38.6553 375.229 39.0845 cv
375.145 39.1328 375.027 39.1011 374.98 39.0107 cv
374.932 38.9214 374.964 38.8101 375.054 38.7607 cv
375.957 38.2681 377.052 38.3169 377.911 38.8877 cv
377.996 38.9438 378.019 39.0581 377.963 39.1431 cv
377.927 39.1963 377.868 39.2251 377.809 39.2251 cv
cp
f
373.579 39.2251 mo
373.55 39.2251 373.521 39.2183 373.495 39.2046 cv
372.768 38.833 371.898 38.8301 371.167 39.1963 cv
371.078 39.2422 370.966 39.2041 370.921 39.1143 cv
370.875 39.0229 370.911 38.9126 371.003 38.8667 cv
371.836 38.4492 372.832 38.4507 373.662 38.877 cv
373.753 38.9229 373.789 39.0342 373.743 39.124 cv
373.71 39.1885 373.645 39.2251 373.579 39.2251 cv
cp
f
373.96 43.9502 mo
373.933 43.9502 373.905 43.9502 373.878 43.9492 cv
373.666 43.9463 373.468 43.8398 373.347 43.665 cv
373.228 43.4912 373.199 43.2681 373.271 43.0693 cv
373.337 42.8838 373.423 42.7007 373.507 42.5249 cv
373.65 42.2222 373.786 41.9365 373.753 41.7471 cv
373.735 41.6475 373.802 41.5518 373.902 41.5342 cv
374 41.5122 374.099 41.584 374.115 41.6841 cv
374.169 41.9883 374.009 42.3257 373.839 42.6826 cv
373.762 42.8477 373.68 43.019 373.617 43.1938 cv
373.586 43.2817 373.599 43.3794 373.65 43.4565 cv
373.718 43.5527 373.833 43.5791 373.959 43.5815 cv
374.392 43.5815 374.832 43.5176 374.836 43.5171 cv
374.947 43.499 375.03 43.5708 375.046 43.6724 cv
375.061 43.7725 374.991 43.8667 374.891 43.8809 cv
374.871 43.8838 374.42 43.9502 373.96 43.9502 cv
cp
f
378.175 40.8271 mo
377.905 41.1099 377.596 41.3257 377.245 41.4736 cv
376.464 41.811 375.548 41.7568 374.779 41.2988 cv
374.968 40.7192 375.413 40.2744 375.965 40.0859 cv
376.087 40.0322 376.208 40.0049 376.329 39.9917 cv
377.057 39.897 377.771 40.2207 378.175 40.8271 cv
cp
1 1 1 rgb
f
377.245 41.4736 mo
376.464 41.811 375.548 41.7568 374.779 41.2988 cv
374.968 40.7192 375.413 40.2744 375.965 40.0859 cv
376.626 40.2612 377.124 40.8003 377.245 41.4736 cv
cp
.282353 0 0 rgb
f
373.481 40.8271 mo
373.212 41.1099 372.901 41.3257 372.552 41.4736 cv
371.77 41.811 370.854 41.7568 370.085 41.2988 cv
370.274 40.7192 370.719 40.2744 371.271 40.0859 cv
371.393 40.0322 371.514 40.0049 371.635 39.9917 cv
372.362 39.897 373.077 40.2207 373.481 40.8271 cv
cp
1 1 1 rgb
f
372.552 41.4736 mo
371.77 41.811 370.854 41.7568 370.085 41.2988 cv
370.274 40.7192 370.719 40.2744 371.271 40.0859 cv
371.932 40.2612 372.43 40.8003 372.552 41.4736 cv
cp
.282353 0 0 rgb
f
382.872 78.7104 mo
366.494 78.7104 li
366.392 78.7104 366.31 78.6279 366.31 78.5264 cv
366.31 78.4248 366.392 78.3423 366.494 78.3423 cv
382.872 78.3423 li
382.975 78.3423 383.057 78.4248 383.057 78.5264 cv
383.057 78.6279 382.975 78.7104 382.872 78.7104 cv
cp
.929412 .533333 .427451 rgb
f
385.474 65.7192 mo
385.386 65.7192 385.308 65.6567 385.292 65.5684 cv
384.771 62.7065 li
384.753 62.6064 384.82 62.5103 384.92 62.4922 cv
385.029 62.4707 385.116 62.542 385.134 62.6401 cv
385.655 65.502 li
385.674 65.6021 385.605 65.6987 385.507 65.7168 cv
385.495 65.7188 385.483 65.7192 385.474 65.7192 cv
cp
.282353 0 0 rgb
f
361.753 66.0181 mo
361.746 66.0181 361.737 66.0176 361.73 66.0166 cv
361.629 66.0039 361.558 65.9116 361.57 65.8101 cv
361.887 63.3477 li
361.899 63.2476 361.992 63.1807 362.093 63.1885 cv
362.193 63.2017 362.266 63.2935 362.252 63.395 cv
361.936 65.8574 li
361.924 65.9502 361.845 66.0181 361.753 66.0181 cv
cp
f
383.253 41.8745 mo
383.239 41.8745 383.224 41.8726 383.207 41.8687 cv
383.109 41.8438 383.049 41.7437 383.075 41.645 cv
383.578 39.6753 381.972 38.3799 380.27 37.0083 cv
378.471 35.5591 376.61 34.0596 377.063 31.6294 cv
377.082 31.5293 377.19 31.4609 377.278 31.4819 cv
377.379 31.5005 377.444 31.5972 377.426 31.6968 cv
377.014 33.9116 378.786 35.3403 380.499 36.7217 cv
382.218 38.1055 383.994 39.5371 383.432 41.7358 cv
383.41 41.8193 383.335 41.8745 383.253 41.8745 cv
cp
.376471 .262745 .321569 rgb
f
367.099 41.8745 mo
367.017 41.8745 366.941 41.8193 366.92 41.7358 cv
366.358 39.5366 368.054 38.2119 369.692 36.9316 cv
371.324 35.6567 373.014 34.3374 372.599 32.1245 cv
372.58 32.0244 372.646 31.9282 372.745 31.9092 cv
372.839 31.8877 372.941 31.9565 372.961 32.0566 cv
373.416 34.4897 371.638 35.8789 369.918 37.2222 cv
368.303 38.4854 366.774 39.6782 367.276 41.645 cv
367.303 41.7437 367.242 41.8438 367.145 41.8687 cv
367.129 41.8726 367.112 41.8745 367.099 41.8745 cv
cp
f
353.489 73.0835 mo
364.215 64.7935 li
364.215 64.7935 364.331 60.4287 365.949 57.4414 cv
365.949 57.4414 369.98 55.6558 370.18 56.9326 cv
370.296 57.6724 366.411 58.1582 366.55 59.1982 cv
367.567 58.8286 372.396 57.9341 372.126 59.1226 cv
371.914 60.0537 366.353 59.9907 366.26 61.1929 cv
366.26 61.1929 372.469 60.6084 372.469 62.1113 cv
372.469 62.9438 366.781 61.7646 366.504 63.6143 cv
366.504 63.6143 371.867 63.8433 371.867 64.9551 cv
371.867 65.3711 368.399 65.1172 368.399 65.1172 cv
367.834 66.6768 li
360.593 78.1738 li
358.818 80.9224 354.54 82.2056 352.592 79.5776 cv
352.592 79.5776 li
351.073 77.5298 351.472 74.6431 353.489 73.0835 cv
cp
.929412 .533333 .427451 rgb
f
367.683 65.2373 mo
366.452 65.2373 li
366.35 65.2373 366.268 65.1548 366.268 65.0532 cv
366.268 64.9517 366.35 64.8691 366.452 64.8691 cv
367.683 64.8691 li
367.784 64.8691 367.866 64.9517 367.866 65.0532 cv
367.866 65.1548 367.784 65.2373 367.683 65.2373 cv
cp
.282353 0 0 rgb
f
382.41 63.8223 mo
385.759 67.4668 391.537 72.0801 395.257 74.9233 cv
397.215 76.4209 397.645 79.1875 396.238 81.2124 cv
396.238 81.2124 li
394.639 83.5156 391.437 83.1748 389.511 81.1362 cv
386.333 77.7705 383.457 73.3423 379.867 66.2729 cv
378.813 64.562 li
377.186 64.562 li
377.186 64.562 375.538 64.585 376.647 62.6953 cv
376.647 62.6953 375.659 61.9497 376.526 61.1694 cv
375.521 60.3198 376.214 59.4873 376.891 59.2271 cv
375.867 58.5337 376.855 57.771 376.855 57.771 cv
376.855 57.771 375.376 56.6089 376.021 55.6553 cv
376.665 54.7017 378.832 57.4067 378.832 57.4067 cv
378.832 57.4067 382.664 57.4585 382.161 59.418 cv
383.115 60.1636 382.647 61.1001 382.248 61.4468 cv
382.509 61.9844 382.763 63.146 382.41 63.8223 cv
cp
.929412 .533333 .427451 rgb
f
379.21 59.3584 mo
377.553 59.3584 li
377.45 59.3584 377.368 59.2759 377.368 59.1743 cv
377.368 59.0728 377.45 58.9902 377.553 58.9902 cv
379.21 58.9902 li
379.313 58.9902 379.395 59.0728 379.395 59.1743 cv
379.395 59.2759 379.313 59.3584 379.21 59.3584 cv
cp
.282353 0 0 rgb
f
378.936 61.3564 mo
377.278 61.3564 li
377.176 61.3564 377.094 61.2734 377.094 61.1719 cv
377.094 61.0708 377.176 60.9878 377.278 60.9878 cv
378.936 60.9878 li
379.038 60.9878 379.119 61.0708 379.119 61.1719 cv
379.119 61.2734 379.038 61.3564 378.936 61.3564 cv
cp
f
378.936 62.8574 mo
377.278 62.8574 li
377.176 62.8574 377.094 62.7749 377.094 62.6733 cv
377.094 62.5723 377.176 62.4893 377.278 62.4893 cv
378.936 62.4893 li
379.038 62.4893 379.119 62.5723 379.119 62.6733 cv
379.119 62.7749 379.038 62.8574 378.936 62.8574 cv
cp
f
377.422 57.8838 mo
377.34 57.8838 377.267 57.8296 377.243 57.7471 cv
377.218 57.6489 377.276 57.5479 377.374 57.522 cv
378.06 57.3384 li
378.157 57.3125 378.258 57.3701 378.285 57.4688 cv
378.311 57.5664 378.252 57.668 378.154 57.6938 cv
377.47 57.877 li
377.453 57.8813 377.438 57.8838 377.422 57.8838 cv
cp
f
363.575 141.897 mo
361.487 144.15 358.171 142.429 356.627 139.328 cv
356.285 138.631 356.02 137.746 355.842 136.746 cv
355.184 133.252 355.576 128.456 357.196 126.393 cv
360.297 122.481 363.879 129.607 364.601 135.632 cv
364.904 138.29 364.664 140.72 363.575 141.897 cv
cp
.827451 .188235 .396078 rgb
f
365.059 110.055 mo
371.785 90.9414 382.681 86.394 385.933 90.5933 cv
390.898 97.0059 375.945 110.266 371.502 115.979 cv
367.343 121.327 363.46 128.276 364.005 136.334 cv
364.551 144.393 357.22 142.878 356.734 135.062 cv
356.25 127.246 357.401 127.912 358.734 126.155 cv
360.067 124.398 362.774 116.545 365.059 110.055 cv
cp
.929412 .533333 .427451 rgb
f
363.575 141.897 mo
361.487 144.15 358.171 142.429 356.627 139.328 cv
356.285 138.631 356.02 137.746 355.842 136.746 cv
358.88 133.291 362.36 134.151 364.601 135.632 cv
364.904 138.29 364.664 140.72 363.575 141.897 cv
cp
.827451 .188235 .396078 rgb
f
380.859 105.819 mo
380.819 105.819 380.778 105.806 380.745 105.779 cv
380.665 105.716 380.652 105.6 380.715 105.52 cv
386.253 98.5239 388.058 93.2656 385.794 90.7153 cv
384.92 89.7285 383.629 89.293 382.058 89.4595 cv
377.924 89.8926 373.183 94.1504 369.377 100.85 cv
369.327 100.939 369.212 100.967 369.127 100.919 cv
369.038 100.869 369.008 100.756 369.058 100.668 cv
372.923 93.8657 377.768 89.5386 382.019 89.0933 cv
383.689 88.9126 385.127 89.4067 386.07 90.4707 cv
388.465 93.1699 386.665 98.5957 381.003 105.749 cv
380.967 105.795 380.914 105.819 380.859 105.819 cv
cp
1 1 1 rgb
f
368.391 136.189 mo
368.328 136.189 368.267 136.158 368.232 136.1 cv
368.181 136.013 368.208 135.899 368.295 135.848 cv
370.482 134.533 373.206 134.517 375.41 135.804 cv
375.498 135.855 375.527 135.968 375.477 136.056 cv
375.423 136.144 375.313 136.172 375.224 136.122 cv
373.139 134.902 370.556 134.919 368.485 136.163 cv
368.455 136.181 368.424 136.189 368.391 136.189 cv
cp
.282353 0 0 rgb
f
357.126 135.705 mo
357.066 135.705 357.008 135.676 356.972 135.623 cv
356.916 135.538 356.938 135.423 357.023 135.367 cv
359.041 134.025 361.652 133.833 363.844 134.869 cv
363.936 134.913 363.975 135.022 363.932 135.114 cv
363.889 135.207 363.782 135.248 363.686 135.202 cv
361.613 134.222 359.138 134.402 357.228 135.674 cv
357.196 135.694 357.16 135.705 357.126 135.705 cv
cp
f
380.289 82.687 mo
366.452 82.687 li
366.35 82.687 366.268 82.604 366.268 82.5024 cv
366.268 82.4014 366.35 82.3184 366.452 82.3184 cv
380.289 82.3184 li
380.392 82.3184 380.474 82.4014 380.474 82.5024 cv
380.474 82.604 380.392 82.687 380.289 82.687 cv
cp
1 1 1 rgb
f
354.379 72.5796 mo
354.324 72.5796 354.27 72.5552 354.233 72.5083 cv
354.171 72.4277 354.187 72.312 354.267 72.2495 cv
363.375 65.21 li
363.454 65.147 363.568 65.1626 363.632 65.2432 cv
363.695 65.3237 363.68 65.4395 363.599 65.502 cv
354.491 72.5415 li
354.458 72.5674 354.418 72.5796 354.379 72.5796 cv
cp
f
363.202 74.2666 mo
363.169 74.2666 363.136 74.2583 363.105 74.2393 cv
363.018 74.1855 362.992 74.0718 363.045 73.9854 cv
367.112 67.4258 li
367.166 67.3394 367.279 67.3115 367.366 67.3662 cv
367.454 67.4199 367.479 67.5337 367.427 67.6201 cv
363.358 74.1797 li
363.324 74.2358 363.264 74.2666 363.202 74.2666 cv
cp
f
394.062 74.187 mo
394.021 74.187 393.981 74.1738 393.948 74.1475 cv
388.119 69.5537 383.276 64.9893 383.228 64.9438 cv
383.154 64.874 383.149 64.7578 383.221 64.6836 cv
383.291 64.6094 383.407 64.6064 383.48 64.6763 cv
383.528 64.7217 388.361 69.2749 394.176 73.8584 cv
394.256 73.9209 394.27 74.0366 394.207 74.1162 cv
394.17 74.1631 394.116 74.187 394.062 74.187 cv
cp
f
384.62 74.9194 mo
384.559 74.9194 384.498 74.8882 384.464 74.8315 cv
382.717 71.9971 381.903 70.4731 380.672 68.167 cv
380.38 67.6201 380.063 67.0273 379.704 66.3599 cv
379.656 66.2705 379.689 66.1592 379.778 66.1108 cv
379.869 66.0635 379.981 66.0952 380.029 66.1855 cv
380.389 66.853 380.705 67.4463 380.997 67.9927 cv
382.225 70.2935 383.036 71.8135 384.777 74.6387 cv
384.83 74.7251 384.803 74.8389 384.717 74.8921 cv
384.687 74.9106 384.653 74.9194 384.62 74.9194 cv
cp
f
370.4 65.3784 mo
370.114 65.3784 369.771 65.3711 369.364 65.355 cv
369.262 65.3506 369.184 65.2646 369.188 65.1626 cv
369.191 65.061 369.282 64.9775 369.379 64.9863 cv
371.1 65.0542 371.558 64.9487 371.677 64.9023 cv
371.517 64.3491 368.914 63.9014 366.497 63.7988 cv
366.443 63.7964 366.395 63.772 366.361 63.7319 cv
366.328 63.6914 366.314 63.6392 366.321 63.5869 cv
366.511 62.3252 368.687 62.3022 370.434 62.2837 cv
371.17 62.2754 372.18 62.2646 372.288 62.1021 cv
372.285 62.0078 372.24 61.9189 372.146 61.832 cv
371.321 61.082 367.631 61.249 366.276 61.3765 cv
366.224 61.3813 366.169 61.3628 366.13 61.3237 cv
366.091 61.2866 366.071 61.2324 366.075 61.1787 cv
366.137 60.3931 367.729 60.1162 369.418 59.8223 cv
370.455 59.6421 371.875 59.395 371.945 59.0815 cv
371.963 59.0103 371.948 58.9644 371.896 58.918 cv
371.272 58.3701 367.561 59.0269 366.613 59.3721 cv
366.562 59.3892 366.501 59.3848 366.455 59.3564 cv
366.406 59.3276 366.375 59.2788 366.367 59.2231 cv
366.273 58.5122 367.419 58.0967 368.527 57.6943 cv
369.052 57.5044 370.027 57.1504 369.999 56.9604 cv
369.984 56.8735 369.945 56.811 369.875 56.7637 cv
369.743 56.6743 369.377 56.562 368.385 56.7959 cv
368.289 56.8208 368.188 56.7593 368.163 56.6592 cv
368.14 56.5601 368.202 56.4604 368.301 56.4375 cv
369.17 56.2334 369.756 56.2393 370.079 56.4575 cv
370.234 56.5615 370.333 56.7158 370.361 56.9038 cv
370.438 57.3936 369.65 57.6792 368.652 58.041 cv
367.992 58.2808 367.136 58.5918 366.838 58.9175 cv
368.123 58.5654 371.398 57.9893 372.14 58.6416 cv
372.292 58.7764 372.352 58.9614 372.306 59.1636 cv
372.186 59.6895 371.154 59.8945 369.48 60.1851 cv
368.418 60.3701 367.026 60.6123 366.583 60.9814 cv
367.741 60.8936 371.438 60.6914 372.394 61.5596 cv
372.565 61.7168 372.653 61.9023 372.653 62.1113 cv
372.653 62.6279 371.771 62.6377 370.438 62.6519 cv
369.029 62.667 367.142 62.687 366.75 63.4419 cv
368.264 63.5186 372.052 63.8252 372.052 64.9556 cv
372.052 65.0063 372.038 65.082 371.966 65.1509 cv
371.888 65.2246 371.729 65.3784 370.4 65.3784 cv
cp
.282353 0 0 rgb
f
368.445 99.6421 mo
368.361 99.6421 368.287 99.585 368.267 99.501 cv
367.691 97.1162 367.972 94.5894 369.052 92.3872 cv
369.097 92.2969 369.21 92.2583 369.298 92.3032 cv
369.391 92.3486 369.428 92.4585 369.383 92.5498 cv
368.34 94.6753 368.069 97.1133 368.623 99.4146 cv
368.647 99.5137 368.588 99.6133 368.488 99.6367 cv
368.474 99.6406 368.459 99.6421 368.445 99.6421 cv
cp
.827451 .188235 .396078 rgb
f
367.458 99.5 mo
367.434 99.5 367.407 99.4951 367.383 99.4844 cv
366.093 98.916 365.191 97.7446 364.974 96.3525 cv
364.957 96.252 365.025 96.1577 365.126 96.1421 cv
365.239 96.1299 365.321 96.1968 365.336 96.2949 cv
365.536 97.5635 366.357 98.6294 367.533 99.1475 cv
367.625 99.1885 367.668 99.2974 367.626 99.3901 cv
367.596 99.459 367.528 99.5 367.458 99.5 cv
cp
f
378.13 40.6484 mo
378.084 40.6484 378.039 40.6323 378.003 40.5981 cv
377.334 39.9683 376.816 39.9595 376.264 40.019 cv
376.257 40.02 376.251 40.02 376.245 40.02 cv
376.151 40.02 376.07 39.9492 376.063 39.8545 cv
376.052 39.7529 376.125 39.6621 376.227 39.6523 cv
376.798 39.5952 377.403 39.5967 378.124 40.2129 cv
378.364 39.979 li
378.435 39.9077 378.554 39.9106 378.625 39.9819 cv
378.695 40.0542 378.693 40.1709 378.62 40.2422 cv
378.258 40.5962 li
378.224 40.6313 378.176 40.6484 378.13 40.6484 cv
cp
.282353 0 0 rgb
f
370.478 40.5688 mo
370.437 40.5688 370.394 40.5542 370.358 40.5249 cv
369.907 40.1401 li
369.829 40.0737 369.82 39.958 369.887 39.8804 cv
369.951 39.8032 370.068 39.7935 370.146 39.8594 cv
370.474 40.1392 li
370.784 39.8789 371.264 39.6279 371.811 39.6035 cv
371.921 39.5928 371.999 39.6777 372.003 39.7798 cv
372.008 39.8809 371.929 39.9668 371.828 39.9717 cv
371.306 39.9946 370.855 40.2676 370.609 40.5151 cv
370.573 40.5508 370.525 40.5688 370.478 40.5688 cv
cp
f
460.415 86.3096 mo
447.938 139.316 li
447.788 139.952 447.937 140.611 448.344 141.125 cv
448.755 141.646 449.374 141.944 450.041 141.944 cv
470.789 141.944 li
471.457 141.944 472.077 141.646 472.49 141.125 cv
472.896 140.611 473.044 139.952 472.893 139.316 cv
460.415 86.3096 li
cp
470.789 142.312 mo
450.041 142.312 li
449.262 142.312 448.536 141.962 448.055 141.354 cv
447.576 140.751 447.404 139.978 447.578 139.231 cv
460.235 85.4634 li
460.275 85.2979 460.555 85.2979 460.595 85.4634 cv
473.252 139.231 li
473.428 139.977 473.255 140.75 472.777 141.353 cv
472.296 141.962 471.57 142.312 470.789 142.312 cv
cp
f
503.517 86.3096 mo
491.039 139.316 li
490.888 139.952 491.036 140.611 491.442 141.125 cv
491.854 141.646 492.476 141.944 493.143 141.944 cv
513.891 141.944 li
514.559 141.944 515.177 141.646 515.588 141.125 cv
515.995 140.611 516.144 139.952 515.994 139.316 cv
503.517 86.3096 li
cp
513.891 142.312 mo
493.143 142.312 li
492.361 142.312 491.636 141.962 491.154 141.353 cv
490.677 140.75 490.504 139.977 490.68 139.231 cv
503.337 85.4634 li
503.377 85.2979 503.656 85.2979 503.696 85.4634 cv
516.354 139.231 li
516.528 139.978 516.355 140.751 515.878 141.354 cv
515.396 141.962 514.671 142.312 513.891 142.312 cv
cp
f
518.979 142.312 mo
518.896 142.312 518.82 142.255 518.8 142.17 cv
510.84 108.526 li
502.879 142.17 li
502.856 142.271 502.747 142.336 502.657 142.307 cv
502.559 142.284 502.496 142.185 502.52 142.085 cv
510.66 107.684 li
510.701 107.519 510.979 107.519 511.021 107.684 cv
519.159 142.085 li
519.183 142.185 519.121 142.284 519.021 142.307 cv
519.009 142.311 518.994 142.312 518.979 142.312 cv
cp
.827451 .188235 .396078 rgb
f
536.707 106.247 mo
536.707 107.064 536.045 107.726 535.228 107.726 cv
502.732 107.726 li
501.916 107.726 501.253 107.064 501.253 106.247 cv
501.253 105.429 501.916 104.767 502.732 104.767 cv
535.228 104.767 li
536.045 104.767 536.707 105.429 536.707 106.247 cv
cp
f
540.752 142.312 mo
540.668 142.312 540.592 142.255 540.572 142.17 cv
532.611 108.526 li
524.65 142.17 li
524.627 142.271 524.521 142.336 524.429 142.307 cv
524.329 142.284 524.268 142.185 524.29 142.085 cv
532.432 107.684 li
532.472 107.519 532.751 107.519 532.791 107.684 cv
540.932 142.085 li
540.955 142.185 540.893 142.284 540.794 142.307 cv
540.78 142.311 540.767 142.312 540.752 142.312 cv
cp
f
533.257 104.951 mo
533.242 104.951 533.229 104.949 533.216 104.946 cv
533.116 104.923 533.055 104.824 533.077 104.725 cv
537.937 83.9175 li
537.961 83.8188 538.063 83.7593 538.157 83.7803 cv
538.257 83.8032 538.319 83.9023 538.296 84.001 cv
533.437 104.809 li
533.417 104.894 533.341 104.951 533.257 104.951 cv
cp
f
523.688 83.9595 mo
541.472 83.9595 li
542.423 83.9595 543.271 83.3594 543.589 82.4619 cv
546.102 75.3467 li
546.618 73.8857 545.534 72.3535 543.984 72.3535 cv
526.2 72.3535 li
525.249 72.3535 524.4 72.9536 524.083 73.8511 cv
521.57 80.9663 li
521.055 82.4272 522.138 83.9595 523.688 83.9595 cv
cp
f
508.751 51.5166 mo
507.021 55.1919 503.919 59.7998 502.327 63.5332 cv
500.212 68.4951 500.752 72.8506 503.213 73.7183 cv
506.095 74.7349 508.233 71.6831 509.774 66.6729 cv
511.042 62.5542 511.16 57.3076 512.443 51.5166 cv
508.751 51.5166 li
cp
.929412 .533333 .427451 rgb
f
517.354 49.6055 mo
510.305 54.9321 li
510.007 55.1572 509.583 55.0981 509.358 54.8003 cv
507.308 52.0859 li
507.082 51.7881 507.141 51.3643 507.439 51.1392 cv
514.488 45.8125 li
514.786 45.5874 515.21 45.6465 515.435 45.9443 cv
517.485 48.6587 li
517.711 48.9565 517.651 49.3804 517.354 49.6055 cv
cp
.827451 .188235 .396078 rgb
f
523.99 51.5166 mo
526.799 49.7231 528.341 46.4868 527.964 43.1758 cv
527.588 39.8647 525.359 37.0571 522.22 35.939 cv
519.08 34.8213 515.579 35.5889 513.194 37.917 cv
510.478 36.2173 509.021 43.6733 513.564 46.3091 cv
518.107 48.9448 523.99 51.5166 523.99 51.5166 cv
cp
.282353 0 0 rgb
f
525.538 48.0479 mo
524.055 48.0479 522.719 46.2031 521.32 44.27 cv
519.345 41.5386 517.301 38.7178 514.599 40.4189 cv
514.511 40.4731 514.398 40.4463 514.345 40.3623 cv
514.29 40.2759 514.316 40.1621 514.402 40.1084 cv
517.39 38.2139 519.64 41.3188 521.618 44.0542 cv
523.229 46.2793 524.754 48.3843 526.371 47.4331 cv
526.46 47.3809 526.572 47.4106 526.623 47.4995 cv
526.675 47.5869 526.646 47.6992 526.558 47.751 cv
526.208 47.9556 525.87 48.0479 525.538 48.0479 cv
cp
.376471 .262745 .321569 rgb
f
525.846 54.8755 mo
518.587 59.917 li
518.269 56.0342 li
517.993 52.7891 li
512.807 55.1069 511.241 48.5005 513.502 40.8218 cv
516.066 41.6763 518.21 43.4297 519.558 45.7622 cv
519.978 44.936 520.848 44.4585 521.76 44.5449 cv
522.688 44.6177 523.455 45.2695 523.701 46.1533 cv
523.947 47.0371 523.629 47.9932 522.89 48.5439 cv
523.904 52.1514 525.846 54.8755 525.846 54.8755 cv
cp
.929412 .533333 .427451 rgb
f
520.489 46.875 mo
520.478 46.875 520.468 46.874 520.456 46.8721 cv
520.355 46.8535 520.289 46.7568 520.308 46.6567 cv
520.451 45.8755 521.156 45.1123 522.187 45.252 cv
522.287 45.2656 522.358 45.3579 522.345 45.4585 cv
522.331 45.5591 522.257 45.6318 522.138 45.6172 cv
521.345 45.5073 520.785 46.1094 520.67 46.7246 cv
520.653 46.813 520.577 46.875 520.489 46.875 cv
cp
.282353 0 0 rgb
f
513.958 44.4751 mo
513.902 44.4751 513.848 44.4497 513.812 44.4019 cv
513.75 44.3203 513.767 44.2051 513.848 44.1436 cv
514.813 43.418 516.104 43.3433 517.148 43.9521 cv
517.235 44.0039 517.265 44.1162 517.213 44.2036 cv
517.162 44.2925 517.05 44.3203 516.961 44.27 cv
516.049 43.7339 514.914 43.8018 514.069 44.4385 cv
514.036 44.4629 513.997 44.4751 513.958 44.4751 cv
cp
f
523.31 35.6279 mo
526.283 36.8447 528.34 39.6084 528.649 42.8066 cv
530.364 42.0391 531.437 40.3027 531.355 38.4263 cv
531.274 36.5498 530.057 34.9126 528.282 34.2954 cv
526.509 33.6782 524.537 34.2065 523.31 35.6279 cv
cp
f
530.254 37.8564 mo
529.436 37.8564 528.631 37.5796 527.985 37.0659 cv
527.208 36.4463 526.714 35.5239 526.627 34.5342 cv
526.618 34.4326 526.693 34.3433 526.795 34.335 cv
526.896 34.3276 526.986 34.4009 526.995 34.5024 cv
527.071 35.3916 527.517 36.2212 528.216 36.7778 cv
528.915 37.335 529.831 37.5815 530.705 37.457 cv
530.8 37.4385 530.898 37.5127 530.913 37.6133 cv
530.928 37.7139 530.857 37.8076 530.757 37.8213 cv
530.59 37.8447 530.421 37.8564 530.254 37.8564 cv
cp
.376471 .262745 .321569 rgb
f
522.477 49.585 mo
522.477 49.9956 522.144 50.3291 521.732 50.3291 cv
521.322 50.3291 520.988 49.9956 520.988 49.585 cv
520.988 49.1738 521.322 48.8408 521.732 48.8408 cv
522.144 48.8408 522.477 49.1738 522.477 49.585 cv
cp
.827451 .188235 .396078 rgb
f
514.732 50.0771 mo
514.614 49.9902 514.546 49.8501 514.553 49.7031 cv
514.56 49.5566 514.64 49.4229 514.766 49.3472 cv
515.387 48.9751 516.097 48.7778 516.82 48.7759 cv
516.968 48.7759 517.104 48.8491 517.187 48.9712 cv
517.268 49.0938 517.282 49.2485 517.226 49.3838 cv
517.033 49.8389 516.643 50.1953 516.146 50.333 cv
515.65 50.4707 515.132 50.3677 514.732 50.0771 cv
cp
1 1 1 rgb
f
518.269 56.0342 mo
517.993 52.7891 li
519.036 52.3979 519.558 51.1519 519.558 51.1519 cv
519.558 51.1519 520.5 53.8467 518.269 56.0342 cv
cp
.282353 0 0 rgb
f
513.308 45.4932 mo
513.11 45.9087 512.66 46.5874 512.214 47.2227 cv
512.049 47.458 512.049 47.7725 512.215 48.0073 cv
512.382 48.2422 512.678 48.3477 512.955 48.27 cv
513.308 45.4932 li
cp
.929412 .533333 .427451 rgb
f
513.392 40.4478 mo
513.338 40.4478 513.285 40.4248 513.249 40.3794 cv
512.827 39.8608 512.72 39.1528 512.966 38.5313 cv
513.004 38.4365 513.115 38.394 513.204 38.4277 cv
513.299 38.4648 513.345 38.5723 513.308 38.6665 cv
513.11 39.165 513.197 39.7319 513.533 40.1475 cv
513.599 40.2271 513.587 40.3428 513.508 40.4067 cv
513.474 40.4341 513.432 40.4478 513.392 40.4478 cv
cp
f
527.335 43.3032 mo
527.246 43.3032 527.167 43.2378 527.152 43.147 cv
526.882 41.3799 525.276 41.3125 523.416 41.2339 cv
520.892 41.1274 517.751 40.9951 517.53 36.1045 cv
517.526 36.0024 517.605 35.917 517.706 35.9116 cv
517.794 35.9141 517.895 35.9858 517.899 36.0874 cv
518.104 40.6421 520.812 40.7554 523.43 40.8662 cv
525.369 40.9478 527.201 41.0249 527.518 43.0908 cv
527.532 43.1914 527.463 43.2856 527.362 43.3008 cv
527.354 43.3022 527.344 43.3032 527.335 43.3032 cv
cp
.376471 .262745 .321569 rgb
f
512.772 48.479 mo
512.495 48.479 512.229 48.3462 512.064 48.1133 cv
511.854 47.8164 511.854 47.416 512.063 47.1167 cv
512.607 46.3428 512.979 45.7539 513.141 45.4141 cv
513.186 45.3237 513.293 45.2837 513.387 45.3267 cv
513.479 45.3701 513.518 45.48 513.475 45.5723 cv
513.302 45.9355 512.928 46.5269 512.365 47.3281 cv
512.244 47.5 512.244 47.7305 512.365 47.9009 cv
512.487 48.0723 512.705 48.1504 512.906 48.0923 cv
513.001 48.0654 513.104 48.123 513.133 48.2202 cv
513.159 48.3184 513.104 48.4194 513.004 48.4478 cv
512.928 48.4683 512.851 48.479 512.772 48.479 cv
cp
.282353 0 0 rgb
f
517.922 45.5674 mo
517.495 46.0527 516.892 46.353 516.27 46.4072 cv
516.154 46.438 516.024 46.4546 515.894 46.4424 cv
515.11 46.4126 514.395 46.0332 513.935 45.418 cv
514.535 44.9878 515.257 44.7871 515.953 44.833 cv
516.663 44.8501 517.349 45.0991 517.922 45.5674 cv
cp
1 1 1 rgb
f
516.294 46.1025 mo
516.295 46.2036 516.297 46.3052 516.27 46.4072 cv
516.154 46.438 516.024 46.4546 515.894 46.4424 cv
515.11 46.4126 514.395 46.0332 513.935 45.418 cv
514.535 44.9878 515.257 44.7871 515.953 44.833 cv
516.162 45.2061 516.285 45.6387 516.294 46.1025 cv
cp
.282353 0 0 rgb
f
517.496 45.2324 mo
517.468 45.2324 517.438 45.2251 517.41 45.2109 cv
516.722 44.8462 516.043 44.7568 515.061 44.8965 cv
514.957 44.9087 514.867 44.8403 514.852 44.7412 cv
514.837 44.6406 514.908 44.5469 515.009 44.5327 cv
515.711 44.4312 516.551 44.3853 517.453 44.8193 cv
517.77 44.4604 li
517.836 44.3843 517.952 44.3779 518.03 44.4448 cv
518.106 44.5122 518.113 44.6289 518.046 44.7051 cv
517.635 45.1709 li
517.599 45.2109 517.548 45.2324 517.496 45.2324 cv
cp
f
517.951 45.5469 mo
517.891 45.5469 517.831 45.5166 517.796 45.4619 cv
517.741 45.3765 517.766 45.2622 517.852 45.2075 cv
518.414 44.8477 li
518.498 44.7959 518.612 44.8184 518.669 44.9038 cv
518.724 44.9893 518.699 45.1035 518.612 45.1587 cv
518.05 45.5181 li
518.02 45.5376 517.985 45.5469 517.951 45.5469 cv
cp
f
512.143 88.167 mo
512.143 88.167 487.371 83.1733 481.932 90.1787 cv
476.492 97.1836 495.526 126.595 495.526 126.595 cv
503.516 123.263 li
493.763 99.75 li
493.763 99.75 504.377 104.767 516.236 104.767 cv
528.095 104.767 530.938 95.3804 530.938 95.3804 cv
512.143 88.167 li
cp
.827451 .188235 .396078 rgb
f
509.021 64.1689 mo
524.47 55.0137 li
524.47 55.0137 526.984 51.3477 530.708 54.2275 cv
534.217 56.9414 535.705 72.9663 530.862 85.333 cv
531.285 87.6606 532.36 92.1206 530.938 95.3804 cv
530.938 95.3804 520.813 94.8257 512.143 88.167 cv
512.143 88.167 514.028 85.709 515.768 84.2046 cv
518.025 80.8657 517.126 76.4463 514.154 71.105 cv
512.147 71.9902 li
509.021 64.1689 li
cp
.282353 0 0 rgb
f
482.616 92.3403 mo
482.616 92.3403 li
480.562 93.6074 479.256 95.8003 479.122 98.2114 cv
480.36 129.228 li
488.121 129.228 li
490.796 104.767 li
516.236 104.767 li
516.236 93.623 li
487.54 91.1685 li
485.815 91.021 484.09 91.4316 482.616 92.3403 cv
cp
.827451 .188235 .396078 rgb
f
523.354 62.6182 mo
523.291 62.6182 523.23 62.5864 523.196 62.5298 cv
523.144 62.4434 523.17 62.3296 523.257 62.2773 cv
531.071 57.4868 li
531.158 57.4336 531.272 57.4619 531.325 57.5483 cv
531.378 57.6348 531.351 57.748 531.265 57.8008 cv
523.449 62.5908 li
523.419 62.6094 523.386 62.6182 523.354 62.6182 cv
cp
.376471 .262745 .321569 rgb
f
528.025 69.6714 mo
518.686 69.6714 li
517.085 74.9883 li
497.785 78.8267 li
497.785 78.8267 491.866 76.3701 488.676 79.8413 cv
486.873 82.48 li
515.627 82.6997 li
522.806 82.8994 526.63 74.9883 528.025 69.6714 cv
cp
.929412 .533333 .427451 rgb
f
518.939 68.7432 mo
518.918 68.7432 518.896 68.7393 518.876 68.7314 cv
518.779 68.6963 518.73 68.5903 518.767 68.4956 cv
523.137 56.6152 li
523.171 56.5181 523.28 56.4683 523.372 56.5059 cv
523.469 56.541 523.518 56.6465 523.481 56.7417 cv
519.112 68.6221 li
519.085 68.6968 519.015 68.7432 518.939 68.7432 cv
cp
.827451 .188235 .396078 rgb
f
513.784 70.2715 mo
513.735 70.2715 513.687 70.2524 513.65 70.2134 cv
511.872 68.3125 510.915 64.938 514.067 61.6826 cv
514.138 61.6099 514.255 61.6084 514.328 61.6782 cv
514.401 61.7485 514.402 61.8652 514.332 61.939 cv
511.359 65.0083 512.252 68.1797 513.918 69.9614 cv
513.988 70.0356 513.984 70.1523 513.909 70.2222 cv
513.875 70.2549 513.829 70.2715 513.784 70.2715 cv
cp
f
509.021 64.1689 mo
503.681 67.6025 496.402 78.5752 512.147 71.9902 cv
509.021 64.1689 li
cp
.929412 .533333 .427451 rgb
f
493.276 99.1021 mo
493.229 99.1021 493.182 99.084 493.146 99.0474 cv
490.665 96.5503 li
490.593 96.4785 490.595 96.3618 490.666 96.29 cv
490.738 96.2192 490.854 96.2178 490.927 96.2915 cv
493.407 98.7886 li
493.479 98.8604 493.478 98.9771 493.406 99.0488 cv
493.37 99.084 493.324 99.1021 493.276 99.1021 cv
cp
1 1 1 rgb
f
503.516 123.263 mo
504.582 125.898 li
496.233 129.928 li
494.993 126.817 li
503.516 123.263 li
cp
.827451 .188235 .396078 rgb
f
488.121 129.228 mo
487.798 131.678 li
479.796 131.678 li
479.796 129.228 li
488.121 129.228 li
cp
f
487.8 131.678 mo
487.582 133.88 li
486.901 141.022 li
486.756 142.587 li
468.168 142.587 li
468.168 142.587 468.559 141.906 469.588 141.022 cv
470.747 139.979 472.731 138.661 475.861 137.763 cv
478.947 136.879 480.309 135.227 480.889 133.88 cv
481.425 132.663 481.353 131.678 481.353 131.678 cv
487.8 131.678 li
cp
.929412 .533333 .427451 rgb
f
487.582 133.88 mo
486.901 141.022 li
486.756 142.587 li
468.168 142.587 li
468.168 142.587 468.559 141.906 469.588 141.022 cv
470.747 139.979 472.731 138.661 475.861 137.763 cv
478.947 136.879 480.309 135.227 480.889 133.88 cv
487.582 133.88 li
cp
.282353 0 0 rgb
f
486.901 141.022 mo
486.756 142.587 li
468.168 142.587 li
468.168 142.587 468.559 141.906 469.588 141.022 cv
486.901 141.022 li
cp
.827451 .188235 .396078 rgb
f
507.576 134.938 mo
504.751 140.269 li
503.997 141.689 502.505 142.587 500.883 142.587 cv
489.93 142.587 li
489.93 142.587 490.19 141.921 491.016 141.022 cv
491.986 139.95 493.754 138.545 496.812 137.502 cv
499.55 136.56 499.245 133.576 498.622 131.431 cv
498.217 130.084 497.853 129.157 497.853 129.157 cv
504.577 125.897 li
505.504 127.969 li
507.373 132.156 li
507.648 132.779 li
507.967 133.474 507.938 134.271 507.576 134.938 cv
cp
.929412 .533333 .427451 rgb
f
507.576 134.938 mo
504.751 140.269 li
503.997 141.689 502.505 142.587 500.883 142.587 cv
489.93 142.587 li
489.93 142.587 490.19 141.921 491.016 141.022 cv
491.986 139.95 493.754 138.545 496.812 137.502 cv
499.55 136.56 499.245 133.576 498.622 131.431 cv
505.504 127.969 li
507.373 132.156 li
507.648 132.779 li
507.967 133.474 507.938 134.271 507.576 134.938 cv
cp
.282353 0 0 rgb
f
507.576 134.938 mo
504.751 140.269 li
503.997 141.689 502.505 142.587 500.883 142.587 cv
489.93 142.587 li
489.93 142.587 490.19 141.921 491.016 141.022 cv
500.911 141.022 li
502.013 141.022 503.012 140.414 503.534 139.443 cv
507.373 132.156 li
507.648 132.779 li
507.967 133.474 507.938 134.271 507.576 134.938 cv
cp
.827451 .188235 .396078 rgb
f
522.848 69.0259 mo
522.785 69.0259 522.725 68.9941 522.69 68.937 cv
522.637 68.8511 522.664 68.7373 522.751 68.6846 cv
532.302 62.853 li
532.388 62.8008 532.503 62.8271 532.555 62.9141 cv
532.608 63.0005 532.581 63.1143 532.494 63.1665 cv
522.943 68.998 li
522.913 69.0171 522.88 69.0259 522.848 69.0259 cv
cp
.376471 .262745 .321569 rgb
f
528.396 72.3032 mo
528.333 72.3032 528.273 72.2715 528.238 72.2148 cv
528.186 72.1284 528.213 72.0146 528.299 71.9624 cv
532.956 69.1187 li
533.046 69.0669 533.156 69.0923 533.21 69.1797 cv
533.263 69.2661 533.235 69.3794 533.149 69.4321 cv
528.492 72.2759 li
528.462 72.2944 528.429 72.3032 528.396 72.3032 cv
cp
f
513.646 88.4468 mo
513.584 88.4468 513.523 88.416 513.489 88.3589 cv
513.436 88.272 513.463 88.1582 513.55 88.106 cv
532.011 76.8062 li
532.101 76.7544 532.211 76.7793 532.265 76.8667 cv
532.317 76.9536 532.29 77.0674 532.204 77.1196 cv
513.742 88.4194 li
513.712 88.4385 513.679 88.4468 513.646 88.4468 cv
cp
f
520.443 92.0581 mo
520.381 92.0581 520.32 92.0269 520.286 91.9697 cv
520.232 91.8828 520.261 91.77 520.347 91.7168 cv
530.001 85.834 li
530.089 85.7837 530.202 85.8096 530.254 85.896 cv
530.308 85.9829 530.28 86.0957 530.194 86.1489 cv
520.539 92.0317 li
520.509 92.0498 520.476 92.0581 520.443 92.0581 cv
cp
f
511.276 85.439 mo
452.587 85.439 li
451.773 85.439 451.107 84.7734 451.107 83.9595 cv
451.107 83.9595 li
451.107 83.1455 451.773 82.48 452.587 82.48 cv
511.276 82.48 li
512.09 82.48 512.756 83.1455 512.756 83.9595 cv
512.756 83.9595 li
512.756 84.7734 512.09 85.439 511.276 85.439 cv
cp
.282353 0 0 rgb
f
512.756 83.9595 mo
512.756 84.7764 512.093 85.439 511.276 85.439 cv
463.782 85.439 li
462.965 85.439 462.302 84.7764 462.302 83.9595 cv
462.302 83.1421 462.965 82.48 463.782 82.48 cv
511.276 82.48 li
512.093 82.48 512.756 83.1421 512.756 83.9595 cv
cp
f
481.393 82.48 mo
465.856 82.48 li
457.465 68.5586 li
473.001 68.5586 li
481.393 82.48 li
cp
1 1 1 rgb
f
468.947 74.4312 mo
469.815 76.3721 469.961 77.9453 469.271 77.9453 cv
468.582 77.9453 467.319 76.3721 466.45 74.4312 cv
465.582 72.4902 465.438 70.917 466.127 70.917 cv
466.816 70.917 468.079 72.4902 468.947 74.4312 cv
cp
.827451 .188235 .396078 rgb
f
492.745 82.48 mo
474.851 82.48 li
474.851 79.8413 li
490.106 79.8413 li
491.563 79.8413 492.745 81.0225 492.745 82.48 cv
492.745 82.48 li
cp
1 1 1 rgb
f
505.076 68.2573 mo
505.04 68.2573 505.006 68.2471 504.975 68.2266 cv
504.89 68.1694 504.866 68.0552 504.924 67.9712 cv
505.93 66.4697 508.197 64.5396 508.294 64.458 cv
508.371 64.3926 508.488 64.4043 508.554 64.479 cv
508.618 64.5566 508.61 64.6733 508.532 64.7388 cv
508.51 64.7588 506.206 66.7173 505.229 68.1753 cv
505.194 68.2285 505.136 68.2573 505.076 68.2573 cv
cp
.282353 0 0 rgb
f
492.746 82.6636 mo
492.644 82.6636 492.562 82.5806 492.562 82.4795 cv
492.562 80.3159 490.333 80.0356 490.239 80.0239 cv
489.553 80.0254 li
489.45 80.0254 489.368 79.9429 489.368 79.8413 cv
489.368 79.7397 489.45 79.6572 489.553 79.6572 cv
490.26 79.6572 li
490.307 79.6616 492.93 79.9844 492.93 82.4795 cv
492.93 82.5806 492.848 82.6636 492.746 82.6636 cv
cp
f
516.235 104.951 mo
505.8 104.951 496.215 101.029 494.111 100.108 cv
495.695 103.931 li
495.734 104.025 495.689 104.132 495.596 104.171 cv
495.502 104.213 495.393 104.166 495.355 104.072 cv
493.593 99.8208 li
493.563 99.7505 493.58 99.6699 493.636 99.6172 cv
493.69 99.5635 493.772 99.5508 493.842 99.584 cv
493.947 99.6338 504.557 104.583 516.235 104.583 cv
522.295 104.583 525.889 102.007 527.839 99.8467 cv
529.949 97.5073 530.636 95.147 530.643 95.123 cv
530.67 95.0244 530.773 94.9697 530.87 94.9966 cv
530.968 95.0239 531.024 95.126 530.997 95.2236 cv
530.968 95.3232 530.278 97.6904 528.112 100.093 cv
526.112 102.309 522.43 104.951 516.235 104.951 cv
cp
f
489.012 115.517 mo
488.945 115.517 488.882 115.481 488.85 115.42 cv
488.776 115.281 li
486.258 110.564 482.454 103.438 480.966 96.0439 cv
480.946 95.9438 481.009 95.8467 481.109 95.8267 cv
481.203 95.8057 481.306 95.8721 481.325 95.9707 cv
482.805 103.312 486.593 110.411 489.1 115.107 cv
489.175 115.246 li
489.222 115.335 489.188 115.447 489.099 115.495 cv
489.071 115.51 489.041 115.517 489.012 115.517 cv
cp
f
496.258 126.474 mo
496.186 126.474 496.117 126.432 496.088 126.361 cv
496.049 126.267 496.092 126.159 496.188 126.12 cv
502.623 123.436 li
502.72 123.395 502.824 123.441 502.863 123.534 cv
502.902 123.628 502.859 123.736 502.764 123.775 cv
496.328 126.46 li
496.306 126.47 496.28 126.474 496.258 126.474 cv
cp
f
499.459 128.44 mo
499.39 128.44 499.322 128.401 499.292 128.333 cv
499.249 128.241 499.289 128.132 499.382 128.089 cv
503.438 126.219 li
503.534 126.176 503.642 126.215 503.684 126.309 cv
503.727 126.401 503.687 126.51 503.595 126.553 cv
499.537 128.423 li
499.511 128.435 499.485 128.44 499.459 128.44 cv
cp
f
486.263 129.412 mo
480.954 129.412 li
480.853 129.412 480.771 129.329 480.771 129.228 cv
480.771 129.126 480.853 129.043 480.954 129.043 cv
486.263 129.043 li
486.364 129.043 486.446 129.126 486.446 129.228 cv
486.446 129.329 486.364 129.412 486.263 129.412 cv
cp
f
482.807 131.881 mo
482.705 131.881 482.622 131.799 482.622 131.697 cv
482.622 131.596 482.704 131.513 482.805 131.512 cv
487.142 131.494 li
487.143 131.494 487.143 131.494 487.143 131.494 cv
487.243 131.494 487.327 131.576 487.327 131.677 cv
487.327 131.778 487.245 131.861 487.145 131.862 cv
482.808 131.881 li
482.807 131.881 482.807 131.881 482.807 131.881 cv
cp
f
493.763 97.853 mo
493.678 97.853 493.602 97.7939 493.583 97.707 cv
493.097 95.4185 li
493.075 95.3193 493.139 95.2217 493.237 95.2007 cv
493.336 95.1826 493.435 95.2417 493.456 95.3423 cv
493.942 97.6309 li
493.964 97.73 493.901 97.8281 493.802 97.8491 cv
493.789 97.8516 493.775 97.853 493.763 97.853 cv
cp
1 1 1 rgb
f
533.308 83.1074 mo
533.284 83.1074 533.262 83.103 533.238 83.0938 cv
533.144 83.0557 533.099 82.9482 533.137 82.854 cv
534.566 79.3184 535.22 75.9199 535.026 73.0254 cv
535.021 72.9243 535.098 72.8364 535.198 72.8301 cv
535.302 72.8271 535.388 72.9004 535.396 73.001 cv
535.591 75.9502 534.929 79.4053 533.479 82.9922 cv
533.45 83.0645 533.381 83.1074 533.308 83.1074 cv
cp
f
520.396 75.3604 mo
520.366 75.3604 520.337 75.353 520.31 75.3384 cv
519.401 74.8535 517.977 74.9966 517.967 74.9995 cv
517.84 75.0068 517.773 74.9355 517.764 74.8354 cv
517.752 74.7344 517.826 74.6436 517.927 74.6328 cv
517.989 74.6265 519.476 74.4775 520.481 75.0132 cv
520.572 75.0615 520.605 75.1729 520.558 75.2632 cv
520.525 75.3247 520.462 75.3604 520.396 75.3604 cv
cp
.282353 0 0 rgb
f
480.708 81.5308 mo
480.644 81.5308 480.582 81.4985 480.547 81.4395 cv
472.895 68.7471 li
459.992 68.7471 li
459.889 68.7471 459.805 68.6626 459.805 68.5586 cv
459.805 68.4546 459.889 68.3701 459.992 68.3701 cv
473 68.3701 li
473.066 68.3701 473.128 68.4043 473.161 68.4614 cv
480.869 81.2451 li
480.924 81.334 480.894 81.4502 480.806 81.5039 cv
480.775 81.5225 480.741 81.5308 480.708 81.5308 cv
cp
1 .454902 .262745 rgb
f
53.6401 204.433 mo
53.6401 204.433 56.9111 212.399 61.0518 212.399 cv
65.1929 212.399 69.9829 198.699 67.9844 189.449 cv
65.5454 189.449 li
65.5454 189.449 62.2964 200.738 57.9683 202.585 cv
53.6401 204.433 53.6401 204.433 53.6401 204.433 cv
cp
.929412 .533333 .427451 rgb
f
57.2441 232.024 mo
28.356 232.024 li
27.5806 232.024 26.9463 231.391 26.9463 230.615 cv
26.9463 230.615 li
26.9463 229.84 27.5806 229.205 28.356 229.205 cv
57.2441 229.205 li
58.0195 229.205 58.6538 229.84 58.6538 230.615 cv
58.6538 230.615 li
58.6538 231.391 58.0195 232.024 57.2441 232.024 cv
cp
1 .454902 .262745 rgb
f
55.3564 276.489 mo
55.2544 276.489 55.1724 276.406 55.1724 276.305 cv
55.1724 275.396 li
55.1724 273.643 53.7451 272.215 51.9912 272.215 cv
33.6094 272.215 li
31.855 272.215 30.4272 273.643 30.4272 275.396 cv
30.4272 276.305 li
30.4272 276.406 30.3447 276.489 30.2432 276.489 cv
30.1421 276.489 30.0591 276.406 30.0591 276.305 cv
30.0591 275.396 li
30.0591 273.438 31.6519 271.847 33.6094 271.847 cv
51.9912 271.847 li
53.9478 271.847 55.5405 273.438 55.5405 275.396 cv
55.5405 276.305 li
55.5405 276.406 55.4585 276.489 55.3564 276.489 cv
cp
f
41.7803 272.031 mo
41.7803 272.595 42.2368 273.051 42.7998 273.051 cv
43.3633 273.051 43.8198 272.595 43.8198 272.031 cv
43.8198 271.468 43.3633 271.012 42.7998 271.012 cv
42.2368 271.012 41.7803 271.468 41.7803 272.031 cv
cp
f
42.7998 276.489 mo
42.6978 276.489 42.6157 276.406 42.6157 276.305 cv
42.6157 232.024 li
42.6157 231.923 42.6978 231.84 42.7998 231.84 cv
42.9019 231.84 42.9839 231.923 42.9839 232.024 cv
42.9839 276.305 li
42.9839 276.406 42.9019 276.489 42.7998 276.489 cv
cp
f
41.7803 277.325 mo
41.7803 277.889 42.2368 278.345 42.7998 278.345 cv
43.3633 278.345 43.8198 277.889 43.8198 277.325 cv
43.8198 276.762 43.3633 276.306 42.7998 276.306 cv
42.2368 276.306 41.7803 276.762 41.7803 277.325 cv
cp
f
54.3364 277.325 mo
54.3364 277.889 54.793 278.345 55.356 278.345 cv
55.9194 278.345 56.376 277.889 56.376 277.325 cv
56.376 276.762 55.9194 276.306 55.356 276.306 cv
54.793 276.306 54.3364 276.762 54.3364 277.325 cv
cp
f
29.2236 277.325 mo
29.2236 277.889 29.6802 278.345 30.2437 278.345 cv
30.8066 278.345 31.2632 277.889 31.2632 277.325 cv
31.2632 276.762 30.8066 276.306 30.2437 276.306 cv
29.6802 276.306 29.2236 276.762 29.2236 277.325 cv
cp
f
98.3418 203.409 mo
91.6548 191.896 li
91.2539 191.206 90.5156 190.781 89.7173 190.781 cv
87.668 190.781 li
87.2002 190.781 86.7461 190.902 86.3164 191.087 cv
85.6279 191.384 84.3848 191.641 83.1216 190.517 cv
81.2275 188.832 80.9634 190.286 80.9634 190.286 cv
80.9634 190.286 79.5977 190.286 80.6108 191.52 cv
81.1274 192.147 82.0327 192.811 82.7964 193.31 cv
83.6133 193.844 84.5703 194.118 85.5464 194.118 cv
87.7871 194.118 li
88.6846 194.118 89.4814 194.691 89.7661 195.542 cv
94.3242 209.15 li
95.5679 212.864 100.145 214.466 103.239 212.064 cv
104.438 211.134 105.542 209.605 106.343 207.18 cv
98.3418 203.409 li
cp
.929412 .533333 .427451 rgb
f
84.3774 192.694 mo
84.3647 192.694 84.3516 192.692 84.3389 192.689 cv
84.2568 192.673 82.3257 192.243 81.1748 190.89 cv
81.1099 190.813 81.1187 190.696 81.1963 190.63 cv
81.2754 190.564 81.3906 190.575 81.457 190.651 cv
82.5244 191.908 84.3979 192.326 84.4165 192.33 cv
84.5156 192.352 84.5791 192.449 84.5576 192.549 cv
84.5386 192.635 84.4624 192.694 84.3774 192.694 cv
cp
.282353 0 0 rgb
f
101.58 213.81 mo
45.5898 213.81 li
44.8145 213.81 44.1802 213.175 44.1802 212.399 cv
44.1802 212.399 li
44.1802 211.624 44.8145 210.99 45.5898 210.99 cv
101.58 210.99 li
102.354 210.99 102.989 211.624 102.989 212.399 cv
102.989 212.399 li
102.989 213.175 102.354 213.81 101.58 213.81 cv
cp
.827451 .188235 .396078 rgb
f
103.837 213.81 mo
53.7144 213.81 li
52.9395 213.81 52.3047 213.175 52.3047 212.399 cv
52.3047 212.399 li
52.3047 211.624 52.9395 210.99 53.7144 210.99 cv
103.837 210.99 li
104.612 210.99 105.247 211.624 105.247 212.399 cv
105.247 212.399 li
105.247 213.175 104.612 213.81 103.837 213.81 cv
cp
f
45.5898 278.529 mo
45.4878 278.529 45.4058 278.446 45.4058 278.345 cv
45.4058 213.81 li
45.4058 213.708 45.4878 213.625 45.5898 213.625 cv
45.6919 213.625 45.7739 213.708 45.7739 213.81 cv
45.7739 278.345 li
45.7739 278.446 45.6919 278.529 45.5898 278.529 cv
cp
f
53.6948 278.529 mo
53.5928 278.529 53.5107 278.446 53.5107 278.345 cv
53.5107 213.81 li
53.5107 213.708 53.5928 213.625 53.6948 213.625 cv
53.7969 213.625 53.8789 213.708 53.8789 213.81 cv
53.8789 278.345 li
53.8789 278.446 53.7969 278.529 53.6948 278.529 cv
cp
f
101.579 278.529 mo
101.477 278.529 101.395 278.446 101.395 278.345 cv
101.395 213.81 li
101.395 213.708 101.477 213.625 101.579 213.625 cv
101.681 213.625 101.763 213.708 101.763 213.81 cv
101.763 278.345 li
101.763 278.446 101.681 278.529 101.579 278.529 cv
cp
f
134.036 232.024 mo
105.147 232.024 li
104.373 232.024 103.738 231.391 103.738 230.615 cv
103.738 230.615 li
103.738 229.84 104.373 229.205 105.147 229.205 cv
134.036 229.205 li
134.811 229.205 135.445 229.84 135.445 230.615 cv
135.445 230.615 li
135.445 231.391 134.811 232.024 134.036 232.024 cv
cp
1 .454902 .262745 rgb
f
132.148 276.489 mo
132.046 276.489 131.964 276.406 131.964 276.305 cv
131.964 275.396 li
131.964 273.643 130.537 272.215 128.783 272.215 cv
110.402 272.215 li
108.646 272.215 107.219 273.643 107.219 275.396 cv
107.219 276.305 li
107.219 276.406 107.137 276.489 107.035 276.489 cv
106.933 276.489 106.851 276.406 106.851 276.305 cv
106.851 275.396 li
106.851 273.438 108.443 271.847 110.402 271.847 cv
128.783 271.847 li
130.739 271.847 132.332 273.438 132.332 275.396 cv
132.332 276.305 li
132.332 276.406 132.25 276.489 132.148 276.489 cv
cp
f
118.572 272.031 mo
118.572 272.595 119.028 273.051 119.592 273.051 cv
120.155 273.051 120.611 272.595 120.611 272.031 cv
120.611 271.468 120.155 271.012 119.592 271.012 cv
119.028 271.012 118.572 271.468 118.572 272.031 cv
cp
f
119.591 276.489 mo
119.489 276.489 119.407 276.406 119.407 276.305 cv
119.407 232.024 li
119.407 231.923 119.489 231.84 119.591 231.84 cv
119.693 231.84 119.775 231.923 119.775 232.024 cv
119.775 276.305 li
119.775 276.406 119.693 276.489 119.591 276.489 cv
cp
f
118.572 277.325 mo
118.572 277.889 119.028 278.345 119.592 278.345 cv
120.155 278.345 120.611 277.889 120.611 277.325 cv
120.611 276.762 120.155 276.306 119.592 276.306 cv
119.028 276.306 118.572 276.762 118.572 277.325 cv
cp
f
131.128 277.325 mo
131.128 277.889 131.585 278.345 132.148 278.345 cv
132.711 278.345 133.168 277.889 133.168 277.325 cv
133.168 276.762 132.711 276.306 132.148 276.306 cv
131.585 276.306 131.128 276.762 131.128 277.325 cv
cp
f
106.016 277.325 mo
106.016 277.889 106.472 278.345 107.035 278.345 cv
107.599 278.345 108.055 277.889 108.055 277.325 cv
108.055 276.762 107.599 276.306 107.035 276.306 cv
106.472 276.306 106.016 276.762 106.016 277.325 cv
cp
f
55.2236 178.192 mo
55.5244 179.33 56.4644 179.774 56.3501 180.236 cv
56.2788 180.525 55.8569 180.805 54.7964 180.497 cv
55.2236 178.192 li
cp
.929412 .533333 .427451 rgb
f
45.4995 183.927 mo
42.333 182.651 40.1846 179.665 39.9824 176.257 cv
39.7803 172.849 41.5601 169.63 44.5542 167.988 cv
47.5479 166.348 50.9678 166.768 53.7319 168.771 cv
57.0029 167.766 61.7051 181.626 45.4995 183.927 cv
cp
.282353 0 0 rgb
f
51.6851 185.42 mo
51.6851 190.781 li
44.3008 187.852 li
46.2715 181.399 li
45.3389 181.229 44.5767 180.52 44.3403 179.587 cv
44.1035 178.653 44.4453 177.668 45.1943 177.077 cv
45.9434 176.485 46.9814 176.38 47.8354 176.827 cv
50.6211 176.656 52.9731 174.712 53.6563 172.005 cv
58.229 178.956 54.8389 188.101 51.6851 185.42 cv
cp
.929412 .533333 .427451 rgb
f
50.0747 177.511 mo
50.0259 177.511 49.978 177.491 49.9409 177.453 cv
49.8716 177.379 49.8745 177.263 49.9482 177.193 cv
50.9624 176.224 52.3521 175.73 53.748 175.854 cv
53.8486 175.862 53.9233 175.95 53.9165 176.052 cv
53.9077 176.148 53.8271 176.221 53.7319 176.221 cv
53.728 176.221 53.7222 176.221 53.7163 176.221 cv
52.4126 176.111 51.1406 176.564 50.2012 177.459 cv
50.1665 177.494 50.1206 177.511 50.0747 177.511 cv
cp
.282353 0 0 rgb
f
50.8071 178.737 mo
50.7813 178.737 50.7554 178.731 50.731 178.721 cv
49.7754 178.284 li
49.6816 178.241 49.6416 178.132 49.6846 178.04 cv
49.7266 177.946 49.8403 177.909 49.9277 177.948 cv
50.771 178.333 li
51.4688 177.696 52.4014 177.398 53.3467 177.521 cv
53.4473 177.534 53.519 177.626 53.5063 177.727 cv
53.4932 177.827 53.397 177.898 53.3003 177.887 cv
52.4272 177.778 51.5654 178.066 50.9365 178.684 cv
50.9004 178.719 50.8545 178.737 50.8071 178.737 cv
cp
f
47.5669 178.3 mo
47.5034 178.3 47.4414 178.268 47.4072 178.208 cv
47.1738 177.803 46.6602 177.645 46.2314 177.846 cv
46.1465 177.888 46.0317 177.852 45.9868 177.76 cv
45.9424 177.667 45.9814 177.557 46.0732 177.514 cv
46.6646 177.225 47.394 177.451 47.7266 178.024 cv
47.7769 178.111 47.7466 178.225 47.6587 178.275 cv
47.6299 178.292 47.5981 178.3 47.5669 178.3 cv
cp
f
53.3228 181.667 mo
52.4971 181.479 51.73 181.09 51.0898 180.534 cv
51.4673 183.806 51.9077 184.654 53.3228 181.667 cv
cp
1 1 1 rgb
f
51.6851 185.42 mo
51.6851 187.378 li
49.7144 185.946 50.3716 183.502 50.3716 183.502 cv
50.3716 183.502 50.9365 184.605 51.6851 185.42 cv
cp
.282353 0 0 rgb
f
53.7319 171.377 mo
53.7007 171.377 53.6675 171.369 53.6387 171.352 cv
53.5508 171.3 53.522 171.187 53.5737 171.1 cv
53.8657 170.604 53.8657 169.989 53.5737 169.494 cv
53.522 169.407 53.5508 169.295 53.6387 169.243 cv
53.7236 169.188 53.8369 169.221 53.8906 169.308 cv
54.2515 169.918 54.2515 170.677 53.8906 171.287 cv
53.856 171.345 53.7954 171.377 53.7319 171.377 cv
cp
.929412 .533333 .427451 rgb
f
43.6792 170.124 mo
43.3882 170.124 43.0962 170.112 42.8027 170.088 cv
42.7021 170.079 42.6274 169.989 42.6343 169.889 cv
42.6431 169.792 42.7236 169.72 42.8184 169.72 cv
42.8232 169.72 42.8286 169.72 42.8345 169.721 cv
45.417 169.938 47.9521 169.148 49.958 167.497 cv
50.0327 167.432 50.1509 167.445 50.2168 167.521 cv
50.2817 167.601 50.2705 167.717 50.1914 167.781 cv
48.3394 169.308 46.0547 170.124 43.6792 170.124 cv
cp
.376471 .262745 .321569 rgb
f
39.2329 173.888 mo
39.7563 170.529 42.123 167.749 45.3555 166.696 cv
44.2139 164.913 42.0625 164.057 40.0083 164.566 cv
37.9536 165.076 36.4526 166.839 36.2773 168.949 cv
36.1016 171.059 37.2905 173.046 39.2329 173.888 cv
cp
.282353 0 0 rgb
f
36.6748 169.339 mo
36.6016 169.339 36.5317 169.294 36.5029 169.222 cv
36.4663 169.126 36.5132 169.02 36.6079 168.982 cv
38.5381 168.23 40.0977 166.699 40.8877 164.781 cv
40.9253 164.687 41.0317 164.641 41.1279 164.681 cv
41.2217 164.719 41.2661 164.827 41.2271 164.921 cv
40.4014 166.932 38.7656 168.537 36.7417 169.326 cv
36.7192 169.334 36.6973 169.339 36.6748 169.339 cv
cp
.376471 .262745 .321569 rgb
f
40.5854 177.756 mo
40.5669 177.756 40.5483 177.753 40.5293 177.747 cv
40.4331 177.717 40.3799 177.613 40.4102 177.517 cv
41.5552 173.887 44.3926 173.485 46.8979 173.132 cv
49.3726 172.782 51.5093 172.48 51.8818 169.379 cv
51.8945 169.278 51.9868 169.212 52.0859 169.219 cv
52.187 169.23 52.2603 169.322 52.2471 169.424 cv
51.8413 172.806 49.4648 173.142 46.9482 173.497 cv
44.436 173.852 41.8374 174.219 40.7612 177.627 cv
40.7368 177.705 40.6631 177.756 40.5854 177.756 cv
cp
f
45.3555 181.938 mo
45.3555 182.238 45.1113 182.482 44.8105 182.482 cv
44.5098 182.482 44.2661 182.238 44.2661 181.938 cv
44.2661 181.637 44.5098 181.394 44.8105 181.394 cv
45.1113 181.394 45.3555 181.637 45.3555 181.938 cv
cp
.827451 .188235 .396078 rgb
f
55.604 180.814 mo
55.3794 180.814 55.0977 180.776 54.7451 180.675 cv
54.6475 180.646 54.5913 180.544 54.6201 180.446 cv
54.6484 180.349 54.751 180.292 54.8486 180.32 cv
55.5708 180.529 55.9004 180.434 56.0327 180.357 cv
56.1074 180.314 56.1553 180.257 56.1724 180.191 cv
56.2026 180.067 56.04 179.872 55.8516 179.646 cv
55.584 179.324 55.2168 178.885 55.0459 178.239 cv
55.02 178.142 55.0791 178.041 55.1768 178.015 cv
55.2729 177.986 55.377 178.046 55.4023 178.146 cv
55.5522 178.712 55.8745 179.099 56.1348 179.41 cv
56.3867 179.713 56.6055 179.975 56.5293 180.28 cv
56.4888 180.443 56.3779 180.584 56.2168 180.677 cv
56.0903 180.75 55.896 180.814 55.604 180.814 cv
cp
.282353 0 0 rgb
f
51.2515 178.376 mo
51.2188 178.376 51.187 178.368 51.1567 178.35 cv
50.5796 178.002 li
50.4917 177.949 50.4644 177.836 50.5161 177.749 cv
50.5679 177.66 50.6816 177.634 50.7695 177.687 cv
51.3467 178.035 li
51.4346 178.087 51.4619 178.2 51.4097 178.287 cv
51.3755 178.345 51.3135 178.376 51.2515 178.376 cv
cp
f
29.644 255.743 mo
28.9351 256.671 28.2393 257.482 27.5435 258.204 cv
24.3857 261.504 21.4863 262.767 19.6304 263.23 cv
18.6768 263.476 17.8394 262.573 18.1484 261.646 cv
19.5791 257.38 20.9321 255.163 22.2466 253.655 cv
22.2593 253.643 li
23.2905 252.495 24.2827 251.761 25.2881 250.846 cv
26.5381 249.699 27.2725 248.5 27.6982 247.599 cv
28.1104 246.709 28.9868 246.116 29.979 246.116 cv
31.4995 246.116 li
31.4995 246.116 35.856 247.599 29.644 255.743 cv
cp
.929412 .533333 .427451 rgb
f
27.5435 258.204 mo
24.3857 261.504 21.4863 262.767 19.6304 263.23 cv
18.6768 263.476 17.8394 262.573 18.1484 261.646 cv
19.5791 257.38 20.9321 255.163 22.2466 253.655 cv
19.4888 258.63 20.5713 262.586 27.5435 258.204 cv
cp
.827451 .188235 .396078 rgb
f
46.2505 215.836 mo
46.2505 208.429 54.0547 208.194 55.3921 204.03 cv
60.3472 204.03 li
60.3472 198.929 li
60.3472 196.701 58.9561 194.711 56.8643 193.945 cv
53.2104 192.607 li
53.2104 192.607 li
53.2104 191.531 52.5366 190.57 51.5249 190.203 cv
45.0415 187.853 li
44.1455 187.528 43.1479 187.919 42.7104 188.765 cv
39.7402 187.678 li
35.9126 186.277 31.7749 188.772 31.2114 192.81 cv
30.5337 197.665 30.4141 202.157 30.4141 202.157 cv
32.1982 202.157 li
32.1982 202.157 33.7178 209.029 27.6387 214.845 cv
26.9424 215.511 26.3115 216.134 25.7407 216.715 cv
21.752 220.773 23.4688 227.709 28.9263 229.321 cv
32.6084 230.409 36.9761 230.021 36.9761 230.021 cv
35.4341 232.796 li
65.2173 232.796 li
68.8442 229.649 69.8306 220.091 46.2505 215.836 cv
cp
f
35.9648 229.665 mo
35.9331 229.665 35.9014 229.657 35.8721 229.64 cv
35.7842 229.589 35.7549 229.476 35.8057 229.388 cv
37.0938 227.174 li
37.144 227.087 37.2573 227.055 37.3452 227.108 cv
37.4331 227.159 37.4634 227.272 37.4131 227.359 cv
36.124 229.573 li
36.0898 229.632 36.0283 229.665 35.9648 229.665 cv
cp
.282353 0 0 rgb
f
40.1611 201.549 mo
40.0591 201.549 39.9771 201.466 39.9771 201.364 cv
39.9771 195.12 li
39.9771 195.019 40.0591 194.936 40.1611 194.936 cv
40.2632 194.936 40.3452 195.019 40.3452 195.12 cv
40.3452 201.364 li
40.3452 201.466 40.2632 201.549 40.1611 201.549 cv
cp
f
32.3325 276.163 mo
32.8418 276.875 32.4219 277.854 31.5566 277.956 cv
22.2075 279.037 21.8892 269.942 22.2456 265.72 cv
22.3472 264.511 22.8306 263.366 23.6318 262.45 cv
23.6572 262.412 23.6958 262.387 23.7212 262.349 cv
30.1831 254.768 30.189 242.743 35.4341 232.791 cv
50.897 232.791 li
44.23 246.083 34.8896 248.114 29.9668 265.465 cv
29.1528 268.314 29.6616 270.858 30.4756 272.843 cv
31.0605 274.28 31.8115 275.425 32.3325 276.163 cv
cp
.929412 .533333 .427451 rgb
f
31.5566 277.956 mo
22.2075 279.037 21.8892 269.942 22.2456 265.72 cv
22.3472 264.511 22.8306 263.366 23.6318 262.45 cv
23.6572 262.412 23.6958 262.387 23.7212 262.349 cv
22.6782 272.397 27.6899 279.037 30.4756 272.843 cv
31.0605 274.28 31.8115 275.425 32.3325 276.163 cv
32.8418 276.875 32.4219 277.854 31.5566 277.956 cv
cp
.827451 .188235 .396078 rgb
f
65.2173 232.796 mo
55.4185 239.793 44.9668 245.307 36.3359 248.214 cv
49.4443 232.791 li
65.2173 232.796 li
cp
.929412 .533333 .427451 rgb
f
65.6016 186.878 mo
67.3628 187.542 li
68.2168 187.864 68.6938 188.779 68.4551 189.659 cv
67.9668 191.461 66.7554 194.037 63.8931 193.149 cv
62.252 192.64 62.7197 189.93 63.2637 188.058 cv
63.5547 187.057 64.6265 186.51 65.6016 186.878 cv
cp
f
63.7178 192.034 mo
63.7061 192.034 63.6929 192.032 63.6802 192.03 cv
63.5811 192.01 63.5161 191.912 63.5376 191.813 cv
64.2427 188.354 li
64.2612 188.256 64.3462 188.192 64.46 188.211 cv
64.5591 188.23 64.624 188.329 64.6025 188.428 cv
63.8975 191.887 li
63.8804 191.974 63.8037 192.034 63.7178 192.034 cv
cp
.282353 0 0 rgb
f
64.4224 192.408 mo
64.4023 192.408 64.3809 192.404 64.3608 192.397 cv
64.2642 192.363 64.2153 192.258 64.2485 192.162 cv
65.4629 188.748 li
65.4976 188.652 65.604 188.605 65.6987 188.637 cv
65.7954 188.671 65.8442 188.776 65.811 188.872 cv
64.5967 192.286 li
64.5693 192.361 64.499 192.408 64.4224 192.408 cv
cp
f
65.3911 192.65 mo
65.3647 192.65 65.3374 192.645 65.312 192.633 cv
65.2212 192.589 65.1807 192.479 65.2241 192.388 cv
66.8096 189.018 li
66.854 188.926 66.9634 188.888 67.0557 188.93 cv
67.1465 188.974 67.1865 189.083 67.1436 189.175 cv
65.5576 192.545 li
65.5264 192.611 65.46 192.65 65.3911 192.65 cv
cp
f
71.5806 190.966 mo
71.5605 190.966 71.5405 190.963 71.522 190.955 cv
68.9839 190.086 li
68.8872 190.053 68.8354 189.948 68.8687 189.852 cv
68.9014 189.756 69.0122 189.703 69.1016 189.737 cv
71.6396 190.607 li
71.7358 190.641 71.7881 190.744 71.7549 190.841 cv
71.729 190.917 71.6572 190.966 71.5806 190.966 cv
cp
.827451 .188235 .396078 rgb
f
62.4526 188.05 mo
62.4326 188.05 62.4126 188.047 62.394 188.04 cv
59.9292 187.195 li
58.2944 188.029 li
58.2095 188.075 58.0947 188.041 58.0474 187.949 cv
58.001 187.858 58.0371 187.747 58.1279 187.701 cv
59.8311 186.832 li
59.8745 186.808 59.9277 186.805 59.9736 186.821 cv
62.5117 187.691 li
62.6084 187.725 62.6602 187.829 62.627 187.925 cv
62.6011 188.002 62.5293 188.05 62.4526 188.05 cv
cp
f
58.2114 201.108 mo
58.1909 201.108 58.1694 201.104 58.1494 201.098 cv
32.4658 191.818 li
32.3701 191.783 32.3203 191.678 32.355 191.582 cv
32.3892 191.487 32.4956 191.438 32.5908 191.472 cv
58.2729 200.751 li
58.3696 200.785 58.4185 200.892 58.3838 200.987 cv
58.3579 201.062 58.2861 201.108 58.2114 201.108 cv
cp
.929412 .533333 .427451 rgb
f
62.8916 223.598 mo
62.8716 223.598 62.8501 223.595 62.8296 223.587 cv
31.3291 212.205 li
31.2334 212.171 31.1836 212.065 31.2183 211.97 cv
31.2529 211.874 31.3584 211.826 31.4541 211.858 cv
62.9536 223.24 li
63.0498 223.275 63.0991 223.381 63.0645 223.477 cv
63.0386 223.552 62.9663 223.598 62.8916 223.598 cv
cp
f
65.7607 230.718 mo
65.7407 230.718 65.7188 230.715 65.6987 230.707 cv
27.3779 216.861 li
27.2822 216.827 27.2324 216.721 27.2671 216.625 cv
27.3022 216.529 27.4058 216.483 27.5029 216.515 cv
65.8228 230.36 li
65.9189 230.395 65.9678 230.501 65.9336 230.597 cv
65.9072 230.671 65.8354 230.718 65.7607 230.718 cv
cp
f
52.4385 231.887 mo
52.4185 231.887 52.397 231.884 52.377 231.876 cv
24.5371 221.817 li
24.4414 221.783 24.3916 221.677 24.4263 221.581 cv
24.4614 221.485 24.5674 221.439 24.6621 221.471 cv
52.5005 231.529 li
52.5967 231.564 52.646 231.67 52.6113 231.766 cv
52.5854 231.84 52.5132 231.887 52.4385 231.887 cv
cp
f
38.9312 201.747 mo
38.9106 201.747 38.8892 201.744 38.8677 201.736 cv
31.7622 199.168 li
31.6665 199.134 31.6167 199.028 31.6514 198.933 cv
31.6865 198.837 31.791 198.788 31.8872 198.821 cv
38.9941 201.39 li
39.0894 201.424 39.1382 201.53 39.1035 201.626 cv
39.0776 201.7 39.0059 201.747 38.9312 201.747 cv
cp
f
69.2739 197.484 mo
69.043 198.995 li
68.2104 204.527 li
67.7329 207.687 li
63.9883 207.687 li
62.4473 197.484 li
69.2739 197.484 li
cp
.282353 0 0 rgb
f
70.0874 197.478 mo
61.6328 197.478 li
61.6328 195.863 li
70.0874 195.863 li
70.0874 197.478 li
cp
.827451 .188235 .396078 rgb
f
69.2681 194.63 mo
62.4521 194.63 li
62.4521 195.863 li
69.2681 195.863 li
69.2681 194.63 li
cp
f
69.043 198.995 mo
68.2104 204.527 li
65.853 204.527 li
65.853 198.995 li
69.043 198.995 li
cp
f
29.0923 216.219 mo
29.0083 216.219 28.9316 216.16 28.9126 216.074 cv
28.8901 215.976 28.9526 215.877 29.0518 215.854 cv
34.4072 214.652 39.8677 214.497 45.2793 215.39 cv
45.3799 215.406 45.4473 215.501 45.4302 215.602 cv
45.4146 215.702 45.3208 215.765 45.2188 215.754 cv
39.8506 214.866 34.439 215.021 29.1323 216.214 cv
29.1187 216.217 29.105 216.219 29.0923 216.219 cv
cp
.282353 0 0 rgb
f
52.3047 230.799 mo
52.2515 230.799 52.1982 230.776 52.1621 230.731 cv
52.0977 230.652 52.1089 230.536 52.1885 230.472 cv
53.981 229.018 54.7813 226.715 54.2773 224.463 cv
53.7739 222.211 52.0703 220.467 49.8286 219.913 cv
49.731 219.889 49.6704 219.789 49.6948 219.69 cv
49.7178 219.593 49.8101 219.533 49.918 219.555 cv
52.2949 220.144 54.1035 221.993 54.6372 224.382 cv
55.1709 226.772 54.3223 229.215 52.4214 230.759 cv
52.3867 230.785 52.3452 230.799 52.3047 230.799 cv
cp
f
55.1265 201.549 mo
55.0947 201.549 55.063 201.541 55.0327 201.523 cv
54.9448 201.472 54.916 201.359 54.9683 201.271 cv
54.978 201.253 56.0615 199.38 55.9668 197.608 cv
55.9609 197.507 56.04 197.42 56.1406 197.414 cv
56.2314 197.425 56.3291 197.487 56.335 197.588 cv
56.4355 199.473 55.332 201.378 55.2847 201.458 cv
55.2515 201.517 55.1895 201.549 55.1265 201.549 cv
cp
f
26.8633 257.832 mo
26.8359 257.832 26.8081 257.826 26.7822 257.813 cv
26.6909 257.768 26.6533 257.658 26.6982 257.566 cv
28.3335 254.238 29.5586 250.754 30.3403 247.21 cv
30.3628 247.11 30.4634 247.049 30.5601 247.069 cv
30.6592 247.091 30.7217 247.189 30.7002 247.289 cv
29.9116 250.862 28.6763 254.374 27.0288 257.729 cv
26.9966 257.794 26.9312 257.832 26.8633 257.832 cv
cp
1 1 1 rgb
f
41.7798 245.396 mo
41.7354 245.396 41.6904 245.38 41.6563 245.348 cv
41.5811 245.279 41.5757 245.163 41.6431 245.088 cv
42.062 244.629 li
44.9106 241.502 47.856 238.27 50.4702 233.223 cv
50.519 233.132 50.6313 233.098 50.7192 233.144 cv
50.8101 233.19 50.8442 233.302 50.7983 233.393 cv
48.1611 238.481 45.1982 241.733 42.334 244.877 cv
41.9165 245.336 li
41.8789 245.376 41.8301 245.396 41.7798 245.396 cv
cp
f
63.7178 232.976 mo
36.6089 232.976 li
36.5073 232.976 36.4243 232.893 36.4243 232.791 cv
36.4243 232.69 36.5073 232.607 36.6089 232.607 cv
63.7178 232.607 li
63.8198 232.607 63.9019 232.69 63.9019 232.791 cv
63.9019 232.893 63.8198 232.976 63.7178 232.976 cv
cp
.282353 0 0 rgb
f
31.4775 202.157 mo
56.6152 202.157 li
56.6152 202.157 59.8516 201.453 61.999 200.297 cv
64.1465 199.14 67.4175 199.272 67.6484 199.9 cv
67.8799 200.527 63.585 200.197 63.4526 201.155 cv
63.3208 202.113 67.814 201.145 67.979 202.157 cv
68.144 203.171 64.1138 202.312 63.915 203.237 cv
63.7168 204.162 68.022 203.006 67.9839 203.732 cv
67.9463 204.459 64.1797 204.657 64.1797 204.657 cv
64.1797 204.657 65.7944 205.401 67.0825 205.038 cv
68.3877 204.658 67.9521 205.997 63.8872 205.879 cv
62.7476 205.846 57.9277 205.385 55.8667 205.813 cv
54.436 206.112 43.8311 208.113 38.4092 209.31 cv
35.4531 209.962 32.4844 208.111 31.8755 205.146 cv
31.7002 204.291 31.5601 203.302 31.4775 202.157 cv
cp
.929412 .533333 .427451 rgb
f
37.2305 209.622 mo
35.5259 209.622 33.8696 208.858 32.7905 207.516 cv
32.7275 207.437 32.7397 207.32 32.8198 207.257 cv
32.8984 207.194 33.0151 207.207 33.0786 207.285 cv
34.3276 208.84 36.4111 209.563 38.3696 209.13 cv
42.3193 208.259 48.9521 206.973 52.916 206.204 cv
54.374 205.921 55.4399 205.715 55.8301 205.634 cv
57.479 205.29 60.7754 205.502 62.7451 205.629 cv
63.25 205.661 63.6528 205.688 63.8931 205.694 cv
66.2383 205.766 67.2095 205.351 67.4785 205.153 cv
67.4038 205.155 67.29 205.17 67.1348 205.215 cv
65.7939 205.595 64.1709 204.856 64.1016 204.825 cv
64.0254 204.789 63.9824 204.705 63.998 204.623 cv
64.0142 204.539 64.0845 204.479 64.1694 204.473 cv
66.0542 204.375 67.7852 204.017 67.7993 203.723 cv
67.6729 203.599 66.6772 203.681 66.083 203.728 cv
64.8511 203.829 64.0933 203.864 63.8213 203.556 cv
63.7622 203.487 63.6973 203.37 63.7349 203.199 cv
63.8613 202.606 64.9019 202.578 66.001 202.549 cv
66.7104 202.529 67.5923 202.506 67.7749 202.284 cv
67.7925 202.264 67.8066 202.238 67.7983 202.187 cv
67.7393 201.828 66.4268 201.823 65.5576 201.82 cv
64.5405 201.816 63.6631 201.813 63.3721 201.478 cv
63.2871 201.381 63.2529 201.26 63.27 201.13 cv
63.3623 200.465 64.6816 200.325 65.958 200.189 cv
66.519 200.131 67.2729 200.051 67.4556 199.935 cv
67.4282 199.903 67.3638 199.853 67.2183 199.798 cv
66.3076 199.454 63.7925 199.541 62.0874 200.458 cv
59.9409 201.614 56.6875 202.33 56.6543 202.337 cv
33.4009 202.342 li
33.2993 202.342 33.2168 202.259 33.2168 202.157 cv
33.2168 202.056 33.2993 201.974 33.4009 201.974 cv
56.6152 201.974 li
56.6084 201.971 59.8125 201.266 61.9116 200.135 cv
63.7349 199.154 66.3491 199.075 67.3491 199.453 cv
67.604 199.55 67.7637 199.679 67.8213 199.836 cv
67.8555 199.93 67.8457 200.025 67.7954 200.107 cv
67.6313 200.372 67.0659 200.443 65.9966 200.556 cv
65.1333 200.647 63.6875 200.801 63.6357 201.181 cv
63.6313 201.208 63.6372 201.222 63.6499 201.236 cv
63.8311 201.445 64.7896 201.449 65.5591 201.451 cv
66.8413 201.456 68.0527 201.46 68.1606 202.128 cv
68.1851 202.273 68.1504 202.409 68.0601 202.519 cv
67.769 202.87 66.9551 202.892 66.0112 202.916 cv
65.2314 202.938 64.1606 202.967 64.0947 203.276 cv
64.2656 203.503 65.3418 203.418 66.0542 203.361 cv
67.1348 203.274 67.8125 203.232 68.064 203.479 cv
68.1377 203.55 68.1738 203.641 68.168 203.742 cv
68.1348 204.381 66.3965 204.659 65.0889 204.777 cv
65.6426 204.926 66.3882 205.042 67.0327 204.861 cv
67.2627 204.793 67.6831 204.711 67.8569 204.919 cv
67.9316 205.006 67.9434 205.123 67.8901 205.234 cv
67.6743 205.684 66.3174 206.129 63.8813 206.063 cv
63.6401 206.056 63.2324 206.03 62.7217 205.997 cv
60.8989 205.88 57.5063 205.659 55.9048 205.995 cv
55.5146 206.075 54.4458 206.282 52.9868 206.566 cv
49.0244 207.334 42.394 208.619 38.4502 209.489 cv
38.0459 209.579 37.6357 209.622 37.2305 209.622 cv
cp
1 1 1 rgb
f
65.0557 193.518 mo
64.9551 193.518 64.8584 193.513 64.7666 193.504 cv
64.6641 193.494 64.5908 193.404 64.6011 193.304 cv
64.6108 193.202 64.7061 193.12 64.8008 193.138 cv
65.5996 193.215 66.7407 192.956 67.627 191.298 cv
67.6743 191.21 67.7866 191.176 67.876 191.223 cv
67.9663 191.271 67.9995 191.382 67.9521 191.472 cv
67.0698 193.123 65.936 193.518 65.0557 193.518 cv
cp
f
68.4526 196.048 mo
63.1362 196.048 li
63.0342 196.048 62.9521 195.965 62.9521 195.863 cv
62.9521 195.762 63.0342 195.679 63.1362 195.679 cv
68.4526 195.679 li
68.5547 195.679 68.6367 195.762 68.6367 195.863 cv
68.6367 195.965 68.5547 196.048 68.4526 196.048 cv
cp
.282353 0 0 rgb
f
92.0464 269.245 mo
91.7212 269.779 91.3379 270.255 90.9082 270.661 cv
89.0503 272.496 86.5425 273.111 84.9287 273.32 cv
84.1157 273.413 83.4653 272.658 83.686 271.881 cv
84.29 269.732 85.7759 265.681 89.0391 262.15 cv
89.7705 261.36 90.5947 260.595 91.5122 259.887 cv
91.5122 259.887 94.7397 264.855 92.0464 269.245 cv
cp
.929412 .533333 .427451 rgb
f
90.9082 270.661 mo
89.0503 272.496 86.5425 273.111 84.9287 273.32 cv
84.1157 273.413 83.4653 272.658 83.686 271.881 cv
84.29 269.732 85.7759 265.681 89.0391 262.15 cv
85.625 267.782 84.0459 273.901 90.9082 270.661 cv
cp
.282353 0 0 rgb
f
135.016 220.506 mo
134.957 223.585 115.803 220.639 113.343 216.366 cv
113.343 216.277 li
113.284 211.606 108.819 210.34 106.344 207.172 cv
98.3438 203.4 li
98.7861 200.748 li
99.1543 198.538 100.451 196.608 102.322 195.415 cv
103.486 194.678 104.9 193.867 106.344 193.175 cv
106.344 192.262 106.816 191.422 107.567 190.936 cv
113.372 187.326 li
114.227 186.781 115.361 186.987 115.951 187.813 cv
116.879 189.035 li
117.557 188.814 118.219 188.726 118.882 188.726 cv
122.375 188.726 124.896 191.655 125.232 195.415 cv
126.045 204.503 124.281 206.685 125.622 209.44 cv
127.066 210.339 130.242 212.756 131.406 214.141 cv
133.189 216.277 134.53 218.649 134.986 220.256 cv
135.016 220.344 135.016 220.433 135.016 220.506 cv
cp
.827451 .188235 .396078 rgb
f
115.639 204.654 mo
115.537 204.654 115.455 204.571 115.455 204.471 cv
115.455 196.277 li
115.455 196.176 115.537 196.093 115.639 196.093 cv
115.741 196.093 115.823 196.176 115.823 196.277 cv
115.823 204.471 li
115.823 204.571 115.741 204.654 115.639 204.654 cv
cp
.282353 0 0 rgb
f
104.907 205.271 mo
104.869 205.271 104.832 205.26 104.799 205.236 cv
102.731 203.752 101.72 202.012 103.063 197.933 cv
103.095 197.837 103.202 197.785 103.297 197.815 cv
103.393 197.848 103.446 197.952 103.415 198.048 cv
102.134 201.931 103.032 203.514 105.015 204.938 cv
105.097 204.996 105.115 205.111 105.057 205.194 cv
105.021 205.244 104.964 205.271 104.907 205.271 cv
cp
f
108.118 197.427 mo
108.068 197.427 108.016 197.425 107.966 197.419 cv
107.479 197.372 107.055 197.105 106.8 196.687 cv
106.462 196.133 106.248 195.623 106.162 195.171 cv
106.143 195.071 106.209 194.975 106.308 194.955 cv
106.406 194.938 106.504 195.001 106.524 195.103 cv
106.602 195.511 106.8 195.979 107.114 196.496 cv
107.308 196.813 107.632 197.018 108.001 197.053 cv
108.366 197.09 108.723 196.954 108.971 196.681 cv
114.488 190.646 li
114.556 190.572 114.673 190.567 114.747 190.635 cv
114.823 190.703 114.828 190.819 114.758 190.895 cv
109.242 196.93 li
108.948 197.25 108.545 197.427 108.118 197.427 cv
cp
f
105.574 204.919 mo
105.485 204.919 105.407 204.855 105.393 204.766 cv
105.376 204.664 105.443 204.57 105.544 204.553 cv
108.363 204.087 110.809 202.284 112.088 199.73 cv
112.871 198.168 113.177 196.425 112.976 194.689 cv
112.964 194.589 113.036 194.497 113.137 194.485 cv
113.229 194.477 113.33 194.546 113.341 194.646 cv
113.551 196.454 113.232 198.269 112.416 199.896 cv
111.085 202.554 108.538 204.431 105.604 204.917 cv
105.595 204.919 105.584 204.919 105.574 204.919 cv
cp
1 1 1 rgb
f
124.089 201.231 mo
121.545 201.231 119.225 199.543 118.497 197.048 cv
117.689 194.285 119.058 191.306 121.679 190.118 cv
121.77 190.075 121.88 190.116 121.924 190.209 cv
121.965 190.302 121.924 190.411 121.832 190.453 cv
119.375 191.566 118.094 194.356 118.851 196.943 cv
119.606 199.532 122.196 201.189 124.857 200.809 cv
124.954 200.791 125.052 200.863 125.066 200.965 cv
125.081 201.064 125.01 201.158 124.909 201.173 cv
124.634 201.212 124.36 201.231 124.089 201.231 cv
cp
f
126.257 210.965 mo
126.222 210.965 126.186 210.954 126.154 210.932 cv
125.383 210.402 123.932 209.896 123.112 209.871 cv
123.01 209.867 122.931 209.782 122.934 209.681 cv
122.937 209.581 123.019 209.503 123.118 209.503 cv
123.119 209.503 123.122 209.503 123.124 209.503 cv
124.016 209.531 125.529 210.058 126.361 210.628 cv
126.446 210.686 126.468 210.801 126.41 210.885 cv
126.374 210.937 126.316 210.965 126.257 210.965 cv
cp
f
135.016 220.506 mo
131.789 222.612 115.744 220.447 113.343 216.277 cv
118.971 213.434 125.351 212.712 131.406 214.141 cv
133.189 216.277 134.53 218.649 134.986 220.256 cv
135.016 220.344 135.016 220.433 135.016 220.506 cv
cp
f
127.747 215.623 mo
127.682 215.623 127.619 215.589 127.584 215.527 cv
127.011 214.47 li
126.964 214.381 126.997 214.269 127.086 214.221 cv
127.171 214.173 127.286 214.204 127.336 214.295 cv
127.909 215.352 li
127.957 215.44 127.924 215.553 127.834 215.601 cv
127.807 215.616 127.777 215.623 127.747 215.623 cv
cp
.827451 .188235 .396078 rgb
f
123.166 215.623 mo
123.101 215.623 123.038 215.589 123.003 215.527 cv
122.43 214.47 li
122.383 214.381 122.416 214.269 122.505 214.221 cv
122.591 214.173 122.705 214.204 122.755 214.295 cv
123.328 215.352 li
123.375 215.44 123.342 215.553 123.253 215.601 cv
123.226 215.616 123.196 215.623 123.166 215.623 cv
cp
f
124.09 204.03 mo
124.09 204.03 113.379 205.918 98.5864 205.946 cv
96.3271 205.95 94.1396 206.759 92.4116 208.214 cv
91.394 209.071 90.3599 210.062 89.7295 210.99 cv
96.1611 210.99 li
96.1611 210.99 98.063 211.027 101.065 208.567 cv
101.065 208.567 105.806 210.772 114.368 212.345 cv
117.419 212.905 120.498 211.468 122.022 208.767 cv
122.763 207.453 123.507 205.863 124.09 204.03 cv
cp
.929412 .533333 .427451 rgb
f
135.445 222.62 mo
135.445 222.62 li
135.445 226.257 132.497 229.205 128.86 229.205 cv
127.703 229.205 li
127.703 229.205 118.63 231.561 114.729 239.213 cv
114.356 239.945 113.493 240.283 112.715 240.016 cv
101.58 236.188 li
90.959 228.194 li
89.8901 227.391 89.9761 225.763 91.1274 225.083 cv
94.5425 223.066 101.151 219.281 108.051 217.452 cv
117.793 214.871 135.445 211.471 135.445 222.62 cv
cp
.282353 0 0 rgb
f
102.989 229.962 mo
102.954 229.962 102.918 229.952 102.887 229.931 cv
102.802 229.875 102.779 229.761 102.835 229.677 cv
107.133 223.191 113.983 218.659 121.632 217.24 cv
121.727 217.218 121.826 217.288 121.846 217.388 cv
121.865 217.488 121.798 217.584 121.698 217.604 cv
114.147 219.003 107.384 223.478 103.143 229.879 cv
103.107 229.934 103.048 229.962 102.989 229.962 cv
cp
.376471 .262745 .321569 rgb
f
111.134 237.317 mo
111.448 237.655 111.628 238.113 111.545 238.568 cv
109.165 251.595 98.7886 257.792 98.1094 265.62 cv
98.1978 267.427 98.7158 268.841 99.2588 269.839 cv
99.8276 270.888 99.5244 272.164 98.564 272.871 cv
95.4438 275.146 90.7944 279.176 87.4087 282.511 cv
86.5625 283.357 85.1729 282.523 85.4883 281.374 cv
85.6528 280.78 85.855 280.224 86.0698 279.655 cv
86.082 279.655 li
86.9541 277.395 88.293 274.829 90.2261 268.311 cv
93.498 257.27 88.353 238.837 92.3018 229.205 cv
101.581 236.187 li
102.469 234.484 103.544 233.004 104.35 231.997 cv
104.957 231.238 106.093 231.202 106.755 231.914 cv
111.134 237.317 li
cp
.929412 .533333 .427451 rgb
f
98.564 272.871 mo
95.4438 275.146 90.7944 279.176 87.4087 282.511 cv
86.5625 283.357 85.1729 282.523 85.4883 281.374 cv
85.6528 280.78 85.855 280.224 86.0698 279.655 cv
86.082 279.655 li
91.7798 278.493 96.5298 272.037 98.1094 265.62 cv
98.1978 267.427 98.7158 268.841 99.2588 269.839 cv
99.8276 270.888 99.5244 272.164 98.564 272.871 cv
cp
.282353 0 0 rgb
f
97.937 264.526 mo
97.8462 264.526 97.7676 264.46 97.7544 264.368 cv
96.4868 255.124 97.5688 245.629 100.885 236.907 cv
100.921 236.813 101.031 236.763 101.123 236.801 cv
101.219 236.837 101.267 236.943 101.23 237.038 cv
97.9355 245.702 96.8594 255.135 98.1196 264.317 cv
98.1328 264.418 98.0625 264.511 97.9614 264.525 cv
97.9531 264.526 97.9458 264.526 97.937 264.526 cv
cp
1 1 1 rgb
f
116.019 177.495 mo
116.632 176.807 117.016 175.909 117.016 174.914 cv
117.016 172.762 115.271 171.017 113.118 171.017 cv
113.023 171.017 112.934 171.038 112.84 171.045 cv
112.732 168.833 110.921 167.068 108.682 167.068 cv
107.312 167.068 106.106 167.738 105.344 168.758 cv
104.795 168.501 104.188 168.347 103.542 168.347 cv
101.181 168.347 99.2671 170.261 99.2671 172.622 cv
99.2671 174.983 101.181 176.897 103.542 176.897 cv
103.756 176.897 103.96 176.864 104.166 176.834 cv
104.242 179.163 106.136 181.03 108.48 181.044 cv
108.64 183.377 110.562 185.226 112.936 185.226 cv
115.413 185.226 117.421 183.218 117.421 180.74 cv
117.421 179.46 116.878 178.313 116.019 177.495 cv
cp
.282353 0 0 rgb
f
104.606 174.489 mo
104.374 175.267 104.535 176.394 105.344 177.03 cv
106.153 177.667 107.319 177.665 108.096 177.233 cv
107.921 177.789 108.066 178.396 108.474 178.813 cv
108.882 179.23 109.485 179.39 110.046 179.229 cv
110.854 178.799 111.83 178.851 112.573 179.385 cv
113.315 179.919 113.693 180.83 113.55 181.729 cv
113.394 182.628 112.742 183.371 111.869 183.631 cv
113.826 187.063 li
114.175 187.675 114.096 188.44 113.629 188.968 cv
109.28 193.883 li
108.917 194.293 108.242 194.102 108.158 193.56 cv
107.901 191.902 107.342 189.767 106.88 188.164 cv
106.516 186.836 106.216 185.885 106.216 185.885 cv
99.4814 187.995 102.647 178.694 101.852 176.115 cv
102.992 176.095 104.038 175.478 104.606 174.489 cv
cp
.929412 .533333 .427451 rgb
f
110.208 181.408 mo
110.202 181.408 110.194 181.408 110.188 181.407 cv
110.086 181.396 110.013 181.306 110.024 181.204 cv
110.069 180.765 110.304 180.366 110.667 180.111 cv
111.03 179.857 111.486 179.772 111.916 179.882 cv
112.015 179.906 112.074 180.006 112.049 180.105 cv
112.023 180.203 111.922 180.267 111.826 180.238 cv
111.501 180.158 111.154 180.218 110.878 180.413 cv
110.603 180.606 110.425 180.909 110.39 181.243 cv
110.38 181.338 110.301 181.408 110.208 181.408 cv
cp
.282353 0 0 rgb
f
103.577 182.378 mo
104.28 181.898 105.132 181.688 105.978 181.785 cv
106.121 182.227 106.005 182.711 105.679 183.04 cv
105.352 183.37 104.868 183.489 104.426 183.35 cv
103.983 183.21 103.656 182.835 103.577 182.378 cv
cp
1 1 1 rgb
f
106.763 178.89 mo
106.359 179.385 105.799 179.685 105.187 179.736 cv
105.031 179.763 104.875 179.749 104.718 179.736 cv
103.937 179.658 103.246 179.189 102.894 178.486 cv
103.585 177.952 104.444 177.782 105.239 177.978 cv
105.812 178.108 106.346 178.407 106.763 178.89 cv
cp
f
103.078 177.418 mo
103.035 177.418 102.99 177.402 102.956 177.371 cv
102.879 177.303 102.872 177.187 102.94 177.111 cv
103.454 176.535 104.645 176.325 105.598 176.645 cv
105.694 176.677 105.746 176.781 105.712 176.877 cv
105.682 176.973 105.583 177.029 105.479 176.994 cv
104.586 176.693 103.586 176.939 103.216 177.355 cv
103.179 177.396 103.128 177.418 103.078 177.418 cv
cp
.282353 0 0 rgb
f
106.88 188.164 mo
106.516 186.836 106.216 185.885 106.216 185.885 cv
107.505 185.429 108.092 184.374 108.092 184.374 cv
108.092 184.374 109.407 186.393 106.88 188.164 cv
cp
f
102.447 177.934 mo
102.343 178.803 101.618 179.104 101.051 179.195 cv
100.762 179.242 100.64 179.596 100.825 179.822 cv
101.132 180.197 101.667 180.633 102.536 180.763 cv
102.447 177.934 li
cp
.929412 .533333 .427451 rgb
f
105.408 178.812 mo
105.408 179.15 105.33 179.463 105.187 179.736 cv
105.031 179.763 104.875 179.749 104.718 179.736 cv
103.937 179.658 103.246 179.189 102.894 178.486 cv
103.585 177.952 104.444 177.782 105.239 177.978 cv
105.343 178.238 105.408 178.512 105.408 178.812 cv
cp
.282353 0 0 rgb
f
105.729 166.859 mo
105.729 167.295 105.375 167.648 104.94 167.648 cv
104.504 167.648 104.151 167.295 104.151 166.859 cv
104.151 166.424 104.504 166.07 104.94 166.07 cv
105.375 166.07 105.729 166.424 105.729 166.859 cv
cp
f
115.706 169.345 mo
115.706 169.999 115.176 170.529 114.521 170.529 cv
113.867 170.529 113.336 169.999 113.336 169.345 cv
113.336 168.69 113.867 168.16 114.521 168.16 cv
115.176 168.16 115.706 168.69 115.706 169.345 cv
cp
f
113.43 167.355 mo
113.43 167.679 113.167 167.941 112.844 167.941 cv
112.521 167.941 112.258 167.679 112.258 167.355 cv
112.258 167.032 112.521 166.77 112.844 166.77 cv
113.167 166.77 113.43 167.032 113.43 167.355 cv
cp
f
118.886 177.321 mo
118.886 177.847 118.46 178.272 117.936 178.272 cv
117.41 178.272 116.984 177.847 116.984 177.321 cv
116.984 176.796 117.41 176.37 117.936 176.37 cv
118.46 176.37 118.886 176.796 118.886 177.321 cv
cp
f
118.637 174.579 mo
118.637 174.891 118.384 175.145 118.072 175.145 cv
117.76 175.145 117.507 174.891 117.507 174.579 cv
117.507 174.267 117.76 174.014 118.072 174.014 cv
118.384 174.014 118.637 174.267 118.637 174.579 cv
cp
f
118.637 184.39 mo
118.637 184.846 118.267 185.216 117.811 185.216 cv
117.354 185.216 116.984 184.846 116.984 184.39 cv
116.984 183.933 117.354 183.563 117.811 183.563 cv
118.267 183.563 118.637 183.933 118.637 184.39 cv
cp
f
105.615 169.424 mo
105.484 169.699 105.357 170.068 105.416 170.266 cv
105.431 170.314 105.454 170.345 105.494 170.366 cv
105.667 170.453 105.938 170.377 106.038 170.212 cv
106.156 170.016 105.999 169.727 105.615 169.424 cv
cp
105.656 170.771 mo
105.54 170.771 105.426 170.746 105.324 170.692 cv
105.196 170.626 105.105 170.515 105.062 170.369 cv
104.922 169.894 105.343 169.14 105.392 169.056 cv
105.417 169.011 105.46 168.979 105.511 168.968 cv
105.56 168.954 105.613 168.968 105.656 168.995 cv
106.641 169.675 106.471 170.205 106.353 170.401 cv
106.215 170.633 105.931 170.771 105.656 170.771 cv
cp
.376471 .262745 .321569 rgb
f
112.302 171.5 mo
111.997 171.503 111.61 171.553 111.458 171.691 cv
111.422 171.726 111.404 171.761 111.403 171.805 cv
111.399 171.997 111.59 172.209 111.781 172.226 cv
112.01 172.248 112.2 171.976 112.302 171.5 cv
cp
111.803 172.595 mo
111.784 172.595 111.766 172.594 111.75 172.593 cv
111.367 172.56 111.026 172.18 111.035 171.796 cv
111.038 171.651 111.098 171.521 111.21 171.42 cv
111.576 171.085 112.442 171.129 112.534 171.137 cv
112.586 171.14 112.633 171.165 112.667 171.205 cv
112.698 171.245 112.712 171.297 112.705 171.348 cv
112.541 172.445 112.055 172.595 111.803 172.595 cv
cp
f
114.596 177.565 mo
114.524 177.565 114.459 177.573 114.409 177.595 cv
114.363 177.613 114.334 177.641 114.318 177.682 cv
114.248 177.86 114.353 178.125 114.525 178.207 cv
114.734 178.305 115.003 178.12 115.269 177.709 cv
115.056 177.633 114.794 177.565 114.596 177.565 cv
cp
114.642 178.602 mo
114.525 178.602 114.432 178.57 114.369 178.54 cv
114.021 178.376 113.834 177.902 113.976 177.545 cv
114.029 177.411 114.131 177.31 114.271 177.253 cv
114.737 177.066 115.524 177.409 115.612 177.449 cv
115.659 177.471 115.695 177.511 115.711 177.56 cv
115.728 177.608 115.723 177.661 115.698 177.707 cv
115.295 178.437 114.91 178.602 114.642 178.602 cv
cp
f
102.167 173.574 mo
101.361 173.574 100.553 173.439 99.7744 173.166 cv
99.6782 173.133 99.6279 173.027 99.6606 172.932 cv
99.6953 172.836 99.7988 172.788 99.8955 172.818 cv
101.789 173.481 103.867 173.284 105.6 172.285 cv
107.334 171.284 108.542 169.581 108.916 167.613 cv
108.934 167.514 109.027 167.444 109.131 167.467 cv
109.23 167.486 109.297 167.582 109.278 167.683 cv
108.885 169.755 107.612 171.549 105.785 172.604 cv
104.671 173.246 103.423 173.574 102.167 173.574 cv
cp
f
113.168 176.734 mo
112.653 176.734 112.134 176.648 111.632 176.473 cv
109.898 175.863 108.682 174.287 108.536 172.456 cv
108.387 170.626 109.335 168.875 110.951 167.998 cv
111.038 167.951 111.151 167.982 111.2 168.072 cv
111.249 168.161 111.216 168.273 111.127 168.322 cv
109.639 169.13 108.767 170.74 108.904 172.426 cv
109.038 174.112 110.157 175.564 111.753 176.124 cv
113.351 176.687 115.131 176.251 116.29 175.019 cv
116.358 174.944 116.475 174.94 116.55 175.011 cv
116.623 175.079 116.627 175.196 116.557 175.271 cv
115.664 176.221 114.429 176.734 113.168 176.734 cv
cp
f
114.825 184.558 mo
114.748 184.558 114.678 184.51 114.65 184.435 cv
113.938 182.4 114.761 180.118 116.609 179.009 cv
116.696 178.958 116.809 178.983 116.862 179.071 cv
116.914 179.158 116.886 179.272 116.799 179.324 cv
115.099 180.344 114.342 182.442 114.999 184.313 cv
115.032 184.409 114.981 184.514 114.885 184.548 cv
114.865 184.554 114.845 184.558 114.825 184.558 cv
cp
f
102.536 180.947 mo
102.527 180.947 102.518 180.946 102.508 180.945 cv
101.567 180.805 100.996 180.32 100.683 179.939 cv
100.553 179.78 100.517 179.562 100.59 179.368 cv
100.662 179.178 100.823 179.046 101.022 179.014 cv
101.539 178.93 102.174 178.671 102.264 177.912 cv
102.277 177.812 102.372 177.74 102.468 177.751 cv
102.569 177.762 102.641 177.854 102.629 177.955 cv
102.539 178.725 101.989 179.23 101.081 179.378 cv
100.984 179.393 100.947 179.467 100.934 179.499 cv
100.908 179.57 100.92 179.646 100.967 179.704 cv
101.239 180.036 101.737 180.458 102.563 180.581 cv
102.664 180.596 102.733 180.689 102.718 180.79 cv
102.704 180.882 102.626 180.947 102.536 180.947 cv
cp
.282353 0 0 rgb
f
106.675 178.67 mo
106.636 178.67 106.598 178.658 106.564 178.633 cv
105.938 178.166 105.317 177.947 104.609 177.947 cv
104.602 177.947 104.595 177.947 104.587 177.947 cv
104.586 177.947 li
104.485 177.947 104.402 177.865 104.402 177.765 cv
104.402 177.654 104.498 177.584 104.609 177.579 cv
105.34 177.579 106.01 177.798 106.656 178.245 cv
107.182 177.721 li
107.253 177.648 107.37 177.648 107.442 177.721 cv
107.514 177.792 107.513 177.909 107.44 177.98 cv
106.805 178.616 li
106.77 178.652 106.723 178.67 106.675 178.67 cv
cp
f
107.027 178.987 mo
106.953 178.987 106.882 178.94 106.855 178.865 cv
106.82 178.771 106.869 178.664 106.964 178.63 cv
107.403 178.471 li
107.504 178.434 107.604 178.486 107.639 178.581 cv
107.674 178.677 107.625 178.783 107.53 178.817 cv
107.091 178.977 li
107.069 178.983 107.048 178.987 107.027 178.987 cv
cp
f
89.8525 270.271 mo
89.8311 270.271 89.8091 270.268 89.7891 270.26 cv
89.6929 270.226 89.6436 270.119 89.6797 270.023 cv
90.6406 267.409 91.0693 264.922 91.1602 261.438 cv
91.1631 261.338 91.2451 261.259 91.3442 261.259 cv
91.3457 261.259 91.3472 261.259 91.3486 261.259 cv
91.4507 261.262 91.5313 261.346 91.5288 261.447 cv
91.4365 264.975 91.0005 267.496 90.0249 270.15 cv
89.9976 270.226 89.9272 270.271 89.8525 270.271 cv
cp
1 1 1 rgb
f
94.3169 207.146 mo
94.2495 207.146 94.1846 207.107 94.1528 207.043 cv
94.1069 206.952 94.1445 206.842 94.2349 206.796 cv
95.5815 206.123 97.0869 205.766 98.5859 205.763 cv
113.191 205.734 123.95 203.867 124.058 203.849 cv
124.154 203.824 124.252 203.897 124.271 203.998 cv
124.288 204.099 124.222 204.194 124.121 204.211 cv
124.014 204.229 113.226 206.102 98.5859 206.131 cv
97.1431 206.134 95.6953 206.478 94.3989 207.126 cv
94.373 207.139 94.3442 207.146 94.3169 207.146 cv
cp
f
115.685 212.649 mo
115.237 212.649 114.786 212.609 114.334 212.526 cv
106.54 211.095 101.843 209.112 101.094 208.782 cv
100.183 209.518 99.2837 210.101 98.4175 210.514 cv
98.3271 210.558 98.2148 210.52 98.1729 210.427 cv
98.1284 210.336 98.1675 210.226 98.2593 210.182 cv
99.1255 209.768 100.031 209.176 100.949 208.425 cv
101.003 208.38 101.08 208.369 101.143 208.4 cv
101.19 208.422 105.966 210.614 114.4 212.164 cv
117.37 212.713 120.375 211.31 121.862 208.676 cv
122.607 207.356 li
122.655 207.27 122.767 207.236 122.857 207.287 cv
122.947 207.337 122.977 207.449 122.927 207.538 cv
122.181 208.857 li
120.845 211.228 118.342 212.649 115.685 212.649 cv
cp
f
70.8232 164.49 mo
64.9883 164.49 li
63.2969 164.49 61.9258 165.861 61.9258 167.553 cv
61.9258 175.018 li
64.5449 172.397 li
70.8232 172.397 li
72.5146 172.397 73.8857 171.026 73.8857 169.335 cv
73.8857 167.553 li
73.8857 165.861 72.5146 164.49 70.8232 164.49 cv
cp
f
86.4346 171.776 mo
92.2695 171.776 li
93.9609 171.776 95.332 173.147 95.332 174.839 cv
95.332 182.303 li
92.7129 179.684 li
86.4346 179.684 li
84.7427 179.684 83.3716 178.313 83.3716 176.621 cv
83.3716 174.839 li
83.3716 173.147 84.7427 171.776 86.4346 171.776 cv
cp
f
266.749 277.433 mo
154.342 277.433 li
153.527 277.433 152.86 276.766 152.86 275.95 cv
152.86 275.95 li
152.86 275.135 153.527 274.468 154.342 274.468 cv
266.749 274.468 li
267.564 274.468 268.231 275.135 268.231 275.95 cv
268.231 275.95 li
268.231 276.766 267.564 277.433 266.749 277.433 cv
cp
.827451 .188235 .396078 rgb
f
228.32 226.834 mo
219.862 218.023 211.493 216.174 211.493 216.174 cv
211.426 211.64 212.217 207.219 213.725 203.09 cv
204.475 203.09 li
202.627 207.014 201.281 211.221 200.568 215.645 cv
194.419 224.359 190.222 236.972 190.222 246.329 cv
188.2 249.009 186.161 252.381 186.119 256.349 cv
212.814 256.349 li
212.631 253.549 210.446 250.193 208.561 248.115 cv
210.947 242.435 216.131 238.523 222.638 236.922 cv
225.487 239.599 228.254 242.359 230.955 245.183 cv
239.403 241.852 li
235.948 236.68 232.259 231.661 228.32 226.834 cv
cp
1 .454902 .262745 rgb
f
229.201 184.28 mo
230.897 185.161 235.831 183.949 237.175 183.465 cv
238.672 182.925 233.232 183.024 233.232 183.024 cv
233.232 183.024 234.686 181.219 237.064 180.47 cv
239.443 179.721 241.403 178.487 240.457 178.113 cv
241.426 177.452 241.007 176.989 240.236 177.144 cv
240.258 176.593 239.796 176.681 238.562 176.989 cv
238.122 176.835 236.866 177.144 236.866 177.144 cv
222.398 180.36 210.583 190.113 204.475 203.09 cv
213.725 203.09 li
216.549 195.357 221.929 188.663 229.201 184.28 cv
cp
.929412 .533333 .427451 rgb
f
260.28 270.705 mo
260.052 270.369 259.719 270.136 259.336 269.997 cv
255.937 268.764 252.901 265.423 252.901 265.423 cv
248.955 257.253 244.435 249.384 239.403 241.852 cv
230.955 245.183 li
237.251 251.764 243.146 258.724 248.584 266.04 cv
248.584 266.04 248.176 268.605 249.928 270.886 cv
251.811 272.604 251.216 275.95 253 275.95 cv
254.784 275.95 253.231 270.556 253.231 270.556 cv
255.709 270.786 259.376 274.421 260.137 275.379 cv
260.896 276.337 262.582 275.94 262.251 275.279 cv
263.506 275.635 263.804 274.925 263.804 274.925 cv
262.525 273.903 260.96 271.705 260.28 270.705 cv
cp
f
261.624 274.77 mo
261.593 274.77 261.563 274.763 261.535 274.747 cv
261.055 274.483 260.68 273.947 260.245 273.327 cv
259.62 272.433 258.91 271.417 257.716 271.062 cv
257.62 271.033 257.563 270.931 257.592 270.833 cv
257.622 270.736 257.72 270.677 257.822 270.709 cv
259.137 271.102 259.887 272.172 260.547 273.116 cv
260.955 273.698 261.307 274.202 261.713 274.425 cv
261.802 274.474 261.834 274.585 261.785 274.674 cv
261.752 274.735 261.688 274.77 261.624 274.77 cv
cp
.282353 0 0 rgb
f
234.862 178.941 mo
234.777 178.941 234.702 178.883 234.682 178.797 cv
234.66 178.699 234.722 178.6 234.821 178.577 cv
236.236 178.258 237.998 177.551 238.313 177.293 cv
238.391 177.229 238.509 177.238 238.572 177.319 cv
238.637 177.397 238.625 177.514 238.546 177.578 cv
238.152 177.901 236.315 178.617 234.902 178.937 cv
234.889 178.939 234.875 178.941 234.862 178.941 cv
cp
f
236.398 179.238 mo
236.311 179.238 236.234 179.177 236.217 179.088 cv
236.198 178.988 236.265 178.892 236.365 178.873 cv
237.867 178.592 239.654 177.579 239.787 177.35 cv
239.837 177.262 239.949 177.23 240.036 177.277 cv
240.125 177.325 240.159 177.432 240.112 177.521 cv
239.905 177.919 237.931 178.956 236.431 179.235 cv
236.421 179.237 236.41 179.238 236.398 179.238 cv
cp
f
201.559 214.771 mo
201.517 214.771 201.474 214.757 201.439 214.728 cv
201.361 214.662 201.353 214.546 201.417 214.468 cv
203.268 212.287 li
203.335 212.21 203.451 212.2 203.528 212.267 cv
203.606 212.332 203.615 212.448 203.55 212.526 cv
201.7 214.707 li
201.662 214.749 201.61 214.771 201.559 214.771 cv
cp
f
220.016 217.827 mo
222.483 219.854 225.885 220.31 228.798 219.004 cv
231.712 217.698 233.636 214.856 233.766 211.666 cv
233.896 208.476 232.208 205.487 229.411 203.949 cv
229.014 199.918 211.315 201.771 220.016 217.827 cv
cp
f
225.283 212.901 mo
226.166 213.439 226.649 214.447 226.498 215.469 cv
226.346 216.49 225.6 217.332 224.606 217.595 cv
223.599 217.856 222.536 217.483 221.915 216.669 cv
220.617 217.139 218.561 218.947 216.877 220.7 cv
215.869 221.749 214.31 222.107 212.957 221.528 cv
212.86 221.473 212.764 221.432 212.667 221.39 cv
210.486 220.383 209.893 217.498 211.521 215.745 cv
211.784 215.455 212.046 215.206 212.294 214.972 cv
213.412 213.937 214.213 213.495 214.213 213.495 cv
212.86 212.073 213.053 205.089 227.16 205.406 cv
224.952 207.215 224.178 210.265 225.283 212.901 cv
cp
.929412 .533333 .427451 rgb
f
217.056 214.585 mo
217.056 214.585 214.365 216.545 212.294 214.972 cv
213.412 213.937 214.213 213.495 214.213 213.495 cv
215.731 214.751 217.056 214.585 217.056 214.585 cv
cp
.282353 0 0 rgb
f
219.168 212.591 mo
219.149 212.591 219.132 212.588 219.114 212.583 cv
218.072 212.26 217.237 211.451 216.882 210.418 cv
216.849 210.322 216.899 210.218 216.996 210.185 cv
217.092 210.149 217.197 210.202 217.23 210.299 cv
217.548 211.22 218.293 211.942 219.223 212.231 cv
219.319 212.261 219.374 212.364 219.344 212.462 cv
219.319 212.541 219.248 212.591 219.168 212.591 cv
cp
.827451 .188235 .396078 rgb
f
224.554 211.138 mo
223.827 211.138 li
223.748 211.138 223.678 211.087 223.652 211.011 cv
223.304 209.949 222.573 209.071 221.591 208.538 cv
221.502 208.489 221.469 208.377 221.518 208.288 cv
221.567 208.197 221.681 208.167 221.767 208.214 cv
222.792 208.771 223.565 209.675 223.958 210.77 cv
224.554 210.77 li
224.656 210.77 224.738 210.853 224.738 210.954 cv
224.738 211.055 224.656 211.138 224.554 211.138 cv
cp
.282353 0 0 rgb
f
224.554 209.287 mo
224.466 209.287 224.388 209.225 224.373 209.136 cv
224.26 208.506 223.843 207.976 223.257 207.719 cv
223.164 207.678 223.121 207.569 223.163 207.476 cv
223.203 207.383 223.313 207.341 223.404 207.382 cv
224.105 207.688 224.602 208.32 224.735 209.071 cv
224.752 209.171 224.686 209.267 224.585 209.284 cv
224.575 209.287 224.564 209.287 224.554 209.287 cv
cp
f
225.81 214.724 mo
225.772 214.724 225.735 214.712 225.702 214.688 cv
225.181 214.313 224.568 214.09 223.929 214.044 cv
223.827 214.037 223.751 213.949 223.758 213.848 cv
223.765 213.747 223.86 213.672 223.956 213.678 cv
224.662 213.728 225.341 213.975 225.918 214.39 cv
226 214.449 226.019 214.564 225.959 214.647 cv
225.923 214.696 225.868 214.724 225.81 214.724 cv
cp
f
219.446 209.697 mo
219.417 209.697 219.387 209.69 219.36 209.676 cv
219.338 209.664 218.809 209.379 218.353 208.532 cv
218.211 208.268 218.237 207.941 218.419 207.702 cv
218.602 207.464 218.911 207.35 219.204 207.421 cv
219.715 207.539 220.219 207.506 220.792 207.316 cv
220.891 207.284 220.994 207.338 221.026 207.434 cv
221.058 207.53 221.004 207.634 220.908 207.666 cv
220.268 207.879 219.699 207.914 219.121 207.779 cv
218.968 207.746 218.807 207.801 218.712 207.926 cv
218.617 208.05 218.604 208.22 218.678 208.358 cv
219.075 209.097 219.528 209.349 219.532 209.351 cv
219.622 209.398 219.656 209.511 219.608 209.6 cv
219.574 209.662 219.511 209.697 219.446 209.697 cv
cp
f
234.564 211.845 mo
234.488 215.217 232.409 218.22 229.278 219.478 cv
230.633 220.614 232.515 220.887 234.136 220.181 cv
235.758 219.474 236.84 217.911 236.931 216.145 cv
237.022 214.379 236.105 212.713 234.564 211.845 cv
cp
f
233.772 219.924 mo
233.673 219.924 233.592 219.847 233.588 219.747 cv
233.516 217.824 234.679 216.082 236.482 215.41 cv
236.577 215.374 236.683 215.424 236.719 215.519 cv
236.755 215.614 236.706 215.721 236.611 215.756 cv
234.957 216.371 233.891 217.97 233.957 219.732 cv
233.961 219.835 233.88 219.92 233.78 219.924 cv
233.777 219.924 233.775 219.924 233.772 219.924 cv
cp
.376471 .262745 .321569 rgb
f
231.955 215.994 mo
231.905 215.994 231.853 215.973 231.817 215.932 cv
229.345 213.134 229.04 208.994 231.073 205.864 cv
231.126 205.777 231.24 205.755 231.328 205.81 cv
231.413 205.865 231.437 205.979 231.381 206.064 cv
229.438 209.057 229.731 213.014 232.093 215.688 cv
232.161 215.764 232.154 215.88 232.078 215.948 cv
232.042 215.979 231.998 215.994 231.955 215.994 cv
cp
f
227.495 205.257 mo
227.456 205.257 227.417 205.244 227.384 205.219 cv
227.302 205.157 227.286 205.042 227.348 204.961 cv
227.736 204.448 228.328 204.134 228.97 204.096 cv
228.974 204.096 228.978 204.096 228.981 204.096 cv
229.078 204.096 229.16 204.171 229.166 204.269 cv
229.171 204.37 229.093 204.457 228.993 204.464 cv
228.458 204.495 227.965 204.757 227.642 205.184 cv
227.605 205.231 227.551 205.257 227.495 205.257 cv
cp
.929412 .533333 .427451 rgb
f
226.702 219.166 mo
226.645 219.166 226.588 219.139 226.552 219.09 cv
226.493 219.007 226.512 218.892 226.594 218.832 cv
228.877 217.183 228.24 215.223 227.502 212.954 cv
226.675 210.414 225.737 207.536 229.403 204.923 cv
229.482 204.862 229.6 204.881 229.659 204.965 cv
229.718 205.049 229.699 205.163 229.616 205.222 cv
226.171 207.678 227.026 210.303 227.852 212.84 cv
228.57 215.044 229.312 217.323 226.81 219.131 cv
226.777 219.154 226.739 219.166 226.702 219.166 cv
cp
.376471 .262745 .321569 rgb
f
223.584 210.543 mo
223.498 210.543 223.42 210.482 223.403 210.395 cv
223.384 210.295 223.449 210.197 223.548 210.178 cv
224.359 210.018 li
224.466 210 224.557 210.063 224.577 210.162 cv
224.596 210.263 224.531 210.359 224.432 210.379 cv
223.62 210.539 li
223.607 210.541 223.596 210.543 223.584 210.543 cv
cp
.282353 0 0 rgb
f
211.042 210.543 mo
210.895 210.543 209.947 210.491 208.5 209.243 cv
206.642 207.643 204.661 207.83 202.612 209.798 cv
202.539 209.869 202.422 209.866 202.352 209.793 cv
202.281 209.719 202.282 209.603 202.355 209.532 cv
205.108 206.889 207.347 207.764 208.741 208.964 cv
210.123 210.155 210.992 210.175 211.043 210.175 cv
211.045 210.175 li
211.046 210.175 211.049 210.175 211.051 210.175 cv
211.148 210.175 211.232 210.252 211.235 210.352 cv
211.239 210.453 211.161 210.538 211.061 210.543 cv
211.058 210.543 211.052 210.543 211.042 210.543 cv
cp
1 1 1 rgb
f
208.835 227.027 mo
206.6 227.027 205.028 225.619 203.576 224.319 cv
202.449 223.311 201.386 222.357 200.13 222.158 cv
200.029 222.142 199.96 222.047 199.978 221.947 cv
199.993 221.846 200.086 221.778 200.188 221.794 cv
201.55 222.01 202.653 222.999 203.822 224.045 cv
206.14 226.119 208.534 228.272 213.416 224.92 cv
219.374 220.824 221.361 223.114 222.812 224.787 cv
223.727 225.842 224.388 226.604 225.718 225.838 cv
225.803 225.788 225.917 225.816 225.97 225.905 cv
226.02 225.994 225.99 226.106 225.902 226.157 cv
224.301 227.077 223.444 226.081 222.534 225.028 cv
221.101 223.374 219.319 221.313 213.623 225.224 cv
211.72 226.532 210.16 227.027 208.835 227.027 cv
cp
f
226.925 238.108 mo
224.866 238.108 223.008 236.738 221.095 235.325 cv
217.829 232.914 214.449 230.422 209.494 234.379 cv
205.717 237.391 203.241 235.862 200.843 234.379 cv
198.598 232.987 196.475 231.669 193.239 233.758 cv
193.157 233.813 193.042 233.789 192.985 233.703 cv
192.93 233.617 192.955 233.503 193.041 233.448 cv
196.464 231.239 198.789 232.674 201.038 234.064 cv
203.429 235.546 205.689 236.943 209.264 234.091 cv
214.443 229.956 218.093 232.651 221.313 235.028 cv
224.868 237.649 227.934 239.917 232.537 234.028 cv
232.598 233.949 232.713 233.936 232.795 233.997 cv
232.876 234.06 232.889 234.176 232.827 234.256 cv
230.603 237.103 228.689 238.108 226.925 238.108 cv
cp
f
206.603 256.349 mo
218.849 249.433 224.355 252.956 225.897 256.349 cv
227.439 259.74 226.613 263.87 220.778 266.553 cv
192.066 268.903 li
166.725 260.629 li
166.725 260.629 159.318 256.119 166.009 249.212 cv
171.912 243.118 183.784 248.221 192.639 256.349 cv
206.603 256.349 li
cp
.282353 0 0 rgb
f
201.393 259.572 mo
201.33 259.572 201.267 259.538 201.233 259.479 cv
201.183 259.39 201.213 259.278 201.302 259.228 cv
205.73 256.717 li
205.814 256.668 205.93 256.696 205.98 256.787 cv
206.03 256.875 206 256.987 205.911 257.038 cv
201.484 259.549 li
201.455 259.564 201.425 259.572 201.393 259.572 cv
cp
.827451 .188235 .396078 rgb
f
196.504 260.63 mo
196.454 260.63 196.403 260.609 196.367 260.569 cv
193.13 257.001 li
193.063 256.926 193.068 256.809 193.143 256.74 cv
193.219 256.673 193.334 256.677 193.403 256.754 cv
196.641 260.322 li
196.708 260.397 196.703 260.514 196.628 260.582 cv
196.592 260.614 196.549 260.63 196.504 260.63 cv
cp
f
183.189 257.627 mo
176.124 252.944 168.999 249.241 164.766 253.972 cv
161.519 257.601 165.379 262.13 173.953 265.325 cv
180.482 267.76 187.769 270.568 195.098 272.214 cv
196.351 272.494 197.583 272.855 198.613 273.622 cv
198.613 273.622 li
199.663 274.405 200.893 274.897 202.194 275.039 cv
203.288 275.159 204.836 275.34 207.029 275.991 cv
210.86 277.128 216.655 277.204 219.301 275.39 cv
220.064 274.866 220.13 273.807 219.735 272.97 cv
218.059 269.416 207.608 269.202 204.01 268.938 cv
197.064 268.426 188.772 261.328 183.189 257.627 cv
cp
.929412 .533333 .427451 rgb
f
218.748 272.6 mo
218.714 272.6 218.681 272.591 218.649 272.571 cv
217.69 271.962 216.604 271.774 216.594 271.773 cv
216.494 271.756 216.426 271.661 216.443 271.562 cv
216.459 271.461 216.554 271.396 216.655 271.409 cv
216.702 271.417 217.823 271.609 218.848 272.261 cv
218.933 272.315 218.958 272.429 218.904 272.515 cv
218.869 272.57 218.809 272.6 218.748 272.6 cv
cp
.282353 0 0 rgb
f
219.39 274.441 mo
219.348 274.441 219.305 274.428 219.271 274.397 cv
218.186 273.474 216.764 273.388 216.459 273.421 cv
216.363 273.428 216.268 273.355 216.259 273.253 cv
216.25 273.152 216.325 273.063 216.427 273.054 cv
216.971 273.009 218.435 273.203 219.509 274.117 cv
219.587 274.184 219.596 274.299 219.529 274.377 cv
219.494 274.419 219.442 274.441 219.39 274.441 cv
cp
f
217.979 275.573 mo
217.954 275.573 217.928 275.568 217.904 275.558 cv
217.063 275.185 216.229 275.095 215.895 275.13 cv
215.771 275.135 215.702 275.065 215.693 274.965 cv
215.684 274.864 215.757 274.773 215.857 274.764 cv
216.338 274.721 217.236 274.858 218.053 275.221 cv
218.146 275.262 218.188 275.37 218.147 275.464 cv
218.117 275.532 218.049 275.573 217.979 275.573 cv
cp
f
193.465 264.898 mo
193.432 264.898 193.397 264.89 193.367 264.871 cv
191.087 263.451 188.827 261.832 186.833 260.403 cv
185.496 259.445 184.232 258.539 183.087 257.78 cv
176.083 253.139 169.033 249.477 164.902 254.095 cv
164.834 254.168 164.716 254.175 164.643 254.109 cv
164.566 254.041 164.559 253.925 164.628 253.849 cv
168.94 249.021 176.15 252.74 183.292 257.474 cv
184.441 258.236 185.707 259.144 187.048 260.104 cv
189.037 261.529 191.291 263.146 193.563 264.559 cv
193.649 264.611 193.675 264.726 193.622 264.812 cv
193.586 264.868 193.527 264.898 193.465 264.898 cv
cp
1 1 1 rgb
f
222.43 234.747 mo
222.335 234.747 222.254 234.674 222.246 234.578 cv
222.126 233.15 222.432 231.737 223.128 230.491 cv
224.093 228.761 225.754 227.498 227.682 227.029 cv
227.783 227.008 227.88 227.065 227.903 227.164 cv
227.928 227.264 227.868 227.362 227.768 227.387 cv
225.939 227.832 224.365 229.029 223.45 230.671 cv
222.79 231.853 222.5 233.192 222.614 234.548 cv
222.622 234.648 222.547 234.737 222.446 234.746 cv
222.44 234.747 222.435 234.747 222.43 234.747 cv
cp
.282353 0 0 rgb
f
231.955 244.973 mo
231.882 244.973 231.813 244.929 231.784 244.855 cv
231.747 244.761 231.792 244.654 231.888 244.617 cv
238.168 242.141 li
238.257 242.104 238.368 242.148 238.407 242.244 cv
238.444 242.34 238.398 242.446 238.303 242.483 cv
232.023 244.96 li
232.001 244.968 231.978 244.973 231.955 244.973 cv
cp
f
211.778 203.273 mo
205.246 203.273 li
205.144 203.273 205.062 203.191 205.062 203.09 cv
205.062 202.988 205.144 202.905 205.246 202.905 cv
211.778 202.905 li
211.881 202.905 211.963 202.988 211.963 203.09 cv
211.963 203.191 211.881 203.273 211.778 203.273 cv
cp
f
204.846 259.97 mo
212.762 255.892 220.629 252.844 224.506 258.271 cv
227.479 262.434 223.484 266.424 214.361 269.452 cv
207.103 271.861 199.062 273.084 190.731 273.834 cv
189.388 273.955 188.062 274.218 186.898 274.901 cv
186.898 274.901 li
185.713 275.598 184.372 275.971 182.996 275.97 cv
181.84 275.969 181.522 274.957 177.997 275.812 cv
173.341 276.94 167.887 276.329 165.091 274.368 cv
164.294 273.811 164.381 272.604 164.915 271.791 cv
167.275 268.194 178.013 269.251 181.802 269.388 cv
189.114 269.652 198.59 263.193 204.846 259.97 cv
cp
.929412 .533333 .427451 rgb
f
166.01 271.51 mo
165.942 271.51 165.875 271.472 165.844 271.407 cv
165.799 271.315 165.837 271.205 165.929 271.16 cv
167.071 270.6 168.261 270.528 168.312 270.525 cv
168.408 270.521 168.5 270.598 168.506 270.699 cv
168.512 270.801 168.434 270.888 168.332 270.894 cv
168.32 270.895 167.164 270.965 166.09 271.491 cv
166.064 271.504 166.037 271.51 166.01 271.51 cv
cp
.282353 0 0 rgb
f
165.127 273.36 mo
165.068 273.36 165.011 273.332 164.975 273.28 cv
164.917 273.195 164.94 273.081 165.024 273.023 cv
166.251 272.192 167.805 272.16 168.358 272.27 cv
168.458 272.289 168.522 272.387 168.501 272.485 cv
168.481 272.584 168.384 272.646 168.286 272.63 cv
167.951 272.562 166.469 272.488 165.231 273.329 cv
165.2 273.351 165.164 273.36 165.127 273.36 cv
cp
f
166.472 274.704 mo
166.394 274.704 166.32 274.654 166.296 274.575 cv
166.266 274.479 166.319 274.376 166.416 274.345 cv
167.307 274.062 168.27 274.017 168.756 274.119 cv
168.855 274.14 168.92 274.237 168.899 274.338 cv
168.88 274.437 168.782 274.498 168.682 274.479 cv
168.337 274.407 167.451 274.402 166.527 274.695 cv
166.509 274.701 166.49 274.704 166.472 274.704 cv
cp
f
199.215 272.892 mo
199.125 272.892 199.046 272.827 199.033 272.736 cv
199.018 272.636 199.085 272.542 199.186 272.526 cv
203.875 271.79 208.048 270.908 212.318 269.749 cv
212.422 269.723 212.518 269.78 212.545 269.879 cv
212.571 269.977 212.514 270.078 212.416 270.104 cv
208.131 271.267 203.946 272.151 199.244 272.89 cv
199.233 272.892 199.224 272.892 199.215 272.892 cv
cp
1 1 1 rgb
f
185.799 269.149 mo
185.714 269.149 185.64 269.091 185.619 269.005 cv
185.598 268.906 185.66 268.808 185.759 268.785 cv
190.632 267.688 195.894 264.731 200.536 262.121 cv
202.045 261.272 203.471 260.471 204.76 259.806 cv
212.763 255.686 220.711 252.637 224.656 258.163 cv
224.715 258.246 224.696 258.361 224.613 258.42 cv
224.531 258.479 224.414 258.461 224.356 258.378 cv
220.571 253.079 212.78 256.089 204.93 260.134 cv
203.646 260.795 202.223 261.595 200.715 262.442 cv
196.052 265.064 190.766 268.036 185.839 269.145 cv
185.827 269.147 185.812 269.149 185.799 269.149 cv
cp
f
203.527 247.959 mo
201.419 247.959 199.723 246.728 198.141 245.581 cv
196.893 244.676 195.714 243.82 194.408 243.544 cv
194.307 243.523 194.244 243.426 194.265 243.326 cv
194.285 243.228 194.395 243.162 194.482 243.185 cv
195.867 243.477 197.077 244.354 198.357 245.282 cv
201.258 247.387 204.259 249.561 209.474 244.457 cv
209.547 244.387 209.664 244.389 209.734 244.46 cv
209.806 244.533 209.805 244.649 209.732 244.721 cv
207.276 247.123 205.262 247.959 203.527 247.959 cv
cp
f
197.849 252.893 mo
197.825 252.893 197.802 252.888 197.777 252.878 cv
193.572 251.109 190.906 246.858 191.145 242.303 cv
191.15 242.204 191.231 242.128 191.329 242.128 cv
191.332 242.128 191.334 242.128 191.339 242.128 cv
191.439 242.134 191.519 242.22 191.513 242.321 cv
191.281 246.724 193.856 250.829 197.921 252.538 cv
198.015 252.578 198.058 252.686 198.019 252.779 cv
197.989 252.85 197.921 252.893 197.849 252.893 cv
cp
.282353 0 0 rgb
f
207.574 248.099 mo
207.522 248.099 207.471 248.077 207.435 248.034 cv
204.705 244.864 203.031 240.821 202.72 236.65 cv
202.712 236.549 202.789 236.46 202.891 236.453 cv
202.996 236.436 203.081 236.522 203.088 236.623 cv
203.392 240.716 205.035 244.684 207.714 247.794 cv
207.78 247.871 207.771 247.987 207.695 248.054 cv
207.659 248.084 207.617 248.099 207.574 248.099 cv
cp
f
208.937 244.198 mo
208.862 244.198 208.792 244.152 208.764 244.078 cv
207.901 241.764 207.901 239.216 208.764 236.902 cv
208.8 236.808 208.904 236.756 209.001 236.793 cv
209.097 236.829 209.146 236.936 209.109 237.03 cv
208.278 239.261 208.278 241.719 209.109 243.95 cv
209.146 244.045 209.097 244.15 209.001 244.187 cv
208.98 244.194 208.958 244.198 208.937 244.198 cv
cp
f
214.155 221.98 mo
213.305 221.98 212.486 221.68 211.812 221.074 cv
210.216 219.645 209.937 217.929 211.006 216.112 cv
211.058 216.024 211.17 215.994 211.258 216.047 cv
211.346 216.099 211.374 216.212 211.322 216.3 cv
210.341 217.969 210.587 219.483 212.056 220.8 cv
213.372 221.979 215.217 221.885 216.757 220.561 cv
216.832 220.494 216.95 220.502 217.016 220.58 cv
217.082 220.657 217.073 220.773 216.996 220.84 cv
216.115 221.598 215.115 221.98 214.155 221.98 cv
cp
f
211.113 251.776 mo
211.048 251.776 210.985 251.744 210.95 251.685 cv
210.25 250.491 209.352 249.269 208.421 248.242 cv
208.372 248.188 208.359 248.11 208.387 248.044 cv
210.533 242.935 215.004 239.08 220.977 237.191 cv
221.076 237.158 221.181 237.216 221.213 237.314 cv
221.244 237.413 221.189 237.52 221.09 237.551 cv
215.268 239.393 210.901 243.128 208.781 248.079 cv
209.7 249.104 210.583 250.313 211.275 251.493 cv
211.328 251.583 211.298 251.699 211.208 251.752 cv
211.178 251.769 211.146 251.776 211.113 251.776 cv
cp
f
190.25 245.161 mo
190.248 245.161 190.245 245.161 190.242 245.161 cv
190.139 245.157 190.058 245.069 190.062 244.965 cv
190.444 235.609 194.593 223.804 200.389 215.571 cv
200.857 212.683 201.612 209.804 202.632 207.015 cv
202.668 206.917 202.774 206.869 202.874 206.902 cv
202.971 206.938 203.022 207.046 202.986 207.144 cv
201.969 209.925 201.218 212.795 200.754 215.675 cv
200.749 215.703 200.738 215.73 200.722 215.754 cv
194.951 223.933 190.818 235.679 190.438 244.98 cv
190.434 245.082 190.351 245.161 190.25 245.161 cv
cp
f
570.815 277.272 mo
570.714 277.272 570.632 277.189 570.632 277.089 cv
570.632 211.481 li
570.632 204.014 564.556 197.938 557.088 197.938 cv
549.62 197.938 543.544 204.014 543.544 211.481 cv
543.544 277.089 li
543.544 277.189 543.462 277.272 543.36 277.272 cv
543.258 277.272 543.176 277.189 543.176 277.089 cv
543.176 211.481 li
543.176 203.811 549.416 197.569 557.088 197.569 cv
564.76 197.569 571 203.811 571 211.481 cv
571 277.089 li
571 277.189 570.918 277.272 570.815 277.272 cv
cp
.827451 .188235 .396078 rgb
f
570.815 217.704 mo
543.36 217.704 li
543.258 217.704 543.176 217.622 543.176 217.521 cv
543.176 217.419 543.258 217.336 543.36 217.336 cv
570.815 217.336 li
570.918 217.336 571 217.419 571 217.521 cv
571 217.622 570.918 217.704 570.815 217.704 cv
cp
f
565.377 217.704 mo
565.274 217.704 565.192 217.622 565.192 217.521 cv
565.192 200.539 li
565.192 200.438 565.274 200.354 565.377 200.354 cv
565.479 200.354 565.562 200.438 565.562 200.539 cv
565.562 217.521 li
565.562 217.622 565.479 217.704 565.377 217.704 cv
cp
f
559.851 217.704 mo
559.748 217.704 559.666 217.622 559.666 217.521 cv
559.666 198.032 li
559.666 197.931 559.748 197.848 559.851 197.848 cv
559.952 197.848 560.034 197.931 560.034 198.032 cv
560.034 217.521 li
560.034 217.622 559.952 217.704 559.851 217.704 cv
cp
f
554.324 217.704 mo
554.222 217.704 554.14 217.622 554.14 217.521 cv
554.14 198.032 li
554.14 197.931 554.222 197.848 554.324 197.848 cv
554.426 197.848 554.508 197.931 554.508 198.032 cv
554.508 217.521 li
554.508 217.622 554.426 217.704 554.324 217.704 cv
cp
f
548.798 217.704 mo
548.695 217.704 548.613 217.622 548.613 217.521 cv
548.613 200.539 li
548.613 200.438 548.695 200.354 548.798 200.354 cv
548.899 200.354 548.981 200.438 548.981 200.539 cv
548.981 217.521 li
548.981 217.622 548.899 217.704 548.798 217.704 cv
cp
f
557.088 194.059 mo
556.119 194.059 555.332 194.846 555.332 195.814 cv
555.332 196.782 556.119 197.569 557.088 197.569 cv
558.057 197.569 558.843 196.782 558.843 195.814 cv
558.843 194.846 558.057 194.059 557.088 194.059 cv
cp
557.088 197.938 mo
555.917 197.938 554.964 196.985 554.964 195.814 cv
554.964 194.644 555.917 193.689 557.088 193.689 cv
558.259 193.689 559.212 194.644 559.212 195.814 cv
559.212 196.985 558.259 197.938 557.088 197.938 cv
cp
f
554.732 196.575 mo
554.406 196.575 554.14 196.842 554.14 197.168 cv
554.14 197.495 554.406 197.761 554.732 197.761 cv
555.06 197.761 555.325 197.495 555.325 197.168 cv
555.325 196.842 555.06 196.575 554.732 196.575 cv
cp
554.732 198.129 mo
554.203 198.129 553.771 197.698 553.771 197.168 cv
553.771 196.638 554.203 196.207 554.732 196.207 cv
555.262 196.207 555.693 196.638 555.693 197.168 cv
555.693 197.698 555.262 198.129 554.732 198.129 cv
cp
f
559.443 196.574 mo
559.116 196.574 558.851 196.841 558.851 197.168 cv
558.851 197.494 559.116 197.761 559.443 197.761 cv
559.77 197.761 560.036 197.494 560.036 197.168 cv
560.036 196.841 559.77 196.574 559.443 196.574 cv
cp
559.443 198.129 mo
558.914 198.129 558.482 197.698 558.482 197.168 cv
558.482 196.638 558.914 196.206 559.443 196.206 cv
559.973 196.206 560.404 196.638 560.404 197.168 cv
560.404 197.698 559.973 198.129 559.443 198.129 cv
cp
f
536.297 222.93 mo
553.799 219.623 568.457 223.064 568.457 232.246 cv
568.457 239.894 550.84 239.783 550.84 239.783 cv
531.975 239.783 li
536.297 222.93 li
cp
1 1 1 rgb
f
532.212 239.6 mo
550.841 239.6 li
550.844 239.6 550.851 239.6 550.862 239.6 cv
551.435 239.6 562.793 239.542 566.848 235.512 cv
567.793 234.571 568.273 233.473 568.273 232.247 cv
568.273 229.85 567.258 227.793 565.255 226.133 cv
560.128 221.884 549.097 220.721 536.446 223.088 cv
532.212 239.6 li
cp
550.92 239.968 mo
550.882 239.968 550.854 239.968 550.839 239.968 cv
531.975 239.968 li
531.917 239.968 531.864 239.94 531.829 239.896 cv
531.795 239.851 531.782 239.793 531.796 239.737 cv
536.118 222.883 li
536.136 222.813 536.191 222.762 536.263 222.748 cv
549.065 220.332 560.265 221.519 565.49 225.849 cv
567.581 227.582 568.642 229.734 568.642 232.247 cv
568.642 233.574 568.125 234.761 567.106 235.773 cv
562.996 239.858 552.061 239.968 550.92 239.968 cv
cp
.827451 .188235 .396078 rgb
f
520.635 215.623 mo
515.764 208.803 505.663 224.354 498.434 220.373 cv
485.879 213.461 476.286 214.307 464.859 222.348 cv
455.78 228.736 444.377 207.971 425.416 239.783 cv
513.405 239.783 li
513.405 239.783 508.721 234.697 520.635 215.623 cv
cp
f
551.24 232.582 mo
552.687 231.102 553.427 229.071 553.272 227.007 cv
553.118 224.943 552.085 223.046 550.435 221.796 cv
552.28 216.733 543.438 214.375 538.443 219.092 cv
533.45 223.808 536.779 230.362 536.779 230.362 cv
540.281 232.686 551.24 232.582 551.24 232.582 cv
cp
.282353 0 0 rgb
f
532.298 222.75 mo
536.259 221.276 li
536.259 221.276 536.849 218.328 539.207 218.225 cv
540.155 218.183 540.414 218.82 540.384 219.597 cv
540.384 219.597 543.889 219.611 548.674 222.75 cv
548.674 222.75 546.697 223.854 546.905 226.327 cv
547.113 228.802 543.889 230.743 543.889 230.743 cv
533.797 230.743 529.462 230.743 529.462 230.743 cv
532.298 222.75 li
cp
.929412 .533333 .427451 rgb
f
533.997 228.131 mo
533.386 226.462 534.443 224.182 535.479 223.5 cv
535.479 223.5 533.362 228.155 538.088 230.271 cv
533.997 228.131 li
cp
.282353 0 0 rgb
f
505.845 239.783 mo
506.242 232.165 509.077 224.908 513.884 219.059 cv
515.19 217.469 516.915 216.272 518.825 215.507 cv
524.316 213.306 li
528.332 211.695 532.667 214.777 532.467 219.1 cv
531.508 239.783 li
505.845 239.783 li
cp
1 .454902 .262745 rgb
f
518.63 221.519 mo
534.856 228.076 li
537.414 229.109 540.118 229.711 542.872 229.875 cv
547.303 230.139 553.784 230.777 553.355 232.246 cv
554.328 232.23 554.349 233.468 553.376 233.483 cv
524.829 233.483 li
523.075 233.483 521.319 233.064 519.85 232.108 cv
517.458 230.554 515.162 227.429 518.63 221.519 cv
cp
.929412 .533333 .427451 rgb
f
519.159 221.01 mo
519.127 221.01 519.097 221.002 519.068 220.985 cv
518.979 220.936 518.949 220.823 518.999 220.734 cv
521.95 215.532 li
521.999 215.443 522.113 215.415 522.201 215.463 cv
522.29 215.514 522.32 215.625 522.27 215.714 cv
519.318 220.916 li
519.286 220.976 519.223 221.01 519.159 221.01 cv
cp
.827451 .188235 .396078 rgb
f
528.179 224.859 mo
528.15 224.859 528.12 224.852 528.093 224.838 cv
528.004 224.79 527.969 224.679 528.017 224.589 cv
530.063 220.739 li
530.11 220.649 530.224 220.617 530.312 220.663 cv
530.4 220.71 530.436 220.822 530.388 220.912 cv
528.342 224.762 li
528.309 224.824 528.245 224.859 528.179 224.859 cv
cp
f
540.212 239.783 mo
520.011 239.783 li
518.278 239.783 516.86 238.366 516.86 236.634 cv
516.86 236.634 li
516.86 234.9 518.278 233.483 520.011 233.483 cv
553.685 233.483 li
554.164 233.483 554.466 233.983 554.257 234.415 cv
553.148 236.698 548.116 239.783 540.212 239.783 cv
cp
.929412 .533333 .427451 rgb
f
552.917 232.431 mo
552.898 232.431 552.879 232.428 552.86 232.422 cv
551.035 231.845 549.139 231.552 547.224 231.552 cv
547.202 231.552 547.182 231.552 547.16 231.552 cv
547.16 231.552 li
547.058 231.552 546.976 231.47 546.976 231.368 cv
546.975 231.245 547.091 231.182 547.224 231.184 cv
549.177 231.184 551.111 231.482 552.973 232.071 cv
553.069 232.103 553.122 232.205 553.092 232.302 cv
553.067 232.381 552.994 232.431 552.917 232.431 cv
cp
.282353 0 0 rgb
f
549.401 222.789 mo
549.337 222.789 549.273 222.755 549.24 222.693 cv
549.191 222.604 549.225 222.492 549.313 222.443 cv
549.95 222.097 li
550.035 222.051 550.149 222.08 550.199 222.17 cv
550.248 222.26 550.215 222.371 550.125 222.42 cv
549.489 222.767 li
549.462 222.782 549.432 222.789 549.401 222.789 cv
cp
.929412 .533333 .427451 rgb
f
540.917 227.116 mo
540.887 227.116 540.856 227.113 540.826 227.108 cv
540.527 227.051 540.279 226.718 539.972 225.961 cv
539.935 225.866 539.979 225.759 540.074 225.721 cv
540.17 225.682 540.273 225.728 540.314 225.822 cv
540.625 226.589 540.812 226.73 540.896 226.746 cv
541.015 226.778 541.203 226.564 541.391 226.368 cv
541.625 226.125 541.916 225.82 542.307 225.631 cv
542.397 225.587 542.508 225.624 542.553 225.717 cv
542.598 225.808 542.559 225.918 542.468 225.962 cv
542.136 226.122 541.881 226.389 541.656 226.623 cv
541.406 226.887 541.185 227.116 540.917 227.116 cv
cp
.282353 0 0 rgb
f
538.374 227.685 mo
538.322 227.685 538.271 227.663 538.235 227.621 cv
537.61 226.895 537.282 225.966 537.312 225.005 cv
537.314 224.903 537.382 224.822 537.501 224.826 cv
537.602 224.829 537.683 224.914 537.68 225.016 cv
537.653 225.884 537.95 226.724 538.514 227.381 cv
538.58 227.458 538.571 227.574 538.494 227.641 cv
538.459 227.671 538.418 227.685 538.374 227.685 cv
cp
.827451 .188235 .396078 rgb
f
542.65 224.667 mo
542.555 224.667 542.474 224.593 542.467 224.496 cv
542.404 223.631 542.243 222.771 541.99 221.942 cv
541.973 221.889 541.983 221.83 542.015 221.783 cv
542.5 221.09 li
542.559 221.007 542.672 220.985 542.756 221.045 cv
542.839 221.104 542.859 221.218 542.802 221.302 cv
542.369 221.921 li
542.616 222.75 542.773 223.606 542.835 224.47 cv
542.842 224.571 542.766 224.659 542.664 224.666 cv
542.659 224.667 542.655 224.667 542.65 224.667 cv
cp
.282353 0 0 rgb
f
543.415 229.479 mo
543.385 229.479 543.353 229.472 543.324 229.455 cv
542.814 229.17 li
542.747 229.132 542.71 229.054 542.724 228.976 cv
542.868 228.206 542.875 227.427 542.747 226.658 cv
542.729 226.559 542.798 226.464 542.898 226.447 cv
542.993 226.421 543.094 226.497 543.109 226.598 cv
543.239 227.365 543.237 228.144 543.109 228.913 cv
543.505 229.135 li
543.593 229.185 543.625 229.297 543.576 229.385 cv
543.541 229.445 543.479 229.479 543.415 229.479 cv
cp
f
544.848 224.523 mo
544.762 224.523 544.684 224.464 544.667 224.376 cv
544.465 223.354 543.984 222.409 543.279 221.644 cv
543.21 221.569 543.215 221.453 543.289 221.384 cv
543.364 221.313 543.48 221.319 543.55 221.394 cv
544.303 222.21 544.813 223.216 545.029 224.304 cv
545.048 224.403 544.983 224.501 544.884 224.521 cv
544.871 224.522 544.859 224.523 544.848 224.523 cv
cp
f
544.131 229.193 mo
544.09 229.193 544.049 229.18 544.015 229.151 cv
543.936 229.088 543.924 228.972 543.989 228.893 cv
544.574 228.174 544.868 227.267 544.813 226.338 cv
544.808 226.237 544.885 226.149 544.987 226.144 cv
544.99 226.144 544.994 226.144 544.997 226.144 cv
545.094 226.144 545.176 226.219 545.182 226.316 cv
545.24 227.338 544.918 228.335 544.273 229.126 cv
544.237 229.171 544.185 229.193 544.131 229.193 cv
cp
f
539.322 220.016 mo
539.229 220.016 539.15 219.945 539.14 219.851 cv
539.114 219.615 538.898 219.448 538.668 219.46 cv
538.562 219.469 538.479 219.394 538.468 219.292 cv
538.459 219.19 538.536 219.102 538.637 219.093 cv
539.085 219.054 539.459 219.38 539.506 219.812 cv
539.517 219.912 539.443 220.004 539.343 220.015 cv
539.336 220.016 539.328 220.016 539.322 220.016 cv
cp
f
505.846 239.083 mo
505.841 239.083 505.836 239.083 505.831 239.083 cv
505.729 239.075 505.654 238.986 505.661 238.885 cv
506.271 231.229 509.414 223.848 514.509 218.103 cv
514.576 218.025 514.694 218.019 514.77 218.087 cv
514.846 218.154 514.853 218.271 514.785 218.347 cv
509.742 224.032 506.633 231.337 506.029 238.913 cv
506.021 239.01 505.94 239.083 505.846 239.083 cv
cp
f
524.829 233.668 mo
522.92 233.668 521.163 233.182 519.749 232.264 cv
517.227 230.623 514.959 227.411 518.472 221.426 cv
518.521 221.338 518.631 221.308 518.723 221.36 cv
518.811 221.412 518.84 221.524 518.788 221.612 cv
515.424 227.347 517.563 230.401 519.95 231.954 cv
521.305 232.834 522.992 233.299 524.829 233.299 cv
553.376 233.299 li
553.75 233.294 553.914 233.072 553.911 232.856 cv
553.908 232.644 553.74 232.431 553.373 232.431 cv
553.367 232.431 553.361 232.431 553.355 232.431 cv
553.298 232.431 553.243 232.403 553.209 232.357 cv
553.174 232.312 553.163 232.25 553.179 232.194 cv
553.206 232.1 553.188 232.012 553.124 231.919 cv
552.54 231.091 548.801 230.412 542.86 230.059 cv
540.655 229.928 538.482 229.517 536.406 228.838 cv
536.31 228.806 536.257 228.702 536.288 228.605 cv
536.321 228.51 536.427 228.455 536.521 228.488 cv
538.567 229.156 540.708 229.562 542.884 229.69 cv
549.201 230.067 552.748 230.746 553.425 231.706 cv
553.507 231.823 553.553 231.948 553.559 232.075 cv
554.026 232.149 554.273 232.5 554.279 232.851 cv
554.285 233.249 553.979 233.657 553.379 233.668 cv
524.829 233.668 li
cp
1 1 1 rgb
f
518.218 239.403 mo
518.182 239.403 518.145 239.393 518.113 239.37 cv
517.214 238.744 516.677 237.721 516.677 236.633 cv
516.677 234.795 518.172 233.299 520.011 233.299 cv
550.784 233.299 li
550.887 233.299 550.969 233.382 550.969 233.483 cv
550.969 233.585 550.887 233.668 550.784 233.668 cv
520.011 233.668 li
518.376 233.668 517.046 234.998 517.046 236.633 cv
517.046 237.6 517.523 238.511 518.323 239.068 cv
518.406 239.127 518.427 239.241 518.369 239.324 cv
518.333 239.376 518.275 239.403 518.218 239.403 cv
cp
f
532.788 227.425 mo
532.765 227.425 532.741 227.42 532.719 227.411 cv
519.477 222.06 li
519.382 222.021 519.338 221.914 519.375 221.819 cv
519.414 221.726 519.519 221.681 519.615 221.718 cv
532.856 227.07 li
532.951 227.108 532.996 227.215 532.959 227.31 cv
532.93 227.381 532.861 227.425 532.788 227.425 cv
cp
.282353 0 0 rgb
f
549.68 236.817 mo
549.608 236.817 549.543 236.777 549.511 236.709 cv
549.47 236.616 549.511 236.507 549.604 236.466 cv
552.166 235.313 552.824 234.597 552.926 234.2 cv
552.936 234.163 552.947 234.1 552.921 234.078 cv
552.854 234.021 552.385 233.813 549.524 235.097 cv
548.111 235.728 547.382 235.322 546.604 234.891 cv
545.708 234.393 544.781 233.88 542.513 234.799 cv
542.418 234.839 542.313 234.793 542.272 234.697 cv
542.235 234.603 542.279 234.496 542.375 234.457 cv
544.813 233.468 545.859 234.055 546.784 234.569 cv
547.537 234.99 548.133 235.317 549.374 234.76 cv
552.229 233.479 552.894 233.572 553.158 233.796 cv
553.236 233.861 553.354 234.012 553.282 234.291 cv
553.104 234.992 551.95 235.813 549.756 236.801 cv
549.729 236.813 549.705 236.817 549.68 236.817 cv
cp
f
542.318 222.616 mo
542.264 222.616 542.208 222.591 542.172 222.543 cv
542.109 222.463 542.126 222.347 542.206 222.285 cv
542.793 221.838 li
542.875 221.775 542.99 221.791 543.052 221.873 cv
543.114 221.953 543.099 222.069 543.018 222.131 cv
542.431 222.579 li
542.396 222.604 542.357 222.616 542.318 222.616 cv
cp
f
420.168 246.246 mo
570.815 246.246 li
570.815 243.394 li
420.168 243.394 li
420.168 246.246 li
cp
.827451 .188235 .396078 rgb
f
423.778 239.783 mo
567.205 239.783 li
569.199 239.783 570.815 241.399 570.815 243.394 cv
570.815 243.394 li
420.168 243.394 li
420.168 243.394 li
420.168 241.399 421.784 239.783 423.778 239.783 cv
cp
.282353 0 0 rgb
f
443.089 243.504 mo
428.418 243.504 li
428.316 243.504 428.234 243.421 428.234 243.319 cv
428.234 243.218 428.316 243.135 428.418 243.135 cv
443.089 243.135 li
443.19 243.135 443.272 243.218 443.272 243.319 cv
443.272 243.421 443.19 243.504 443.089 243.504 cv
cp
1 1 1 rgb
f
502.524 243.577 mo
453.716 243.577 li
453.613 243.577 453.531 243.495 453.531 243.394 cv
453.531 243.292 453.613 243.209 453.716 243.209 cv
502.524 243.209 li
502.627 243.209 502.709 243.292 502.709 243.394 cv
502.709 243.495 502.627 243.577 502.524 243.577 cv
cp
f
534.056 243.577 mo
524.908 243.577 li
524.807 243.577 524.725 243.495 524.725 243.394 cv
524.725 243.292 524.807 243.209 524.908 243.209 cv
534.056 243.209 li
534.157 243.209 534.239 243.292 534.239 243.394 cv
534.239 243.495 534.157 243.577 534.056 243.577 cv
cp
f
564.17 243.577 mo
559.851 243.577 li
559.748 243.577 559.666 243.495 559.666 243.394 cv
559.666 243.292 559.748 243.209 559.851 243.209 cv
564.17 243.209 li
564.271 243.209 564.354 243.292 564.354 243.394 cv
564.354 243.495 564.271 243.577 564.17 243.577 cv
cp
f
447.624 277.272 mo
447.521 277.272 447.439 277.189 447.439 277.089 cv
447.439 211.481 li
447.439 204.014 441.363 197.938 433.896 197.938 cv
426.429 197.938 420.353 204.014 420.353 211.481 cv
420.353 277.089 li
420.353 277.189 420.271 277.272 420.168 277.272 cv
420.065 277.272 419.983 277.189 419.983 277.089 cv
419.983 211.481 li
419.983 203.811 426.224 197.569 433.896 197.569 cv
441.567 197.569 447.808 203.811 447.808 211.481 cv
447.808 277.089 li
447.808 277.189 447.726 277.272 447.624 277.272 cv
cp
.282353 0 0 rgb
f
447.624 217.704 mo
420.168 217.704 li
420.065 217.704 419.983 217.622 419.983 217.521 cv
419.983 217.419 420.065 217.336 420.168 217.336 cv
447.624 217.336 li
447.726 217.336 447.808 217.419 447.808 217.521 cv
447.808 217.622 447.726 217.704 447.624 217.704 cv
cp
f
442.187 217.704 mo
442.084 217.704 442.002 217.622 442.002 217.521 cv
442.002 200.539 li
442.002 200.438 442.084 200.354 442.187 200.354 cv
442.288 200.354 442.37 200.438 442.37 200.539 cv
442.37 217.521 li
442.37 217.622 442.288 217.704 442.187 217.704 cv
cp
f
436.66 217.704 mo
436.558 217.704 436.476 217.622 436.476 217.521 cv
436.476 198.032 li
436.476 197.931 436.558 197.848 436.66 197.848 cv
436.762 197.848 436.844 197.931 436.844 198.032 cv
436.844 217.521 li
436.844 217.622 436.762 217.704 436.66 217.704 cv
cp
f
431.132 217.704 mo
431.029 217.704 430.947 217.622 430.947 217.521 cv
430.947 198.032 li
430.947 197.931 431.029 197.848 431.132 197.848 cv
431.234 197.848 431.316 197.931 431.316 198.032 cv
431.316 217.521 li
431.316 217.622 431.234 217.704 431.132 217.704 cv
cp
f
425.605 217.704 mo
425.503 217.704 425.421 217.622 425.421 217.521 cv
425.421 200.539 li
425.421 200.438 425.503 200.354 425.605 200.354 cv
425.707 200.354 425.789 200.438 425.789 200.539 cv
425.789 217.521 li
425.789 217.622 425.707 217.704 425.605 217.704 cv
cp
f
433.896 194.059 mo
432.928 194.059 432.141 194.846 432.141 195.814 cv
432.141 196.782 432.928 197.569 433.896 197.569 cv
434.864 197.569 435.651 196.782 435.651 195.814 cv
435.651 194.846 434.864 194.059 433.896 194.059 cv
cp
433.896 197.938 mo
432.725 197.938 431.772 196.985 431.772 195.814 cv
431.772 194.644 432.725 193.689 433.896 193.689 cv
435.067 193.689 436.02 194.644 436.02 195.814 cv
436.02 196.985 435.067 197.938 433.896 197.938 cv
cp
f
431.54 196.575 mo
431.214 196.575 430.947 196.842 430.947 197.168 cv
430.947 197.495 431.214 197.761 431.54 197.761 cv
431.867 197.761 432.133 197.495 432.133 197.168 cv
432.133 196.842 431.867 196.575 431.54 196.575 cv
cp
431.54 198.129 mo
431.011 198.129 430.579 197.698 430.579 197.168 cv
430.579 196.638 431.011 196.207 431.54 196.207 cv
432.07 196.207 432.502 196.638 432.502 197.168 cv
432.502 197.698 432.07 198.129 431.54 198.129 cv
cp
f
436.251 196.574 mo
435.925 196.574 435.658 196.841 435.658 197.168 cv
435.658 197.494 435.925 197.761 436.251 197.761 cv
436.578 197.761 436.844 197.494 436.844 197.168 cv
436.844 196.841 436.578 196.574 436.251 196.574 cv
cp
436.251 198.129 mo
435.722 198.129 435.29 197.698 435.29 197.168 cv
435.29 196.638 435.722 196.206 436.251 196.206 cv
436.78 196.206 437.212 196.638 437.212 197.168 cv
437.212 197.698 436.78 198.129 436.251 198.129 cv
cp
f
447.141 245.572 mo
447.038 245.572 446.956 245.489 446.956 245.389 cv
446.956 240.451 li
446.956 240.35 447.038 240.267 447.141 240.267 cv
447.242 240.267 447.324 240.35 447.324 240.451 cv
447.324 245.389 li
447.324 245.489 447.242 245.572 447.141 245.572 cv
cp
1 1 1 rgb
f
555.834 274.34 mo
532.991 274.34 li
532.991 250.48 li
555.834 250.48 li
555.834 274.34 li
cp
1 .454902 .262745 rgb
f
515.224 274.34 mo
532.991 274.34 li
532.991 250.48 li
515.224 250.48 li
515.224 274.34 li
cp
f
530.494 257.647 mo
530.494 252.978 li
517.721 252.978 li
517.721 257.647 li
530.494 257.647 li
cp
1 1 1 rgb
f
530.494 264.745 mo
530.494 260.075 li
517.721 260.075 li
517.721 264.745 li
530.494 264.745 li
cp
f
517.721 267.173 mo
517.721 271.843 li
530.494 271.843 li
530.494 267.173 li
517.721 267.173 li
cp
f
524.908 255.313 mo
524.908 255.755 524.55 256.113 524.107 256.113 cv
523.665 256.113 523.307 255.755 523.307 255.313 cv
523.307 254.87 523.665 254.512 524.107 254.512 cv
524.55 254.512 524.908 254.87 524.908 255.313 cv
cp
1 .454902 .262745 rgb
f
524.908 269.508 mo
524.908 269.95 524.55 270.309 524.107 270.309 cv
523.665 270.309 523.307 269.95 523.307 269.508 cv
523.307 269.065 523.665 268.707 524.107 268.707 cv
524.55 268.707 524.908 269.065 524.908 269.508 cv
cp
f
524.908 262.41 mo
524.908 262.853 524.55 263.211 524.107 263.211 cv
523.665 263.211 523.307 262.853 523.307 262.41 cv
523.307 261.968 523.665 261.609 524.107 261.609 cv
524.55 261.609 524.908 261.968 524.908 262.41 cv
cp
f
532.992 277.272 mo
532.89 277.272 532.808 277.189 532.808 277.089 cv
532.808 274.34 li
532.808 274.238 532.89 274.155 532.992 274.155 cv
533.094 274.155 533.176 274.238 533.176 274.34 cv
533.176 277.089 li
533.176 277.189 533.094 277.272 532.992 277.272 cv
cp
f
555.833 277.272 mo
555.731 277.272 555.649 277.189 555.649 277.089 cv
555.649 250.664 li
515.408 250.664 li
515.408 277.089 li
515.408 277.189 515.326 277.272 515.224 277.272 cv
515.122 277.272 515.04 277.189 515.04 277.089 cv
515.04 250.48 li
515.04 250.379 515.122 250.296 515.224 250.296 cv
555.833 250.296 li
555.936 250.296 556.018 250.379 556.018 250.48 cv
556.018 277.089 li
556.018 277.189 555.936 277.272 555.833 277.272 cv
cp
f
454.686 277.089 mo
455.657 273.686 458.934 271.473 462.454 271.843 cv
463.028 273.528 463.195 275.326 462.939 277.089 cv
454.686 277.089 li
cp
f
471.387 277.272 mo
454.686 277.272 li
454.583 277.272 454.501 277.189 454.501 277.089 cv
454.501 276.987 454.583 276.904 454.686 276.904 cv
471.387 276.904 li
471.489 276.904 471.571 276.987 471.571 277.089 cv
471.571 277.189 471.489 277.272 471.387 277.272 cv
cp
f
467.168 277.089 mo
468.14 273.686 471.417 271.473 474.937 271.843 cv
475.511 273.528 475.678 275.326 475.422 277.089 cv
467.168 277.089 li
cp
f
483.87 277.272 mo
467.169 277.272 li
467.066 277.272 466.984 277.189 466.984 277.089 cv
466.984 276.987 467.066 276.904 467.169 276.904 cv
483.87 276.904 li
483.973 276.904 484.055 276.987 484.055 277.089 cv
484.055 277.189 483.973 277.272 483.87 277.272 cv
cp
f
398.497 254.348 mo
397.962 255.308 li
397.434 256.236 li
395.331 256.814 li
393.805 257.233 391.67 259.495 391.186 261.006 cv
390.786 262.289 390.045 263.458 389.048 264.37 cv
390.815 264.798 li
391.599 265.111 392.255 265.71 392.64 266.451 cv
393.082 267.292 li
393.638 268.361 393.281 269.673 392.255 270.301 cv
391.242 268.633 li
391.029 268.276 390.644 268.063 390.245 268.063 cv
386.324 268.063 li
385.997 275.204 li
386.11 275.204 li
387.151 275.204 388.007 276.06 388.007 277.114 cv
384.087 277.114 li
383.517 277.114 383.018 276.701 382.918 276.131 cv
381.521 268.134 li
379.781 269.245 377.601 269.231 375.89 268.233 cv
375.591 269.915 374.606 271.427 373.124 272.367 cv
373.737 273.921 375.105 274.99 376.688 275.275 cv
377.572 275.433 378.213 276.216 378.213 277.114 cv
373.737 277.114 li
371.713 276.388 370.188 274.677 369.717 272.567 cv
370.572 271.712 370.929 270.472 370.658 269.288 cv
370.373 268.105 369.503 267.149 368.349 266.765 cv
367.807 269.559 364.472 271.669 361.649 272.025 cv
361.236 273.266 361.236 274.605 361.649 275.846 cv
362.747 275.86 li
363.445 275.86 363.987 276.43 363.987 277.114 cv
359.026 277.114 li
358.157 274.919 358.157 272.481 359.026 270.286 cv
361.207 268.96 li
360.537 265.282 362.532 261.505 364.799 258.554 cv
361.449 258.354 358.897 255.232 359.682 251.683 cv
360.01 250.157 361.05 248.804 362.433 248.076 cv
363.744 247.392 365.127 247.25 366.382 247.549 cv
366.695 247.62 366.909 247.905 366.881 248.219 cv
366.852 248.532 366.596 248.789 366.281 248.817 cv
365.427 248.875 364.571 249.202 363.815 249.83 cv
362.846 250.643 362.29 251.911 362.361 253.18 cv
362.49 255.475 364.243 257.058 366.225 257.229 cv
367.707 257.356 369.176 257.57 370.63 257.884 cv
377.258 259.31 384.223 257.794 387.355 251.655 cv
388.395 249.625 389.13 247.731 391.017 246.439 cv
391.278 249.975 li
391.44 249.974 391.604 249.974 391.773 250.001 cv
391.926 250.019 li
393.32 250.196 394.518 251.109 395.08 252.404 cv
397.165 253.59 li
398.497 254.348 li
cp
.282353 0 0 rgb
f
318.784 158.776 mo
320.941 156.286 321.259 149.401 317.978 150.456 cv
316.115 146.983 301.111 145.198 295.477 159.381 cv
289.843 173.563 297.65 187.131 309.524 185.835 cv
309.866 178.532 li
312.797 159.829 li
318.784 158.776 li
cp
f
314.445 163.939 mo
314.773 166.285 li
314.973 167.687 li
306.886 169.524 li
310.133 159.238 li
310.133 159.238 308.179 156.387 310.207 155.224 cv
311.578 154.433 312.331 156.62 312.331 156.62 cv
312.331 156.62 316.395 155.729 317.601 153.106 cv
320.733 157.986 320.241 166.439 314.445 163.939 cv
cp
.929412 .533333 .427451 rgb
f
311.578 157.597 mo
311.516 157.597 311.456 157.564 311.422 157.508 cv
310.717 156.321 li
310.666 156.234 310.694 156.123 310.781 156.072 cv
310.866 156.021 310.977 156.051 311.028 156.136 cv
311.733 157.322 li
311.784 157.409 311.756 157.521 311.67 157.571 cv
311.642 157.588 311.609 157.597 311.578 157.597 cv
cp
.282353 0 0 rgb
f
314.773 166.285 mo
312.1 164.829 313.049 162.021 313.049 162.021 cv
313.049 162.021 313.63 163.323 314.445 163.939 cv
314.773 166.285 li
cp
f
317.894 152.836 mo
317.869 152.836 317.845 152.831 317.821 152.821 cv
317.729 152.781 317.688 152.674 317.728 152.583 cv
317.73 152.576 318.032 151.869 317.848 151.263 cv
317.818 151.167 317.872 151.066 317.968 151.037 cv
318.063 151.013 318.166 151.063 318.193 151.158 cv
318.417 151.894 318.074 152.694 318.059 152.728 cv
318.029 152.796 317.963 152.836 317.894 152.836 cv
cp
.929412 .533333 .427451 rgb
f
318.646 156.993 mo
318.887 157.505 319.47 157.942 319.97 158.243 cv
320.11 158.327 320.186 158.487 320.162 158.648 cv
320.138 158.811 320.019 158.941 319.86 158.98 cv
319.512 159.067 319.12 159.134 318.784 159.115 cv
318.646 156.993 li
cp
f
317.984 156.986 mo
317.6 157.471 316.973 157.714 316.359 157.628 cv
316.231 157.613 316.104 157.585 315.989 157.542 cv
315.533 157.386 315.162 157.058 314.948 156.602 cv
315.419 156.26 315.975 156.131 316.502 156.202 cv
317.072 156.245 317.614 156.53 317.984 156.986 cv
cp
1 1 1 rgb
f
316.332 155.442 mo
316.252 155.442 316.179 155.391 316.157 155.311 cv
316.131 155.213 316.188 155.113 316.283 155.087 cv
316.852 154.93 317.436 154.889 318.015 154.963 cv
318.114 154.976 318.184 155.066 318.171 155.166 cv
318.158 155.265 318.083 155.328 317.967 155.322 cv
317.438 155.251 316.9 155.29 316.38 155.437 cv
316.364 155.44 316.348 155.442 316.332 155.442 cv
cp
.282353 0 0 rgb
f
317.984 156.986 mo
317.6 157.471 316.973 157.714 316.359 157.628 cv
316.231 157.613 316.104 157.585 315.989 157.542 cv
315.975 157.485 315.975 157.414 315.975 157.357 cv
315.975 156.9 316.175 156.487 316.502 156.202 cv
317.072 156.245 317.614 156.53 317.984 156.986 cv
cp
f
316.78 161.497 mo
316.774 161.497 316.771 161.497 316.765 161.496 cv
316.034 161.434 315.345 161.115 314.821 160.6 cv
314.75 160.53 314.749 160.415 314.819 160.344 cv
314.889 160.274 315.004 160.271 315.076 160.342 cv
315.539 160.798 316.149 161.079 316.796 161.135 cv
316.896 161.144 316.97 161.231 316.962 161.331 cv
316.953 161.425 316.874 161.497 316.78 161.497 cv
cp
.827451 .188235 .396078 rgb
f
306.249 168.296 mo
306.182 168.296 306.114 168.257 306.085 168.19 cv
304.401 164.54 304.71 160.354 306.912 156.99 cv
309.066 153.696 312.674 151.749 316.598 151.749 cv
316.68 151.749 316.761 151.751 316.844 151.752 cv
316.943 151.754 317.022 151.837 317.021 151.937 cv
317.02 152.036 316.939 152.114 316.84 152.114 cv
316.839 152.114 316.837 152.114 316.836 152.114 cv
312.951 152.043 309.347 153.931 307.215 157.188 cv
305.083 160.446 304.782 164.502 306.413 168.039 cv
306.456 168.129 306.416 168.237 306.325 168.278 cv
306.3 168.29 306.274 168.296 306.249 168.296 cv
cp
.376471 .262745 .321569 rgb
f
304.27 180.692 mo
304.224 180.692 304.178 180.675 304.143 180.64 cv
299.098 175.606 297.557 168.083 300.219 161.473 cv
302.88 154.862 309.204 150.504 316.329 150.372 cv
316.329 150.372 316.33 150.372 316.332 150.372 cv
316.431 150.372 316.512 150.45 316.513 150.549 cv
316.515 150.65 316.436 150.732 316.335 150.734 cv
309.356 150.864 303.161 155.134 300.556 161.608 cv
297.947 168.083 299.457 175.453 304.397 180.384 cv
304.468 180.454 304.47 180.569 304.398 180.64 cv
304.363 180.675 304.316 180.692 304.27 180.692 cv
cp
f
291.372 250.591 mo
337.231 250.591 li
335.285 231.814 329.511 201.896 322.187 193.434 cv
322.51 186.03 329.496 184.041 329.522 178.083 cv
319.136 168.187 li
318.021 167.125 316.66 166.306 315.146 166.029 cv
314.897 165.984 314.646 165.952 314.394 165.934 cv
307.716 165.457 302.322 172.779 305.322 179.45 cv
307.968 185.331 310.841 189.777 310.446 193.179 cv
306.109 196.684 304.062 204.974 304.81 209.889 cv
305.711 215.813 305.65 221.88 303.732 227.558 cv
300.933 235.843 296.764 243.632 291.372 250.591 cv
cp
.827451 .188235 .396078 rgb
f
315.895 178.264 mo
315.857 178.264 315.822 178.254 315.789 178.23 cv
310.058 174.177 li
309.976 174.118 309.957 174.006 310.014 173.924 cv
310.071 173.841 310.184 173.821 310.267 173.881 cv
315.999 177.935 li
316.081 177.993 316.1 178.105 316.041 178.188 cv
316.008 178.237 315.951 178.264 315.895 178.264 cv
cp
.282353 0 0 rgb
f
314.302 177.85 mo
314.281 177.85 314.261 177.846 314.24 177.839 cv
310.102 176.351 li
310.007 176.317 309.958 176.213 309.992 176.118 cv
310.024 176.024 310.128 175.978 310.223 176.01 cv
314.362 177.498 li
314.457 177.531 314.506 177.636 314.472 177.729 cv
314.446 177.804 314.375 177.85 314.302 177.85 cv
cp
f
329.522 178.083 mo
334.141 182.114 343.472 192.521 346.148 195.669 cv
349.23 197.898 350.681 199.622 350.811 202.999 cv
350.833 203.575 350.446 204.084 349.887 204.22 cv
349.499 204.313 349.052 204.239 348.67 203.698 cv
348.169 204.461 347.393 203.609 347.419 203.327 cv
347.051 204.18 346.204 203.736 346.04 203.281 cv
345.8 204.137 344.269 203.521 344.408 202.143 cv
343.807 201.891 343.03 200.408 342.825 199.299 cv
342.732 198.792 342.454 198.34 342.045 198.027 cv
338.496 195.322 323.22 183.587 317.952 178.083 cv
329.522 178.083 li
cp
.929412 .533333 .427451 rgb
f
336.086 162.186 mo
336.086 162.186 337.549 161.777 339.052 163.182 cv
339.339 163.45 339.493 163.833 339.521 164.225 cv
339.602 165.342 339.598 167.575 338.263 167.469 cv
338.263 167.469 337.777 169.012 336.29 169.205 cv
334.775 169.029 li
334.775 169.029 330.756 176.167 329.522 178.083 cv
323.759 172.592 li
332.558 166.242 li
332.691 165.382 333.183 164.854 333.735 164.678 cv
333.582 163.922 334.172 163.429 334.516 163.432 cv
334.457 163.044 334.799 162.62 335.363 162.635 cv
335.363 162.635 335.643 162.306 336.086 162.186 cv
cp
f
335.177 168.273 mo
335.122 168.273 335.068 168.248 335.033 168.201 cv
334.972 168.121 334.987 168.008 335.068 167.947 cv
336.269 167.036 337.152 166.763 337.84 167.077 cv
337.933 167.119 337.972 167.227 337.93 167.317 cv
337.89 167.41 337.779 167.448 337.69 167.406 cv
337.341 167.243 336.709 167.156 335.286 168.236 cv
335.254 168.261 335.216 168.273 335.177 168.273 cv
cp
.282353 0 0 rgb
f
338.769 166.629 mo
338.715 166.629 338.661 166.604 338.626 166.558 cv
338.062 165.827 336.438 165.117 335.012 165.263 cv
334.91 165.273 334.822 165.199 334.813 165.101 cv
334.802 165.001 334.876 164.912 334.975 164.901 cv
336.529 164.743 338.276 165.514 338.912 166.337 cv
338.975 166.416 338.959 166.529 338.879 166.591 cv
338.847 166.616 338.807 166.629 338.769 166.629 cv
cp
f
339.11 165.312 mo
339.042 165.312 338.977 165.273 338.946 165.208 cv
338.585 164.448 337.248 163.799 336.057 163.823 cv
336.057 163.823 336.055 163.823 336.054 163.823 cv
335.954 163.823 335.874 163.745 335.872 163.646 cv
335.871 163.545 335.95 163.463 336.051 163.461 cv
336.072 163.46 336.095 163.46 336.117 163.46 cv
337.424 163.46 338.858 164.18 339.274 165.052 cv
339.316 165.143 339.278 165.25 339.188 165.294 cv
339.162 165.306 339.137 165.312 339.11 165.312 cv
cp
f
339.058 164.14 mo
338.998 164.14 338.94 164.11 338.905 164.057 cv
338.654 163.664 337.946 163.066 337.021 163.026 cv
336.923 163.022 336.845 162.938 336.85 162.837 cv
336.854 162.737 336.941 162.663 337.039 162.664 cv
338.033 162.707 338.861 163.314 339.211 163.861 cv
339.265 163.945 339.239 164.058 339.155 164.111 cv
339.126 164.131 339.092 164.14 339.058 164.14 cv
cp
f
335.103 170.795 mo
335.093 170.795 335.084 170.795 335.074 170.794 cv
334.367 170.776 333.266 170.086 332.267 169.034 cv
331.652 168.387 331.162 167.691 330.887 167.075 cv
330.582 166.393 330.572 165.888 330.861 165.613 cv
331.199 165.294 331.845 165.399 332.685 165.924 cv
332.77 165.977 332.795 166.089 332.742 166.174 cv
332.688 166.256 332.575 166.283 332.492 166.23 cv
331.849 165.829 331.307 165.691 331.11 165.876 cv
330.951 166.027 330.991 166.421 331.218 166.928 cv
331.477 167.507 331.942 168.166 332.53 168.785 cv
333.438 169.739 334.488 170.417 335.082 170.432 cv
335.214 170.448 335.301 170.408 335.36 170.352 cv
335.532 170.188 335.469 169.738 335.194 169.177 cv
335.15 169.087 335.188 168.979 335.277 168.935 cv
335.368 168.892 335.478 168.928 335.52 169.019 cv
335.882 169.76 335.913 170.326 335.609 170.614 cv
335.483 170.734 335.313 170.795 335.103 170.795 cv
cp
f
332.144 165.49 mo
330.65 166.672 li
330.545 166.756 330.393 166.738 330.31 166.633 cv
329.636 165.782 li
329.553 165.677 329.57 165.524 329.675 165.441 cv
331.168 164.259 li
331.273 164.176 331.426 164.193 331.509 164.298 cv
332.183 165.149 li
332.266 165.254 332.248 165.406 332.144 165.49 cv
cp
f
349.741 272.695 mo
335.824 276.559 li
334.711 276.872 333.598 275.945 333.651 274.705 cv
333.678 274.078 333.73 273.365 333.744 272.553 cv
333.811 270.215 334.576 267.018 332.76 263.271 cv
329.662 256.887 328.621 254.448 327.984 250.585 cv
337.11 250.585 li
337.813 256.986 337.441 268.19 347.74 270.586 cv
348.323 270.728 348.959 270.842 349.622 270.913 cv
350.563 271.013 350.655 272.438 349.741 272.695 cv
cp
.929412 .533333 .427451 rgb
f
308.607 276.53 mo
308.566 276.772 308.404 276.972 308.188 277.043 cv
308.12 277.071 308.053 277.086 307.972 277.086 cv
294.29 277.086 li
292.424 277.086 291.261 274.891 292.302 273.251 cv
292.464 272.994 292.626 272.738 292.789 272.467 cv
294.168 270.101 295.251 267.066 295.306 263.341 cv
295.393 257.377 296.463 251.82 296.915 250.585 cv
306.78 250.585 li
304.585 260.165 295.79 269.345 306.188 274.848 cv
306.796 275.176 307.458 275.489 308.201 275.788 cv
308.27 275.817 308.323 275.846 308.364 275.889 cv
308.418 275.931 308.458 275.988 308.499 276.031 cv
308.594 276.174 308.634 276.358 308.607 276.53 cv
cp
f
349.741 272.695 mo
335.824 276.559 li
334.711 276.872 333.598 275.945 333.651 274.705 cv
333.678 274.078 333.73 273.365 333.744 272.553 cv
341.723 273.891 344.559 273.095 347.74 270.586 cv
348.323 270.728 348.959 270.842 349.622 270.913 cv
350.563 271.013 350.655 272.438 349.741 272.695 cv
cp
.282353 0 0 rgb
f
308.607 276.53 mo
308.566 276.772 308.404 276.972 308.188 277.043 cv
308.12 277.071 308.053 277.086 307.972 277.086 cv
294.29 277.086 li
292.424 277.086 291.261 274.891 292.302 273.251 cv
292.464 272.994 292.626 272.738 292.789 272.467 cv
296.102 276.358 302.753 276.073 306.188 274.848 cv
306.796 275.176 307.458 275.489 308.201 275.788 cv
308.27 275.817 308.323 275.846 308.364 275.889 cv
308.418 275.931 308.458 275.988 308.499 276.031 cv
308.594 276.174 308.634 276.358 308.607 276.53 cv
cp
f
304.952 186.562 mo
304.948 186.562 304.944 186.562 304.939 186.561 cv
302.959 186.419 301.083 185.698 299.518 184.477 cv
299.439 184.415 299.426 184.301 299.486 184.222 cv
299.549 184.144 299.66 184.13 299.741 184.19 cv
301.25 185.368 303.057 186.063 304.965 186.2 cv
305.065 186.207 305.141 186.293 305.134 186.393 cv
305.127 186.488 305.047 186.562 304.952 186.562 cv
cp
.290196 .215686 .592157 rgb
f
299.288 185.175 mo
300.849 186.255 302.641 186.956 304.521 187.222 cv
305.354 189.203 304.435 191.485 302.462 192.337 cv
300.489 193.188 298.199 192.292 297.328 190.328 cv
296.458 188.363 297.332 186.064 299.288 185.175 cv
cp
.282353 0 0 rgb
f
300.738 193.763 mo
299.421 193.763 298.158 193.221 297.244 192.236 cv
297.176 192.163 297.181 192.049 297.254 191.98 cv
297.327 191.912 297.442 191.915 297.51 191.99 cv
298.534 193.091 300.031 193.595 301.51 193.333 cv
301.604 193.313 301.7 193.382 301.719 193.48 cv
301.736 193.579 301.671 193.673 301.571 193.69 cv
301.293 193.739 301.014 193.763 300.738 193.763 cv
cp
.290196 .215686 .592157 rgb
f
295.461 203.851 mo
292.902 200.357 293.459 195.484 296.739 192.658 cv
297.887 193.984 299.627 194.639 301.364 194.399 cv
301.974 196.442 301.676 198.649 300.546 200.458 cv
299.417 202.267 297.564 203.502 295.461 203.851 cv
cp
.282353 0 0 rgb
f
316.98 249.55 mo
316.921 249.55 316.862 249.521 316.827 249.468 cv
313.685 244.587 314.264 238.222 318.237 233.989 cv
322.21 229.756 328.529 228.775 333.595 231.604 cv
333.683 231.652 333.714 231.763 333.665 231.851 cv
333.616 231.938 333.504 231.971 333.419 231.921 cv
328.494 229.174 322.361 230.125 318.501 234.236 cv
314.642 238.349 314.079 244.531 317.133 249.271 cv
317.187 249.354 317.163 249.468 317.078 249.521 cv
317.048 249.541 317.014 249.55 316.98 249.55 cv
cp
.929412 .533333 .427451 rgb
f
302.424 240.95 mo
301.318 240.95 300.197 240.823 299.076 240.56 cv
298.979 240.537 298.917 240.439 298.94 240.342 cv
298.964 240.245 299.064 240.184 299.158 240.207 cv
306.561 241.943 313.958 237.576 316.018 230.268 cv
318.077 222.957 314.041 215.367 306.83 212.987 cv
306.734 212.956 306.683 212.854 306.714 212.759 cv
306.745 212.664 306.85 212.613 306.942 212.644 cv
314.34 215.084 318.479 222.868 316.365 230.365 cv
314.565 236.753 308.784 240.95 302.424 240.95 cv
cp
f
324.377 212.261 mo
321.286 212.261 318.234 211.115 315.899 208.948 cv
312.088 205.409 310.883 199.812 312.9 195.021 cv
314.633 190.902 318.464 188.021 322.897 187.499 cv
322.994 187.482 323.086 187.558 323.099 187.657 cv
323.11 187.757 323.039 187.847 322.94 187.858 cv
318.637 188.365 314.917 191.162 313.234 195.16 cv
311.274 199.813 312.445 205.246 316.146 208.683 cv
319.557 211.847 324.544 212.769 328.854 211.034 cv
328.949 210.995 329.053 211.041 329.091 211.134 cv
329.128 211.228 329.083 211.333 328.991 211.37 cv
327.501 211.97 325.935 212.261 324.377 212.261 cv
cp
f
313.298 182.305 mo
309.914 182.305 306.746 180.334 305.31 177.066 cv
305.269 176.976 305.311 176.868 305.401 176.828 cv
305.495 176.785 305.601 176.829 305.641 176.921 cv
307.395 180.906 311.831 182.878 315.965 181.509 cv
316.773 181.24 317.529 180.855 318.213 180.365 cv
318.295 180.309 318.408 180.324 318.467 180.407 cv
318.524 180.489 318.506 180.603 318.426 180.66 cv
317.712 181.171 316.922 181.572 316.078 181.853 cv
315.156 182.159 314.22 182.305 313.298 182.305 cv
cp
f
318.902 159.3 mo
318.858 159.3 318.814 159.298 318.773 159.296 cv
318.673 159.29 318.597 159.205 318.603 159.105 cv
318.608 159.005 318.691 158.921 318.794 158.934 cv
319.065 158.95 319.411 158.906 319.815 158.806 cv
319.903 158.783 319.969 158.711 319.981 158.621 cv
319.995 158.532 319.954 158.444 319.877 158.397 cv
319.164 157.971 318.696 157.523 318.482 157.07 cv
318.439 156.979 318.479 156.871 318.57 156.828 cv
318.656 156.787 318.768 156.824 318.811 156.916 cv
318.99 157.298 319.424 157.703 320.063 158.088 cv
320.268 158.21 320.375 158.44 320.341 158.676 cv
320.306 158.91 320.134 159.1 319.903 159.156 cv
319.521 159.251 319.186 159.3 318.902 159.3 cv
cp
.282353 0 0 rgb
f
320.307 192.481 mo
320.293 192.481 320.277 192.479 320.263 192.476 cv
318.144 191.944 315.335 191.742 312.937 191.944 cv
312.932 191.944 312.926 191.944 312.921 191.944 cv
312.828 191.944 312.749 191.873 312.74 191.779 cv
312.733 191.679 312.807 191.592 312.905 191.583 cv
315.347 191.38 318.199 191.585 320.351 192.124 cv
320.448 192.148 320.507 192.247 320.482 192.344 cv
320.463 192.427 320.388 192.481 320.307 192.481 cv
cp
f
324.129 198.026 mo
324.104 198.026 324.078 198.021 324.055 198.01 cv
319.408 195.893 313.428 195.888 309.385 196.591 cv
309.271 196.607 309.192 196.541 309.176 196.443 cv
309.158 196.346 309.224 196.251 309.322 196.234 cv
313.421 195.523 319.483 195.529 324.204 197.681 cv
324.295 197.722 324.336 197.829 324.294 197.92 cv
324.264 197.986 324.198 198.026 324.129 198.026 cv
cp
f
327.691 178.264 mo
319.513 178.264 li
319.412 178.264 319.331 178.183 319.331 178.083 cv
319.331 177.983 319.412 177.901 319.513 177.901 cv
327.691 177.901 li
327.792 177.901 327.872 177.983 327.872 178.083 cv
327.872 178.183 327.792 178.264 327.691 178.264 cv
cp
f
325.549 185.11 mo
325.508 185.11 325.467 185.097 325.434 185.068 cv
322.973 183.031 317.879 178.264 317.826 178.216 cv
317.755 178.146 317.75 178.032 317.819 177.959 cv
317.888 177.886 318.004 177.883 318.074 177.95 cv
318.127 177.999 323.213 182.76 325.665 184.79 cv
325.742 184.854 325.753 184.968 325.689 185.045 cv
325.652 185.088 325.602 185.11 325.549 185.11 cv
cp
1 1 1 rgb
f
336.111 250.767 mo
293.224 250.767 li
293.123 250.767 293.042 250.685 293.042 250.585 cv
293.042 250.485 293.123 250.404 293.224 250.404 cv
336.111 250.404 li
336.212 250.404 336.293 250.485 336.293 250.585 cv
336.293 250.685 336.212 250.767 336.111 250.767 cv
cp
.282353 0 0 rgb
f
328.124 176.932 mo
328.079 176.932 328.035 176.916 328 176.883 cv
324.201 173.289 li
324.129 173.22 324.125 173.105 324.194 173.032 cv
324.266 172.96 324.379 172.957 324.451 173.025 cv
328.249 176.619 li
328.321 176.688 328.325 176.803 328.256 176.875 cv
328.221 176.913 328.173 176.932 328.124 176.932 cv
cp
1 1 1 rgb
f
315.442 156.249 mo
315.391 156.249 315.338 156.226 315.303 156.183 cv
314.903 155.697 li
314.84 155.619 314.851 155.506 314.929 155.441 cv
315.005 155.379 315.12 155.391 315.184 155.467 cv
315.507 155.86 li
315.75 155.796 316.326 155.684 316.96 155.84 cv
317.058 155.864 317.117 155.962 317.094 156.06 cv
317.07 156.156 316.975 156.221 316.875 156.192 cv
316.162 156.018 315.509 156.237 315.502 156.239 cv
315.482 156.245 315.463 156.249 315.442 156.249 cv
cp
.282353 0 0 rgb
f
314.951 156.477 mo
314.923 156.477 314.895 156.471 314.868 156.456 cv
314.52 156.273 li
314.431 156.227 314.396 156.117 314.443 156.028 cv
314.49 155.94 314.598 155.906 314.687 155.952 cv
315.035 156.135 li
315.124 156.182 315.158 156.291 315.111 156.38 cv
315.079 156.441 315.017 156.477 314.951 156.477 cv
cp
f
366.485 265.474 mo
366.454 265.474 366.423 265.466 366.395 265.45 cv
364.56 264.389 363.804 262.119 364.635 260.172 cv
364.675 260.079 364.786 260.038 364.873 260.076 cv
364.965 260.115 365.007 260.221 364.969 260.313 cv
364.209 262.093 364.899 264.166 366.576 265.136 cv
366.662 265.186 366.691 265.297 366.643 265.383 cv
366.608 265.441 366.548 265.474 366.485 265.474 cv
cp
.827451 .188235 .396078 rgb
f
386.162 266.634 mo
386.087 266.634 386.016 266.587 385.99 266.513 cv
385.958 266.418 386.008 266.314 386.103 266.281 cv
386.931 265.994 387.656 265.479 388.205 264.792 cv
388.266 264.715 388.379 264.701 388.459 264.764 cv
388.537 264.826 388.55 264.94 388.487 265.019 cv
387.897 265.759 387.114 266.313 386.222 266.624 cv
386.201 266.631 386.182 266.634 386.162 266.634 cv
cp
f
388.868 251.581 mo
388.843 251.581 388.817 251.576 388.794 251.564 cv
388.703 251.523 388.662 251.416 388.703 251.325 cv
389.005 250.663 389.641 250.201 390.362 250.12 cv
390.368 250.119 390.375 250.119 390.382 250.119 cv
390.473 250.119 390.552 250.187 390.562 250.279 cv
390.573 250.379 390.502 250.469 390.401 250.479 cv
389.806 250.548 389.282 250.929 389.034 251.475 cv
389.003 251.541 388.938 251.581 388.868 251.581 cv
cp
.929412 .533333 .427451 rgb
f
394.511 252.474 mo
394.559 252.784 394.426 253.062 394.215 253.095 cv
394.004 253.127 393.794 252.901 393.746 252.591 cv
393.698 252.28 393.831 252.003 394.042 251.97 cv
394.253 251.938 394.463 252.163 394.511 252.474 cv
cp
.827451 .188235 .396078 rgb
f
396.707 255.986 mo
396.694 255.986 396.682 255.984 396.668 255.981 cv
395.335 255.688 li
395.237 255.667 395.177 255.569 395.198 255.472 cv
395.22 255.374 395.312 255.313 395.415 255.334 cv
396.747 255.628 li
396.845 255.649 396.905 255.746 396.884 255.844 cv
396.866 255.929 396.791 255.986 396.707 255.986 cv
cp
.929412 .533333 .427451 rgb
f
370.398 267.611 mo
370.368 267.611 370.339 267.604 370.311 267.589 cv
370.223 267.541 370.191 267.431 370.239 267.343 cv
372.059 264.053 375.198 261.659 378.854 260.775 cv
382.511 259.896 386.396 260.589 389.516 262.685 cv
389.599 262.741 389.622 262.854 389.565 262.937 cv
389.511 263.019 389.396 263.041 389.314 262.986 cv
386.276 260.945 382.494 260.27 378.939 261.129 cv
375.382 261.987 372.326 264.316 370.557 267.519 cv
370.524 267.577 370.462 267.611 370.398 267.611 cv
cp
f
364.675 266.95 mo
363.646 266.95 362.609 266.697 361.666 266.179 cv
361.578 266.131 361.547 266.021 361.596 265.934 cv
361.644 265.845 361.753 265.813 361.842 265.861 cv
364.017 267.059 366.731 266.755 368.59 265.104 cv
370.449 263.453 371.072 260.796 370.138 258.49 cv
370.101 258.397 370.145 258.292 370.238 258.255 cv
370.331 258.217 370.435 258.262 370.475 258.354 cv
371.464 260.802 370.805 263.623 368.831 265.375 cv
367.661 266.414 366.175 266.95 364.675 266.95 cv
cp
f
392.364 261.808 mo
392.013 261.808 391.479 261.563 390.751 261.069 cv
389.837 260.447 388.735 259.509 387.651 258.425 cv
386.566 257.341 385.627 256.238 385.005 255.322 cv
384.308 254.293 384.106 253.653 384.393 253.367 cv
384.645 253.115 385.162 253.238 385.98 253.74 cv
386.065 253.793 386.093 253.904 386.04 253.99 cv
385.987 254.075 385.874 254.103 385.791 254.049 cv
384.992 253.56 384.693 253.576 384.649 253.623 cv
384.431 253.842 385.382 255.645 387.907 258.168 cv
388.975 259.236 390.058 260.16 390.955 260.769 cv
392 261.479 392.397 261.479 392.45 261.425 cv
392.511 261.365 392.503 260.943 391.717 259.814 cv
391.66 259.731 391.68 259.619 391.763 259.562 cv
391.842 259.504 391.956 259.524 392.015 259.607 cv
393.151 261.241 392.816 261.572 392.706 261.682 cv
392.623 261.766 392.509 261.808 392.364 261.808 cv
cp
.827451 .188235 .396078 rgb
f
384 252.826 mo
383.942 252.826 383.886 252.799 383.85 252.747 cv
350.73 204.431 li
350.674 204.348 350.694 204.235 350.778 204.179 cv
350.858 204.123 350.972 204.144 351.03 204.226 cv
384.15 252.542 li
384.207 252.625 384.186 252.737 384.102 252.794 cv
384.07 252.815 384.035 252.826 384 252.826 cv
cp
f
351.386 202.645 mo
351.116 202.645 350.74 202.609 350.216 202.524 cv
349.198 202.357 347.877 202.038 346.496 201.622 cv
345.608 201.355 341.189 199.982 341.432 199.174 cv
341.516 198.908 341.915 198.844 342.811 198.955 cv
342.91 198.967 342.98 199.058 342.968 199.157 cv
342.955 199.256 342.885 199.324 342.766 199.314 cv
342.168 199.24 341.915 199.267 341.815 199.292 cv
342.093 199.612 343.828 200.441 346.601 201.275 cv
349.368 202.107 351.272 202.372 351.685 202.26 cv
351.604 202.173 351.349 201.965 350.559 201.602 cv
350.467 201.56 350.427 201.452 350.47 201.361 cv
350.511 201.271 350.622 201.23 350.709 201.271 cv
352.014 201.871 352.135 202.155 352.069 202.373 cv
352.025 202.52 351.894 202.645 351.386 202.645 cv
cp
f
376.255 267.467 mo
376.238 267.467 376.22 267.464 376.201 267.459 cv
376.106 267.429 376.053 267.328 376.082 267.232 cv
376.721 265.158 376.429 262.911 375.282 261.069 cv
375.229 260.984 375.256 260.872 375.34 260.819 cv
375.427 260.767 375.537 260.794 375.591 260.878 cv
376.793 262.81 377.099 265.164 376.428 267.338 cv
376.403 267.416 376.333 267.467 376.255 267.467 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 24.1.3%%For: (Elena Pimonova) ()%%Title: (2010.i518.006.F.m005.c7.woman daily routine.eps)%%CreationDate: 27.10.2020 11:11%%Canvassize: 16383%AI9_DataStream%Gb"-6qa)5^ncjDHJ9S4@&.$*ole3Oa0"I'/+<_oMjD'VS#D7kMAiB8$H1k0DQ+Gd0f?)7^cCWog2Hfp`=tQ"3V,F:m1c`+r3Bc59%*UbY(rj>R"hH#T@Q-@p==*AD#nnIDiZZej+PtpB3W-R1Uluj;l?>mC'mW<d`Q/s+\j2u[rT73b@hDa3Vc>SuEG.hlT2S$>4^H?DA%Ru]YeUO']7C'cTmKcb`lUM&e1Hj8rPX<%tZea3%0%9,%sSp^3AWVedYq9S\g=3^\EYMZJV>FjeM1K8C7eOdGYc',`s<7O;]V*EH$%@qDLI=$LQrjb8sc.Jh\hWDF&1Q&QFW4atK"CD9"(`':7!aU00j1RI*NK48IXiNoQJMW*0'DQ_n48q(tU`E;t:`U`6sohV?FT\f"s%d7Lt,Dt5SbT@>FjC\ZfHF"Bnik>J9<($.b.3*45-<.5jHBCj_Uo='Frdq4$;fp,uMm.Rnl^XMu1OAp=b#l<hnh<_j9DY8iU%T!_*%YBP/ZD0eqHm,N8[LTo8Qr`9H>Y'9W0IH%b3q\0`OW+>]C?CW(=eUKEl=K/r@j.ptu]!KX59RWk-eG4t4)0Js0W*>RdQg-EDaP\)A%@WZ=s@_J]DFl\g7)Mq0t[uG9@^NI1#S*%IJl*ba?/Eg([PCL+8[B0!ZjF="oeDl"mGoW<EW\;Q]-!!cUlWa#$8&r6bSKe]Z8)KVg%LQ@;*gRWcgXn^,Td,V#OdX(olj[Fqs[uO>KfF.[)qm+m=V4X?$4/XI,a*XA^l,DK(::%7^D"Kep)Sk1O`m-O>1/jV?W0I.W?1Li3%qWh&TCD4Oc,Fj4l$GT['#NOhTl/4j[n!7oCA[JAHMtbceXco/GRmr(r2Cn>C4iq(&s1eDER`-OG#*475M3><?9g0H%bGOKVM&i8h%GFC_E?^_@#f;%A5S*eK-hCd>brVFc^rOC^d0`EHW5#)V%=hTi*;&UD@.meT1_*^=#`Sc^(S'd=0s4oP99^I3pUXT&s-[O2:.gqSj%])"j"5E9nJm8i\3l&nM>Pe4p\0E^`_.^EM]cqLI6O3Dj6'%`sH8q+e>LU8gE@'3L$$.-j`bU2OB^"[H_g<H`A]mfPkA%^@-9^YrI%\u35ob3Mg#/Nnu4U"gmlm\MiZ8/_*5+XZYJA;`FbI,8N_h5/ic/,>0LiVu[l\]G@%D]I5]K@-RqWL9OR5WCK6`Q=:L'[Ioi@ko0]%2jcV43_=u'06X.9jtH*i)OC`5ioF.g:9O)9SN+(lbOp%j[GS*Y*4-W6D*M!6h8n1X?!@"tm"1Q?YRJ46gWJp^j"mV(BX^D;_?DI:%V.I)aX7mP<CTX/a[GFAHd;C#opAP+[joe<9s6&C(l*3^9U:f`rAt_M;X^b80.pJpRIT+b#Hn@troA$9qJ<olQP_Le#T@\cN*`TdP%]\e/]*O;amcHTXk5)K]iXVO&SVke:m3b^\QeFnkS]kHR!h^Xu`ofW2"g,M(TkBVMqVD:(gIEBr)[6erU.@?V]5Hi-*[<"?VI\p!V%b!6t#e)`6[mmY]TD#,>:d8.-A;>e0SiP23RQaQ^gRdnc;_*&Cc'7i;Da:lBQd?20W/NjC-M1ke\Lb4,@1D-,b![iRU`WYJQr/I^$%JpVFG=1$F76_.+VGNo\L7Z^u]Z0hR)2g]'+c]:0&*V5W?_V"L9BH[(,;ji,45AF5:O3MUNBWKt5M^4RIZ!h.X]/ftr`b6$QVEUi:%e9pC68'S6J1g#_J_&JU6pt33tZ,$qMh%0AQN';V6kVqdSA\IZn;c;9ppt_u*I_kI)r+;Mr;7SJ`RAUhKs,XVcUE`@lTe1VH&MPt>%(_)Yu1-/J"mbL+AG<Ab[["EA0Ej.LgD;&\_\b2FRJ"XKMAgHg?]ALZSR$T]MA"-+[6h:!M&U%BRlMgQ\Q+?GoA[omTR0dRO5KSop%ebhWDVM[jY$S%4Nb=tMXomV=*o#lF[S_+8+=q/i^hYeVThlX)qkj14RrUEWoqHlb[A,:J2["3+1kHs-B2>f@i/p=l"^Sct(T`.ig%`^-Z=gMJ!))-*)3--?q:ih-2\=<I%uo[ImLbHLSVmg`(=/ZSboJ%4^Gp%E*+(3o;"ElU#IV-%P*Ds5r*.<Tf;Cme&%5o_*.<jVgX%a`'+kb,'%VBDZr/3PMH6jo2YLNPjoHFo%Djr/6=0:\Huc[.i/jf2d<th7O6X?TF;L9bVs6f5"0)'`AP`0tPsrmI`P2s&hqen)M<>%?6+>*eiXQcf4E!Pqn1isXFEoBrr4ZFH[EO+K3.+5n20@:>E/Z+=\LYSU>>7VS_WK%8W^&3p\Jo*Gb%\qqojOj,&>n2cbF5G0BqUb%ZaG:%*U-Fcr6KNmB@9k'l*o5]s55q$M?X$d*J1W:'cm/&[3WtG\g-\]\Y:<5Y1&LTs+mMCA_^>L[+f9"Dp3]YXeuou5M_!fB"u&Q%Wm@;S8,/;8R+RD,L?l'BWA'DZQhu]AWN5BBk=2d^W?:k=Q$U&BmhOr;Q^?FNk3`iip?b-bc7EKn/@j;I5HXZ]3fUOBUYa!#ZcBhQ%a1auF,"],Q\l(.`rqSFY/%kOk5E\o/3iDq"laU*^2uaUc:+K79CUup7_o:0HVsSYFZ.X#<HZ5D<G=Rt=$``Xf]:Hie0&!D"<68\O%Xu'Kl@D-pXYC8e79?L_g//LH>EYSd+qITZR^J6iG5"N!3l]K?c]_UUY`h.@B]k7#jAu5*7Z[2b+<pTh)06?0p"5S9a`aeF<p26kr%eD'ZV`i/;ZnjoP33iOqsfHL0ndV\EiTe&B9"trOuKrL$eHn&q)j8II'I^??53PhuPH2Z>IVqajl2t$![/rt3P>.'KYohIQCN,hnd%*C`U@T5/Q&h2t#\!sWN*ibE&p[,7jq@T'R^Dk:OR[$"4gb2I?<EC`2ifpC/L'Qr!l!I[>3hX0cRlJ5a?&j5\^.bi1DJlP9O(RJ,i%dG6Sf#aLVM$'DsR3]_,aaYjdKktDnYjTJqn+9,O5D&#4Ens);UKMR@a]pWrjCRSj_GZip<[9NSOfBd\.Pq-'8,#ESo\SJp%d$kDt%Ygr'T]9!@Xg#b3*m%_jT[sm*oWKS`Kr1LL+G)>e)?R-:T^/$,a_uuVlP;ia?S3e>5jId]"RTST*Dj-u%UdPG;UocR*4]?%@6#c:n%`NWd&gNG6:?S4"/:2QK0`ilHp"rCNZo'aO"gQ*.LnGDcBZZ16;6p.AGat)M8T[B293i,1ZPkA0?h!^A#)<7!gTZpiqWQ!oX:7in'%Dgh:YHL4I=<]ZHj(O!rHV4CXgFfMD&hpSLk/UcK-rOR&J>-3R0j)sV'?a16/I[pDAhV;t=*`WCsX.N#_3)?,1/f"R*'E-(h`15Q@%AXH3Xc/(`0?,\%6n<u.;3'=Hcg-6_mHhfIAn3j&#h/2SO*U_)JMb\cck<cNr2LfP"*,S#,=?JTXf":)rHX"P`PII@82:jq)&f&-N%eGBKa1P/%A"2\l_rmbi6R_RIuop<"MD3:htaIKS$YB9*F'gH'QULHri+)Dt[YJ7e-c-L`#h->7'A\CG=h*JMke6M89Ft<j6d1Jo&%Gs5Rs<nm"?5%j5(Z%,[.QKop(N3mWml@O<rl4I'If#W=9HUK)4g1H+`/jDfbqn.(\k!J/$f*Bg0$9WG-#L1D/oU5/::Zff<#L2:$%YDs2BD7P8\cg\qBqG9H[.eOj3M]Ol/O,Kj2<dE0SHKj<.5;lL.O3VJ$KLVV$gtWTQE$M1(rHde>dQ6O2.ODCVY0^sBkDuT(("--]%Sjp'7U=JV?;QmInr7DN.-M<Q9U5dBb*]u$Q[B%=uc!G2cGYja>=5HER4/E^:p'.X5odZl[LH($lQ/o`+"%3k_\uh1^EQ']4NPl[0%rV*KWG-WR-RSgNip#B?+",_CXCrGXWlY*ug4WN8[?.]8cb=`d^Qk5emQbKg-8fBs)PS^uk>T:3hIs%YK8n"^U]mNG;qU@Pi]Xh,H%&AZWX\s/oml0:k_P>$;Wgd/0]eV.?fpWI&H)jjtb)qqbI/)KCS/+R8^F,]p^Zga5":K*T-=D?$lA@tPGPi^KX'8;0^+F0TgNd%\U%[-6'1A'ciP)7_[!p.4[9-7M_(o!_Bgn4HGW7H927^WMkRga?U8>#Y]sib5:0*SRN"K+TgGRU(m>l[a35?GM]TdQ+JWH-YMV=]aj3%d<UJfI/-n,P)nHT(sEADI*LL@V5/RgXoGnUjo/apn`hJLe*8QfM64HlZ[5E$0+mI1Bmm57<9aNbkFA]8Eg=2$P4M1uB1Td?Ciha#%otEh"?)P(T1OHL>Ir&X&H$c*%3MSuJ4k!p"e`-k5,M*T9=5)(TUFM#h+t!(pPSm@</tFF9"*2N7A5pWTCR]?IGL'3n#OJATPu7eU%NrqbqAZQBA;?P,9RgY$m\XiDnd6"NVl(pJ$Xj\:!?0A`t$5C.[D3rq]0..Ri2GC5G<>9`%l]N:PC:0(DIpT#92<>k8`D&ZXBG^OA%i:L^G\DCupY$Oaj-HL_WdiV1dL.]S:pH6"5kd9*h`ioMcV_Ut"OEGENpjH\F3bm$]^@f^9GcUgZF.M1E+spENf"'EjSXP_$=I$>?%,%rHYiL+%fjW!*rXl\*`bc]=TG8G_APLXF@d:q6\[e-Emrr.>Z1;E?9gj*.sm+tt#g0:1Ods#+tX516VFilgpol+@"@6_+?YCHI5%gN\3on9F6?g<&fus'DhQHsN^PDquD:<i;RLO%j50mErrBKE(-e<V<TnE]'[(2nJe\HI75rDpsK`Qh8UKp13Dro*Mm=l2\TRLYJH8%cd7H:2u2d7YDq(Fpj._10'V`J"+8pd_QSH'/Dt;r^Fj+Ooa-&6*_5%1(UMA)Hh;%7*ko?0Rs]7_[Wn9*ha4%,=&1.R?YK:XqZWR?%[+sr[T#XoMW*QC9Rd8@V\WhSl]\Mk&a4E9F3qqk(rU851:oAep>uCnh?2hup$.L_CNs<?`?JbR$ms"Ma4#qPmo/[b=I!=[oZ)6+o%gsSjeF.8)k^\9&s5?bXpLt:%I*pq`bpoq&JoBG>Yo2GUU8]J]uA!9Uafu8g5JQc4,lY>P$LP=gTG5CLuhks4eF<<R<XL7M'cb9?I%4fZdZbo[q]T?YDdC_Hd=&7b4dm)?fQFnglFV-e._M)5n+T_%Ld#3fiRT2@Oc56"=G@4Num^4=Vapd2`s^)FB01UepKgj5(HO"Y84%PGS#g]NT]jqd=1'dJSY`H_tTUh`oGigcrIGBWC[leruqkmd&<[_X?fHhqto/8uskJFbBGtop32(4*C=HnYidDqY9L=eIC]52n#&W%pRX"]5$D;d++A^dn?\2,*ku[j`bFK-hrbNB4g3/fmrs2Ud.+Gr`N@l*O-a)J]D]!+J+W8[NHQ9Pr1dWm*\TZ]Gk(0?rqYEPnOF\L%2^>G-^U)X@]('G]\UD'ar;FPTNT@S%V7H*d_oh94lHQTUV=qg8?>A6:*Ui0<H[;sO=A<E=_^A-=nX%Scc"ilhXjcROm*[,dpLH#G%cHSOX^:CS;c.0g8p?"R(Q)40HqkHM.A,/4XnF+naR<5Sm1#FsjNpf11<irO;28liWj_FJ)ZTd)'*li$Xeu/''b_p]&X1&k]/`q$o%="4epm.;ZQRs7'OacbQ;gU[%E_qrUdL7dVDgXW:gpsc3qlGW(T(Y'I>G,ICcC$JILgT\Wn2]%W)e`d>+&(R(<>Fk&]kBC[kfpC_l%e_AiN\#XQl++:3@G33D:oD>Y:e`:E8AMrlNAlVY!DcHDo)csFGGFqmkm>9.hT76$*Z\RkX)BPBGeV,s4cdb)dKQ^>`9tg5MqtH_"%<$,r6gTNe':1pV#$b'0:b9&(F<$+hWDc@fsIXbIJ3dL;$]"2l:;11WP\l`7=:O]:WGVD3Xh4/MdeX&@UXm4L&\uED8hS#n+T7.`_%^?aR'<;kq%]`WT(a*2HLp%-B#a6M:.p3(Rkqpe_ipYErNlJCt-[H^&UhQItq,u:R3$h(i33ubRTeaJL,hlH_1lKNP9[=1/#EO)r8%5.*4%2*QHXm`kOnnq1J#XuH0!4B\lF);"-LdFdNirO2334F;'hHMl(*n]11s2sY\.+*QOk+(%3V[5IsYo5c_%qJ!?#^@q*]`q[RA%\f$"JIX+'TVSE(Ur-^p)HsCKKO+5i_IMq$'U,VPs=]OLa2cRW@`6"qIPKdp/hU917`_DD1F`0rIR0Ns11Td4W'6@CGksVQ/B+oG\%cVA"@p"mXCYBT[e*kqLEbJ_P]B,_L[\!"cFCMsaP9l,9+BdR/9]/M\=IU_I%`2@Q05#L4=G:/jV>=T@aeFRTgP7u!?Q4G<g;iCN3%`]"t*h7.`WH2knNk9gKnOuq")h6>Eg7lS<*0Ag^'Ist;/Z+Q7V]^\rScJ;TpI;<c6]%suBj)&Ylac2AQgRC.e$POV"m&`K:\8h;O%GC&;Fs.hPU]lSL<CiXR]h2A\_g!cE4-drn)j%7j0S=R=i@d<sR;R3bhq;gJq_;tIaHS^ji^@lO:rHS@ujQH6qpW;60/N<LmbLb"\%PJ+u`<->ZfVJ[IC^7;2t*M#kA5CR6[@5Ij9orth`4Z5=n`,.`2>(:a@4S=$cp:[G4?9[&1W[BAS[GS>5VN+a7etu4*B&;C7lFib#%3S0dNGLLAXWnk>Zo$5:F9@#]^k3Bt;m`j";pE/1<gR:=:q>'YjrT9\u5C<!8D=u)sro(a",l_c=^K6u/m=fc50"?W"Hf)..oV9HN%hG(2;<1JDc]JVSFnRK6e^&./,D7[EF\EX"@oC86<9?kK#r:94:N*ff$5P*fSY;Z"5qatd=ZZ`i?oBt<&gR579lLUFprR^\-RIBOe%hO7^F5's=gojQjGqm>qmeq9m_nCCNdUNu1e<2Y32IAco:ekWjVn^_.7dt_0+cBf'J1Gep#Al[FX14/3Kps/6Kf48gn`U/ram+_2W%h:_XLDfYR+H<-O&O2(6qPIII)9J#"#O&o]D^,ssBE;NN$EU3<fUGm2irMNA<]CAlc\p^r,pi^QQq"<V$guSFe3PR8W34J\BqqJ[E%mCgg#[f*/f^4(IA5'L+UFYJ$Ns%?7Z?2Cd3F&P0fg;AOVH;!Z$p@R+np=e=A[JKJR:M]?1a6i]mBDV&ogoFL<o@`PbSR4R/qK[O"%Ts*X/H1UCo4>ES$s1\;S-^gQ4]US+D'8O[3>CW/*lYfNDg\WL>PF\&o-HGc8FE2MMD/:t%?d-`lpU4ZDda`ZLT"aH6Q0tHkSb2^A%k-g`VhHEnDhT]2G^[nD+ShGSBYMS*84]/i9/[)ml:#+5S.pL'JR@17)fm\@E2uV/\r@-NHW5#J%B4h)/7PZl9k53?.k2'B.AY-T-%*B3G)h<:?jq\q]Idl2Srp@),?L:;We5$;3`Zu>(cAo(sp5I'*aht$3dXec7T9><Z5O-f"<h!8$G?eeD']'[4epJ_(B8)nuafmQQ[%fosb.htc[:lHo!C41BTU(Mh4j`nTkJe#+SHoAq9^rGqq`MlcULiO:MGnPBD>I(gJaVRB:;b=;e]_q4#[Rd\qcgC(Jomp@[u4<C\h%b^/bhiI1=UA>/\mhTFL3SK#o0SNCHZal>H5.lVg!?E\`[]<hD.g!)VWHLgcI1-K(75$\*<]"<77=M7qb50hs^^A#h&HZK_S0AjBk%CNnptMu#a"hO!UKcgRDeZhj[g-dTF!n#br(])UdcXk!;UIT`Sr^OOZmR<gPG[s[u/rep3B#9,%+Rh+eFDm):eT%(Zqq2Hcn%i;pn%q/C+qZMJP7kjW,fqYAV!U98uZ/O%m:^VBPes6\\&\"!&CV42Z>^Fb/+VajD+:Qk.okG9O>9./Q8m+CB>mDUZj]VsEL05pO\c^+<K%SntUcG^$a2i\t39<h=0XC+Gq5*\=IaHsPWU1d?,tok5ed2=p%Va6MZZeub_AO)Mc2epDdWrZF=Pd6)gJG\<f/HW".:\bF%fAY5Tr%cFfgZ4S^he=F]miG,G-n$."s1Y&&7lT>!C3FT:UQXnMbZmFT\QY:e,EHs;$jTs;9,/Ni8]RlOJ%T&"<[bWad-IIQLS_05GLoBD5F%^$#-=q7QZrp=OrWAZNR(STWhnh><q4`[9<GDD'dL44sQ%D1*b5DQhr9/M40@Ia_3\hj3\0?d/BFK,9I6d>&NVmDOo!7s@2#Ct.#X%hq;--S>_DXj/9@F^-=Zk\Z$)(':Z$55+ZY@l$r-9XFAkbI@37dN5+-Re!":*0DB)7bcC"(c/dCWrQW+2cK64]3dU>Yg"(OllHRnD%q,]X^T/U@W?<>03cG%S15IgT:F('CTomVC/kKU-Kp;EGs&'l'Kr3H"bjdY](4,;Sao=]6mrS[\Op>4;oDf99S[`mCbgVs-)2fF2f%-HG"ep[17lkFR/!p24A`qTc_O_tD%Hfrm@4qisrqG2@`FTX%q)p"%tQ$O:GXIX-?gU%?ITURAM#l!Ei0LZa!`o7u/J481tbghTkR%/l/p)q=nsmjSl(BVqTYQjJP'm(3VmTH+C?VWUm^g5F]6Rpq0K&Aaa]`hg4mjp?'Vp0<<R$s3c.90`-"4XIalH5#)X'If@]4e8MGV%I&oPW\G`l8bJVT,qW[;-bFL_u2E,igGIKMT]!lih26n%smBOdQ<\OEukWE4Sn%.9Nhf`?bP4%bcp4o'5H'[+Fk.P,fRdK2uYP.V;%mu>#?\*m)d%eh%0IBE/,rl3O=Qi4g.Vg>"C*oB!1S3P^kBHME0/b<uE:@%#2Kb(<G(MfgpIWM!<eSeY6B90ctm'#8-$rcQL_sN^X%J(XXA;K(H@oJ13s5>@V;j6r#r+$I9KF`d7Y4aqR%F#r)=IWRCEGheZ^mWEFE>/0[qWIES^fXZM+6mWcc-_"=I^7KFYX3\d4^LppB%g[B&^lf6g$Xu3g%CS/&I?Z,Ze]p[!UnGh@kh1X).YHG+)i2,VV^#hNA6Q.j*/?W%)S)+#eI8L.cVCLahGb)I;?>R*[Rb4C%NfaP&%6H>XJ!uMLR@6a2P3'.(cVu<V^mCVG4J(VLI*`Oi5/A`6Fp2E*sD],G=j_2ec<AnET^!kEPUWooS;k',T99l@E\b5I(;>C'U&$-33%mYsm;iOHZL02+kT2d4n&So-s&fiHeoH,XLsq3IIfSXnI@Z4PNHpFidUTigcfF[@!CI]Rabjb[b?_s?^`jd!YK<:=2a`blG;5g9f%%8%>9,\XQX!,?M:W5&<<l;g>-iX.ONXE%kE4pkfRYY$mhQB"6or&UQZ[.(t@.$smtB+3^,gS]_klKuF7u\Uo*]@f*?EnN2g2]mdR/%I3MGIaR-9a7Hmoji/N+Ud?EB2P&fsMCH(55dSir+PXrH]i-DDMEmfrd/q,7l`0Wq</Fg\>Aq-$q"]Y89@B"8iagic).+H,u:T[om%\mA7<T-*f4dQ/i1*PD<52G2YndSU>A`"D2"<d&pk<k>D?1&g@a*fhD0f7UDJBT*Mgi^-_p8uh1G+jZF=N>+H1em+)<4>.Lh]Bh:O%Ejo&8$*9[75B3N1A&[Et2i@h*mBl^[oh,hj:j?Xfc??YPX^TX`?D>8kq0i$:?U>Hk/G+f?A3c,rn`Q5+maaGT(:'eI89e"J4VH9M%SaPrElFc^eP[Yr9>h:te^i/&4?-75nbcdl'WUidU)YJ80YNs>O^L#d;?K7i0g#8opBcQk"j'=.`0:ab%gcl^TG5^K:3lH'*[/FP8%kciW#7Ms!R;AQ*T8DA,%_f@1<`e.uE8PrsdI]Hi"QODSu\1!2P/=OHXkPSr[>jeL9NU1!6bJZiBR'k)n;<Jb]Q;XhiohldpmM&u4%k:['/%nP&Q\TSArm[(M,<S>e-Eph%2QTg":eo3FJ;0]=(?!Xm#Zne/Fg:pBtSWhnVdZ"Y$SmGZP<79XRgs)\h:6-?DfQW,iE4N^3%3%>6uoK8#PbG1Z^lWlD_\7cnCj-RJ6NtZ7JrJ34VHFZE>rbgif`fjJ^3`J:<YAS2V;WWk0;[Y'HBQ&?^DMe3^X4hjB,aEqLGc<3'%WEl(o_<%+5p[]l2N_#cqCohP^?BS?^9A(^o2/n7/YM@uS^XbL&l1H\Ic4_)>_,-`haA$U.);4_TPo79hEHAmTj7l7T2$P*(Q^2Eb%%<`Dq[*T;Tb?sd';KIjOoeWN6Fh=EO2A``X[[HO+4F*m.rR&2/)P#XW8U%@:Cu*Ft<N<3GHGTg^m@`!J?FC>?=nn]?cS[nVIJ;il%)"j..f4!OG_#4O-&!5#JH&98TZEJ8inc\V_Pg"3iGLZalhDSV+ORHH5a$!]'Bs3s%;kL]#?d'TC)$"]lRC.@ET,YpR=%\F8#FNSu%s%0]6$gk<!5MhD!U6e<Fa?saqQ;coC&;S5qnb3rJPO.K4kc<dDX5A'_X<h89?Z%iG)7$H,k$)Jr`N_8G,9Kk:q`nUTX!hcJMZp]#%1H*Kh/*T`=m<FSBHi)tO\TkHl;H]qhfe6<*`[jEir&=FB:]nIk,o%]RHhSJmI.9T;o@4JUJjmD!V3Ob<I7UG`-?*;f?sVnO'%8@L%/2H*o5-\6;.K$?:OUjB6+Fa?(/AM'jNB_^f'^pU/TB+V;$i2n&8QKa]/C6*Clc8niEf)C*aJ6=h:d8YH/3KbkCcAu&A6bl1Y`XWp%l<@@m4`3R*]KE=6I[1qO<f__V\[+Bg]$b)licQ(,QsNlc7Z:4iKpRoqlaKouH%mJ4$9gUkZT_9!;<Vt%Ol]@4\Cl:!'B?I/Yb8/R%-[BO,8(W)TnoIcg%Em1]?M'[5lsK41V?<SZI@#+"7Q$K0K8^Lo44s@6g"c=OjN[Pa89aIAas?d37S&$3JSDBpN6KbqHFJ@Q49*oq%'K`-U#n*t@RUhF(#r6Q_PsL:AQR!=Q3Kl;K-7t.Y1s;+Q@3&V4=b]e1RL(6cD+5V[eg.&Al!Ugu`^m*5Z.>bhLpPr;QH'>kKP/O[%&uB@ib^-:IjLa!OQ6c*QF1UMuc!#DH?BaTrJ]='P6d6r))jEp:/Ie+"<Dt%9bGYG%<]"Q.(mCg!8ZaXgO,tVEC4Mr`MJ0"V\Wj+*%3_@LPQ&qLA3E@InJPka(GGm%AFJ>^`VNr-HYXF/#:_SX_.SY#a'N*=jWa&DPPfSqrAMTLT@K_Nfdc"%Ek(RAML^MWLNF6Q+%`o#X%?u#jr'j-;,\u'1E*s.CD-ITH?XS#_-W$5je>8_`-,Kn!L@Ou[XM06q("7kN\Q]\oiAW.R3Y"8D0L'jTu.5a=7&mI4eSW)F%I@1]c%&[Y5f_09e7nlPq'ZpqAHAVptjeAoV*@R?=(UgeUtN\pMcDk.h"Q0FrsCFTmES[:Yd]N&ab=Pe(t]\Ku)$8C'[;q"m8%FKk`Q!rek%cN6[s+&lSOElo(5#m9?^.]a(hhRcli(<&mXZVVMr+\*IKS-_<S8u8W@l#9?#_XE[H#ZdZo)9WsPQ'_A,9Eh;Q-;gk/)kmdM$2(7p%Co@N.R8W](TV,#>Q"a16Udml87B_UrP\<FO;N[hF.@mtb\>B>LBiACcg6==0Hr51:^GAh#g/r[1e&/Pt`,he<)[UNZ0W;\gjKpA?%dZc4k1)#PfMqLubTerYQUD;1B9=\4-&Q>^/K]I3S^rj#5@<pn0noFbbW;tYb)%3sTm+pF$>9nG_=&$ml<'3EZ4%!5?@!MXC*K;]s%oLeC,:Pf/EU`h][Qe.Euc]g"7:(b<P,b1AD.M\n?OJ7Ab$Dd=*!\50he9$7.JBk'XQ#`LF/PD%[SL2&X!t62*b(Ga\/S(^e%.uYj%VA<hoXct<HCe^eH.]6R_<2_)\1n6j+"Z"TpLujUG.Os.8g,ns(ef0Qk_S$I;(P9k6RjFAI+)7c4H@V\qT*/k9U5TsZXAAD)7*LfL%jJ3a"-<k!Y@.62XU4b3I%*B.>Z=$>U%$8<Kb*Y#":f5X,dEW1*^!r'!-m-('X]GU`l0C-6X,q'TN"k)#@1$3!TH[YL-Hh,__ME:6%j"VqbnYX`44_:;9m/iIu(%mep4l!No+ZHe[9li?1Ml<ra81TkS8k%anC^@7/jUMt9L<7W=(MhulbUTGj778I/;.lgA#pssk\Y]EW%]rm%-2AJ+2XWH`[@(8ks8:rh*cc5'_"q4$@&eetPCcd:am3lC8"aM`O6pk[PObPP6m8'iYbG@a7BVW^-Q&nnY$S8`dW2\;;iVpe>%J&A`H]\=HJ;94@jU4l492T<CihICd4B2&Y($rk`D'\bdOnK305ZJEF\cI&-l=EH?[22Z*>ngD[QU[ne+['X1R';Xh,,R]$pC7_:W%A#'-XH$r"W$0?`ciX'Ms#qZ];P\I-Kd=Hk!7J'Za?`..sVh(\AiN\XD#p<?E]dE$k`'?JmFI7`H%u=0IJmc+/!=3OQ"jmXkN=Zbq%UD6/:k7Z3"(irM-\0cS'ib;'(M"3qm+LE$3he/UM!=MIG[<j!2$4cAW2r*^"dbsO2Q.U++'')YtgqO9Q#/njuDa5(#8'TL+P\B5o%^!Sr%Nb!-E.R22rYkCM_^j#P*N&#FS#ZB@Gp_&(%W"';p!DlZO!7JJq_P9l!V-UMfNo/tRN]E!QYmW!!+,^biA4-_?&g@t"8<m[9%;2USP6R+7&Z"\r%MJ.Te:X9p2KRd1n0c9N_XK+UB;*e/D8\7kH`B=+>`Cu.p"X,&*$3;F2#AH,1W(d2`%T$1-pA$&!E`jmRZqd1)%;T\Z,%pkV0Ao-V>Th._-J_64?QC=t@)Bb$l7@.Hk2CM)-oIP1>@c%NG>#6E'4:0OOA"1ro;dU9j*fhm,.Eas$*C%mm9^lp8VioLZ%bE"U.2r^.p>7Wp[?@HH)D!>2:'Lj"OiVs*_Xc^Yeo4o:rMpFi<`:V(t-[?d=cp^`;eZS0/MVkU`5/Ftadh\)NStq+i_nX66g]'1C%VWSW^!dL*81:Knec"Hi:JugfB4@D8&9-%"*pQAOI:VR:q+gU7YYtWat-iXd#"\HB;ct>M`cG,^KqKr?N!0>PClV!)9q+>]l=oV%!%r\Rbl)+kUfVSnY7Sctba!O?#S&-#2tc2%"D!$7C,]HRm8Q'\+m!4uS-r*R7BV#7fWFF.gdBH\J#hk!V/J"b4@d5A%Odaa*98dYj,%6+[oI_PZ7UF(q)=[,.?4NN(#pOfD'CH[9j88kIo6@;F%WnH`dkWbAe4>Y9;sWUEIX^&4=i:V[@r@=F4$eM(93V>;k.f=uj=iHt]5%!"[O9.\H`BjhR_cV\eQr(Z@`Gc1Ub8rYdZgJ&]XmK<g6mKM&AgcDBlub&em)2iaisdsEGi8a]8kah+GAFP+L24$W_Y34Y>o[]N$.%[F8A`(79<Is68pM1H(JAC7on.AWiL^iYIKK.VoHYlii=Drkj*!(X&:8mS/2N>]ah4VF5;=/IYW=V,W$7!4CHQUJFJ>><ut?Z7-=g%f)mV4f>k6/]Wb8Z4RM_r5/,*O9?no0oOF3&lB\Cf;'ti;bcLFEl"):E(04m.@R1G0`[2(t/dEFL&$H8cS4Gr%FgWdQdd%f]g="Wk%R`.d"R2'W/2P.Bj=dIKWY[?B<c"_@GZR*ZCFIMt*ett@@^'ZZOVhUXnX^u.V#[>TH0]mq_&jpN`39as8\4I\)&*UVPg*P5Ki_nbM%(g7ZfQ$0L!m4kB8*eW^NW-.`MUU(m+*Vau]kol8L#fuO'M$br<d9AnWcPZ=N<K+>]p(.luWm=iuAZVdVTjj#G_^B$8;I)tDX_D#Q%H5e$DBZ6g\V=t%B`kk:+fNN/D:383NW<]4SJZOSS9]`7DU4LO)7ScqVJji=pVEOuOkga7?_(9"NIP,*sF3)tq"8pWS=7^/9E[Z%c%_D]I?/HnW"b&Dm[/n;hZ3o^l=%hBUL+'>&;ZV.15!0Qku)KIXLW2e@pS#E$5-W;PY+@YAo+LV8MjVSS#Ja2V8L4f<;%MbSF"D:O&%(8<lc>N"n)_l"KjEJ:Ql$F22&ek/(V@0Z',HeNb4_UK7u+(.&DVs.b4$!UITX#;qka9Foi*88:JP)hsC\/F4p&5jgni=ua%)KAMC%0PO(7VTC#g9mAUaM:tMecX'?-4u3E;#%A9JJj;F=\8t'Ndat#'b@:WJ`^/l=0G<^jAko?\9<j4bRSoMpV.#F@*)RArPY0'f0Zcpm%HBMs9['umc#=r[Ko%3r[nSM*_`ruV>IMehOTAW6aa$;5s_aK^5(LQ2n/rrFdL>0Z*(4^SM>i+HgBL'Nmj=a8Pb.R0uP!);t#ia[(%@j%[n=SXfa<4"5%K+8]"4ud=(%#uhEcJ5@AcR1p+(*?rL/MdGQdR?Sn#M<2db=OFA);(M=:BWk8#UY<!$>2O)U.8`SZ8Jc`"bqTJ%Gt;+fP)tW%#=c"P#J,TXFBBS'?mQ!s?oc1k9_S91W&e=pLb,/S*buR^7R`*sr(-,!qAn!R*=d&\i`(j5:uPEO#M<2t/#5o(g%2H-%g&JZZe-ZFtqL<tD,sUZ?<MU"7k+CU+SWZ=>TOD0EUKSA%s1)/0gYJlZ@NRtL8WnT^)eb[:'sX`3ooSmH8-d_G<%`LoLn^$rdeA;^%2@;aoO`Wr'L.edp)3a=pm;5C,1hFXO[-8%d:ING,&RC;q%Kk$\/5`r'a,9"]a0:7CLW^![=^^_k8SAX\RRh%5)9?Pl#<Oo2TF_pu%!Cf.7Q[4*7A\T:20c>.\_N(%n1_C<Q(d2&Y.-647MF`,c1nh]ALZamEk\)kBhbP&r.`MBW"UuZ]>c(N>7,P<ns56JM`<I^B=S1Po%0ndns68[d:k2YkS<g49mbg<SP--74^Hb,oI(FSrnJ]TW_F#1>h\V)m"JWJ1\4D[C(icH8C%d^Q#g0.[)f2GT_F?f,8M%[Aj3RKZ>%1cSYJ&DHL`_)"I,\A3o5C#759_[eGRm@hjVd)[X["NmO3G+9i"8^Hp7g9XnN\%E1T)mh+qZq34C'q9M=*;2lf;U(=)7!S7T1>p*8%l_:qV@]rJJV1pXe%CeRG<"*qKd*5,=_0j$sn6oCcnShc(Q.VIfj=&FNa#S6[ZW@"U`,U$H^$q=(0#urt#6T\B/To"cD"[;1p!,:/%+9s`=\MuPt!J:jS-q%n;iO]2P\I<8?Z+PPSC)UE#K-m+&r'1tpKM2TV#:0s(U_g>g'D#TQblMX?XT[@B0lSo\?[0MqK,u"Q+T@bk%Q1r[kLR8+0L-7n/J.bNfqGPe29i,5\%!)TH/PDktaFLBaXO,16QHbZ4ES-a'kR_p;!(I=>8DGKCW<,e4fWGLdYRrXR_HVa+B<\!5%ids;UFlMG&RI'*n44?kq"lnZ(Q6O7W[7!O)og3m[MYPD:UJtXI-r@f!DKr$$W2Y-[;6S?[i7"2I#/5+#!dtWccka_ZTec(iS;,T@%-E"jZ,!mi.Sp2/7k?*C>GktfU1)Oh_L6%JYiF->7NA51I)dkodg.F*Z+l\9=66)7E^?9L7-6A#MCc1RCIFaA<&?5k"H7`pS&K:mP%++9=n%3fBiXIP-**msJ5#Eh0AVsG=liLE_;pesGm)Eb8EO,>eoQ&VN)6SgLMmqL]NCsqG_&Hf7_dHn\Z0Eu9[n$igi*W'NTe3OjL%)EQ)q"FR$?aTV>2?\tJ\r)"aMS<^l/PZgG+([c#XA<jG"+&%KPEZSQF?5sAD.C$naqi>D.6iiHs6"o6Z)\.B9/9j1p8/aj&R*IsE%k+\>oOMCj2^EN`@eBtYlL+'j2JjDm41MfD_!f(A1<l8_RKFJ6@39Xp/`tSo1_D%DYB[rA7h@Sq&(cF21Z-;a@4+fL#&qs^R/qJ6s%@4N\;f.<H5J]%O/D6UYTcliqcE@dH_r;6UuP":(T0r$QCU)YZa*[;*td70%K0W.LK&dCbEW&nRX0AnJm-TiM6%j=;*-TF*&._3Pi%$r]Ks&G-b].[J4bT4*EG1C+;CnV5Q38hu6[6poB7iXLqi'Ju*ue=31+WqZQ:e?&2#gLS"WLc`HnbUn?EP&eHs!*TF0'*qqfM$,0j%<)b?sjL*L5*(&Y8`2<s"%+@qLR:216T*ZdZZUtC[U\Ad;Lk6-_OHeii&0j[OWA:P!3ngJuJiihE_#nK4TPL9gJ"jl`1.e#r/Z8*t%A]2X)-Da,9U+/&kj*2#s(l6Vfh-IOJ&CP/:1l0^H3DkA-C63%)+Vg>e)F8(!Z%V;K>;g1uN_pC=KBCN"Z0%c-BCcUFdUSKn&ZQ8g%0'?#i#97Q>YZ_?_.`A/!(aDdE,UaNa`:5Vb+,siTod/H^6a7C3-7IFYk&aeAdT!l=Br<QL5jFpRYMhlO-m^W<Vd[Ql!l,?VaKE`<%'Yk4$CIVt=$d5?;?2Bt'Y\paW`deGP>.b^^%IBr#6q`RsKELaS=mRg3NJT29r5\cBdUO;\&ZQ8gN[Y;qTJ3C#:JOoSTJQuB!+U[p%%M4C/9HZ<R@K[%n1(/1`XAC8Vf#8715sH@.!smc7N+baB6?L5r).ZZD`cr^bKkLL*'4tP0\<Oo=!"iMZYX3s1n<f4KP[hc/4@nWZ%1kc)ER"=g/85+Ym&7o:kS<Uk,g5qbB7O[*!dUARM,=ECr>s@L/=Ho<[#Q$>QHIe/b%#>.$11K:^nU+A&!1(**eq$_t*JjG6"qbDb%97iLl[`%c2iVl@VC)S3r4YIFnA=UuTA>sQ'DU?5$loAZP,40KfXS5grnhQ"9PZ^e1bICgf[OGY5"=K@kBe-i]3%P@S!^R-S`Z?'N%b9Es<3[J'b$4-ji_]cT";bq)l71eICc3B,-+H3_o!b6lcjp5ru";KuS!3EWPlq=Mq2Ls6]nBW"_X:G==38fL>TA`I9o5kDHb@Mk"%#nm1A/>Q1$3j1r6jnM<iVn>m7Ab-,K_"oNNe!M.h'l=/59a=2'CRd-F^hq[C#G='W5r#+dB)oV2d$PeeW`[=kVB6&rfjUlhdnV<+%ToZ$t6qf1E$PfWbd+/P[!FF?.G]*bJb.qJH(Ks3fKQo&3)VILZ9<cT)YW=:gL^/Tu7H9n#&!5_J(n=;Gb/MVW@ZLt+=`@V<LJ1=n%1lGcVljnV%:'f!>8![@jP/+BYj2G2JUEOn#dBUm;YXGip#Glo!:Ac#.(E>1Iis5aKMD_42>t0[[b\-^#gu#s<65[W?PUpJ2Z"IW*%@R=IEO+RQYYaA1S6NWH&0i@W_?MiDU`95"hE57`O",+`h[Pa/d9fkJT#VB=c&Em(;HYMXcr[!E=)3MgN);9b$67UEM<_=U?"!W[h%9:80tVHPfY?nSle)]<f<nq]fE@Y"e9Xgl8,bBJr6M-]720H_F[FdXeu`*<4^SePhG5Y&+?LK`n$)Ds-/5-VE5ncf!u,dIic%BC%U%!\Q6".f23QK$k!?aX#It7>&HKU*>7j"2jG+J8g+Z.)E`u@Z>n+12Tuh,^WorNbo*I#a5H\(ho+#$'U9.JQO(`!#?MlfZ8[2h(1Ho%nE+[D^50B+CBjF$JHH=@UBr^ff7nC"KJaS&f@':Z)9ZIo@;M@=;^58"&![fs6"4&QUB#WeV3$Ge#$Me+1l\?5f]dK?R,sDjp-Hg%%Q,?QiULXpfaq6Q>,)ncoLJ=Q0Uaq9=jD^,pXgk5f,Y'%RJsr(3o8%Q=8<0o3%Q:4J5)>&8;7'^c3N6jEDl@pH/<1o$NJ8j:N@#4%%Lp[E@]u7J6'pciHCPHJT-Fp=Mje&00$>:\o$)*>h8RR;pR$eRg5QI1p)1W53,J9]q,Uc]K9L9(Y_XZWg##_TYj;fb%:A,i9-oHSn%85ULWW6C(*3C>0aH3G.O>p(TnV?!=a0`^5C=)E5j7B:+U6uBo>L7810S#E.eW%qUMZ:D]=Lqd_C[M$3=%%K5GH3;+9=pe^./Wli&%[6H/M@'[too?R-@FgG3H+W%rt@]&n@'9L<OeqYYs=[D4@BrIfT7N8E?XWMPh&X<flTp_uM+h.tB-Y]Nd[t$O`HN8pT-)H/fZ,._D%%?-(5.TFL`ip=[B,1U70,24I]0TS"\Cm#FcX9t0@_NQ[fWi5\2N^F7P4(N%Eme>$[D=kIKm']E;+o0Cd`9bC_k84crYtG,7mKc'7%oO)?a(c'Kk1T7QFWjn<aU`Ke;=NW*3&BEZC[]]BH$oT"AD`ub*9!p$#Rfh,Ud30be8d/oob/)[0&ijjH,0-,ue6;40f,+lelsP>f%_kk#2c=Df$!plg;G'M@:P(h=MDqX3e?CiBP)(&\(ZS:&#JW$g5\[\t"MO4*on]'6P!(L2t[.%DaU2^o08%(q(3X]RE<gC3p-M*,t%;-A8Ja[G/8/9P(6J78?n8Q4TI+Co](32")X=%p^&keUu\,agTO9dnq/pk(;Qbo[M#UZ*";'gP51e[#[r3;*P67\1!8RKXrG&je*q%&$F%FeeG"igca*=UXft33Cs?`pG^D&dSLtiRRN'n1C!1Y%BRuQ3:B+f@RLNV"5EW[o*?M"P`oTH@(_0tVEui!qN8$%*oVM%8SSR\%d^ioI\.e\f!0_&D6s.>2Jl=WuF?]13gR9mbhGW$>UhgnO@Z:dY)]X)H8XQf=LsIH<QSKK<0/?+(N*FRMrHTH@*Kjp#K4(-,d6P3o%&6+4)'FnbZ;T9VH]EDijid;8-^&]KuGVB\>pgKo'7j)Q04ZeCX7>JNN`fE)-N?TJWRM/ap_pb-RTVL4s5s!)sB>_Y.*eNM5ORA'Y%+2#IV&X[a8;93?,F$[#u/(r10VO+TOm8]Zq)=,F!LT<80TOFI64pt"oHBFR-$ac6(!=-7SAsV80MpGsK&1ko2:hMnY0rm+(BZ>=@%0O%M>ZRG(qR\.`U4.qB"e4!Pm<(Jh#]>d8\<RZ$%U=-VPEn+8q>&6#jO'ZtOC&%9FS0rf$`=C;[R4YM[7+381<'CXV*,Y5MVh/S?%3A]Q($m`&GM"-8-EhQ3X<+I6Vrt.R:iHY'J4Ur$Yh5!/G1\N2O&#>@dZl[D3"q-4KKa/q8+DJpSQQT*iY\9:3=aV^Q=%Hu5;DU%(%1`m3Opd3lH$aTm?G9H&Ol#ogR/m*EHP.65nAiuIj9(HPhEYM#Cd!;32j+;q;JE`;ZH(h;UB$K8fc-GrqLeOC0_m4j-PX"E'Qcp@/%8d1!OX)*:J,?Jtld\af(bm@M56,i.MUIe]#dT@6R-"O"F;O>C;_=BTl?Q0HJphpV>Q[Y3OOn'Rm"+lYK,=`[\iaW@K]hSM&W,E<N%!B)?ud;1]&>/BhI6miM!Hh)hbbn+0gaM2N<<@aTEd=rX_(_^tFDH7Y/n'e_$UfBtQRGX-M0[mBWdMkbl*;LU`8C[7\OFE=*>"/JJ%n@:aqSt+-O@Cl"\r<MgBN_!UL+Me\hRA4jg)a%2nI"++tDKqm^4*9ll)4i00fom$dNoNh!#"%fL/4U&"8E1C3+D6Dip2u&MIr2jO%k`5XuK=2D_%F]V+[4ni44%Y(7!GFFo]bc<_jh2]FD<&Jh]Q;pnf4+74X:g?9b1Nsc_.Y,6!Bqk^0LeI*8%<'aTZAhq&=hT7ifR1e%(mIM@N&,b%Uf$="fNq=/9mhD1Rpkso`9/)PG@I*^8[Y':k(0k9'&l9ICY3Z`Pi6j3fQ]R_SUuqGLK8ArJCuN\m+`A;2&4.9!Ad2;%amhB_bC&qFOPmlUG<E-sm>6r7/(`'Z:Zu\.U]m`6.?JI&c/2%6XV*tjM%1VDq,-^Ka$:%Y['bN="uXfea976&A_99Z#%WK")MnpP%JHH95$^S.I*a1OO_0ZoG7%&]lH5t/FI#qis3%lU&'6oFf,C=*Yn52f0O;gn%;TalRJWM_>mWc>J:.PQX<g$fuO-)ggd@T/=/1blu%DD^,db7PhS3#pSk4XG$9_%a7&OhCoGcNGnHV;lI2`1!gND%Ik:$)q#aDisO[rLMm9<Ks^7[m5b?,(i+KO[CUhZ[9Oo]H4WDK(R;[%W]i]73sA.m+TU7OLM/b3!ke>`^#()TV[H_SO^L`t5]U<H2lr`q!b!;ro_h`IF#[sW\!=1918&.5L3F@tZ</td.NUAa5#oogn"o!/%VEuc%]-p"JNml*33QAntKoZ^o+YslY4q=J(aad?$6)Lj1-\91_JNRT9;RCe6kB*$252Pl[)9V#fT]6V5-EH;d?a*A(14TRA&*tGf%/;EC#*?_UG[NUe`a>$\\kRdk,O$Z#g$2[k:m%9Q^7!:k.8Al?R90EiF$'5SceVjVcb5l)`=AXUUXZG=a#dIdji/3[GBolOH%SksR%ac%5UKHHUbJN0%ZR+'#,@;A%9q4&%'K@MKtQqY4e6>E)lCr"",7jgG>__DlWW$fnOm(XBgKn^t7fM`?/(oJ8Wd;!BkL-lm1UGQSN%b?.%#R@T6mEA=>YYXAkC(nJcg+]6%@WB3-F1,<#)lGr7E9;ihH.MFBMN:E;iLIZDLA2sujXglK@BZYc<Xb;2a#f]B<>2u?pSX(M>%e48+R(W;QS^1*KI5fCMGAn7UV`[iEKqLP%A1lF+#)#L@aZ<6$NWl25-^og&(&2,\g6Y^V5</uri0rPkDk'0TA&C#`qij(eGa]fY8%c[bCldITWpf`t9Qfq+(2c:BgV(0L`R@Bu#70Z*sSa%E]Z*W[,pR'/bqM^4$Lc8a3;=2Ge/(hFfo?$<c4!XK,3kiF4!4+'GaM467+%9Rt.)-C:qR(d^nG*XhK"$etf:V.`H/i)9*J,:,le(,ujG:6LID/Mi+fKCf\2P)OsK2r]$R;I36%VOj@"i1gn?4]3-r<%Jat!GW*k%#*NR^+ukFqqpK]nSmh^:a02.YHljH@;8Z*DgF:fRR0'+.!7R'(4F2B](l!l/49Q:F!Np$Q7E5`W46e&&^'$0`fdR8?6*1&N&fVd$%7CJl.80nS$8/9c#QNW\61q/&>5*3(k19#=ZbCgDucj.)E@f0n$RBb3amgf,87WnhkaDq=-3&.qYk6$.0NmUs3ep7FUUC8kO5%gXS%X;<O4EKUc/MSs6dD8L&-%6%U\fW4"[1i%0Y=a:DsVCWkJ\18ki4@Ml#&;=t'T%fKLKW\mMBTRDD,nQZl-DnVV\)g;dq#D'lQC<4M%E)+V=.GXq/*SA5Fl=F(6j9&d^$%WO4%$6]JJO@=82!0;Ybjp^Roas94C:qG3#&Cu1IbcHcFFD$jR8\;'$uj0Q)H)3/P$e%,%'(Ze%R!K^B8W?(AeH#(;k_BQ=&.!2mKO>+g"d5Jm4&8ZoSu;LRpkLq&qMr%A6RX*,m8F>=n;`=3iLI1Xf`=&?l5@)%p:5)&5Bg?=].gkF%ZUI`&d<_>QnO8K.^;?:O7Rs6jmllh\(5S!@c"B^>T]h7^5$;!5XH>XRMbH%lg:/:6nZ[[`T1N@u(/qJ6K'Zr?;+@o?[K;q3LLpc?%&#l%2*J&7PHBjWe407USEn7lF@a'^<H;HOISJ\P12L)u!B/8eJ+Zp(9<*WK\':mD.R3WqY:6LQaFSR%'HF<Slb@;kh4?,3"Er&fV%f-2moQ*WAlb3.rP(8JA/ESp!@D<scWdujo=8m+/[%/GG[:-@RXAL8HfCR]5]K8PGP`-'Kg`EF,I7?il_*rgLr7Q6GXZ;\a\6DTGt%f7Q[uHn7qMJ9qk?lp7+/54R%>e8jmsfSdWMpp@h*%[?QT1b#?3dd]kZk!5>1cZ&K]6rj^<!5N0d8/+4bf&>C=)Vu?V1rnO]j4GK+%n1?3)**O^5P?;hRglmKrV3-9\Hsf_k:-sPLKT]0"1fG$2BU+_$3k-(U&e9aP#l*q#m)f=c\ubD]8]B02@"5`2mO0!m`Usj-Gp0;H%QP'aYk9ColJd@A.:=ANBE9>]6(r`Dsj)>pX9,Zrd5aYIUab)(J8bS#%PR%h4>`)=3'jQKW=Ar$/d?\;u>7_j1o[RW?LHAPY+U5%M%H/T7nHuuJcfNuF48kJH!N,9FWEd:?#[hc9&=@PUu!G+jpai8cD8B+gr&0l,:fY>V&\PCuc4W"<Vq]t0,0Ie6&JZK3cB.'d>]uM[U%[b)r4_6>E1#d[GAa&fQb$='7>7:6i4?X-E&)ci7bIT,>o`u:JA@rqc.*S*8rR*jn3oCn>O_P"d[%E;(u>NIr2J2u3L3*V+MIl6p4%j-Cmh9Ze4B?jj7,^gP=Gn6/5^EpY1Xk/M_SPPA@In@:Ai.l#0L)3U(T)Mi!l*?YX<1r^Z[]o*/ge-VG<")NrOT-ST1!FZ#SDhM^J%Lnnb4'&FprN?3GVBS)?X'>.FA15;jT'004?H42_hd4s;fF?8guDqojc6;K]H'Bu)W*jS<apuMeD1+j=:@M#mRd1Ye%R$/h9I"VhX%jh3FhKmAQJdkZ4r8";Fl;EAAj+,mhRUZ@7o4N<%#P.E&L6o3sA)Gj]T;PTs[/n4YppH-J713E7.0Fjm.0Hb(uq8(<Y6V+l`X2%?Z%ILWOZdP:o)$aCuQbpJrZMlh'>h.Ik/:;WZ[_;U,hV-44:E9C;RQ1"Pg_PH8tMWI\'9Hq<HV5qpmH,RE+Q#bN<%+S<"3=U#19S3Di%D_)h]9R_UdM$V'`.nF'0E;oU+'Kb(FdbSO<UdTtX/(:2N'dEu_lHgXaZN@Y:5YIFU'a-$mI9$o\^e1Da4+;p7GjX,p`jVP6MYI7Z%U"@8ac\@l'Y<L-V1jEt)S@nDJOuK(nEB?hd85IOX5is$J1s,W:Qo:$V=d]]&G1]V86OASC1_$\*4\\9\hl]r.SR9/hBY`Pp-5PuD%l/>N86K^rU'hH!7Bn-YqBc=kZ[S,`DmL@Wq\V@f8oe=u/QEYqIGSUSB^lqi,#'/-+f\h(Z+cJ)9)H<;8gbic^i-I%JS`b_8l.h+?%Y9sS7h-L7aU.Yg8gT?&Hmb)RZKdsH2B2A(R<H@-`i)q/Hbsh"GTV+o;Q)RZu@W1h[#9D*Z:o4T.T4*P!=`ea*e5SaA_W4ge1*oU4%T3#@eh_5d5cK*Y^9!glR%c5tMAg5N&L?<4WaD"R\V9)]VA.B<=(\=G96>8?/!:7d//sW]:@C`6:a_+P'Q"X+9o#A^8_c$MhWGq"J%ZSTed&a+tof\0O\WGKG7/=q7*=:$GEj!nL-ZEd@snNsS1gPTdmN+Kan>:tV38=u2`.Zi*U$ERo@;:>][5b9g9oL!Wc):E(CQK+V_%LA!-;eWLlk8jK?n"VraA.og]EEbqH=AZf8F>Q2j5CFYFoq[+lm<)HN?ma9l#hgm(F7cUn"n_,eK,,\R(B%S;?UcH*N(dd5I>U:rX%=&u=mXu%ZB0#.+=Vm121?3UT>A'3=98Ej\3/2jK+W+bm<k6?QFC.Gr1%%)9NkEsUtGb)#T.g)VCk7HWB9!uV'b_B:5mlWC8OY%B$%B=(<)oosu)T*m2..'KO^nn?'5a'6AU]R8l[06$_d@6%k,WGnP/>VJ'h`9Xp*=M1`:<)L<TXRrs\g+uEce1"BMKgTgGQ"qk2decX=%CfO>2hXHZQ%>MLENd0q/YH0p#1LTEDJ29H1_:T;sl?@gLAS%^,ie:u3%>i].!TUhDV,@j@R4[#i6;%2/Yh5tMVP<1IrO_XSZSP'%%=bUZPWTueO)^KPX1rUFQ.$HAqkn(Wj9cIS0R)dTG\K4KP3qT_F3-;)r0la/NA#?&d?keE*'4asc)9J@E`jhT$MPMb8BYaIsL9#PS%6lF7)/S6uu/UMN=;E=Ggdd]n(k#qsu]7r"WrD5qG<42Y8S2TJ@jg<G2nOu4f,Ur>^9Udf#e#&'YD9<S"D9bs$56uDijYCZaRY_a-%A_MZ#]eAOM-H$*m8p"8AEnZa4ThW'AThY?*H,A6TZgrdU3+_&IeDa'FFqV-R9'p18DaPE&L6a?Q^7:mK>dg-bLF^aVG!(dc/($iX%L%+14^Hb[QG[oubhPq269eY*Bh(-5j-VV'F3FRfhG(V16jEH7191[H`&gkjS<>7MM8qK8>iN;(qL&b\$,jQ:$^A'P*/je4/*g&QG%h?d_&jKqNg(;pWt#_K;2&j^7%-l\3baU2n(V#c.(E(`Uu#/97Q6]aEc>f$_>ji2=n_gf\!UhVWK8G]4u<uH$L@1jiN<"d)ffYoDu%bKLb>1SQ\Y,%p6f__n9r)>$4tf7`01#FlrK"NTXKGhd=K#$CW43.G$i8kK&G4BC86R#!JTOlF%B*?sXm+:NU?iE-S8aE#TZVZrNu%FsRaBE^[qM(lM=eANoOYSf/*JjElj;"Chfmnoc/o!YEXJ7"F=e)ALTc.u=l.q8ondfV:uos!//JBW4+(f1[;,c@[ltlBP&u7+dPL%MrF\%\TiQOf,5dAFFNLf,T06%c87We9^[t\GsS6U.f*YO_aG@hS]%Mh_B.9+(rKpuEVsX50k*gEntZo(CiD]M8NXdLU4NM8EH7G6%97ZF)m,+1q)2.r4[7gSHB*@_d1HBr0cH6G@5X$5V\g_gS'=U6+..FXflk[Z0l>\%!:=\8^KY2B3;XtD/0Pg4n)(P@5BKk0.3)Pjq%BN'SFB<o9=&,A?9`5Cps?&#>&m[5*Q@Zg.SUIYO,enJM%V_eP]`+m$@'Q+;+pBduD#q7)J;A(SQF0L_2Dh.A':+:l">4;tl[#<&"%X;5FLV;r[,X[>KmRcfp`E,K'BF0EBUJ-M#Gm8J9__pJXJrM+Q?+IJl('re,e/ElGWOEc%%G]!Mo,krg!KM&T7XT8)nGVhA\[(K[c%[LmtR'c/IB\Sqs9aS=QV+lRb"]@\muUcgPB4snjR(1jK?-D['U,*apt[8k+)9rc@?XRQQeMTD0*;9$Q:h8QL$&Ms!J:WoMYG'nd#%!#l185";k&I-YH>;B'jD^_k0hcSOSaYp#^'#:6qB3=_#Z\D]k&M3U%MbR,\bjOq3i`od-A\/:[%8DJ;6Q_d;f(]+9=H\KBLqn//[%+KhI+S4b&ei!m=eE=@"aL'7+!d]ooL*)gE49$/Fd--LPFa*e_A+CIe-UCXW+if.3?bV9!++T?IT<Wr.Y01d$@q3g#X,OUpZ-COn<%70J3E6q/G+R);rRG6eYsnIf1a%u1D8*b10\#jbO+JYm6q&AJRR;HYj&BupL.Hl-%g'%H^?q9I+/*618)mf,[@8\%0.;t:?Y4Hi/b%/rLbh8K)YQEq#nb<[8Y.%A-f?'CVcfAAb[58G%btHXqY?i>'Xh)9iB*9+&lS%J^qACQa<#AfbK,V<BcL*UK;L2B_9FV@(e6*3AUJ%*^rh1OlTXY2/DE'nr'XNEC#=JJTO-kCD%He3?i$n0CoCf+mD6i:9[k>cJ_(82%\"b2]DZ>Cq/QEB:L"pa4Lcd-O_07`T9#n]nl7j%l0,l%30alW9)1<T`Cf,=/\)?);+"G=$W^0P_=uE:Nb;X>>UP+qVEDn=agg#[ZX?r_&aTtPMo.j;^mqL!SE!XAJf>NeSnu<2=2Ci(%])4S3OXO[PPq95(h%>IKE]9<-P$!oK76[At)4eh^3-[W<T1C<?W)M\q9B+Xcg1_?$Ef"/9kbh`BQj0,8S-\*]SKV\h,:_b(1G8T9%i[Gu*UU?#j`Ianj71RG,4=\Hnbt6DFN)WK[`)3TQbE,e83)`fs?$T$]4$;Fh8NhY61!6^0*;:2E5FE>@ir0r(Ibak(3<[JC"<V"Y%#6Yig*+iCAi>J$%-.Tho&/]aZ!d!kHk#11`aPKd[Oj*?YlM321lEQ'3M<6*)M<+F=2iI<UQ>`'"i].<ueitCUB^u00ckH4QGFAM:%eO]!ZN.IRd5TJgf$:b%[E"NA!5pfk"+qW,F?/mgSah7/i\e8OnVq5XTp.'o)au_meW65+Vh@*ZrntOSrWji"V2hG.'HZA_,+:6q1%mk;9.Ab\HNl]7A28QtDOT[/,:V'+BTR_5NE+r.<_jLe95;LFf4WlVK%rP_[9PYu"5$Y_Vj.,7Aq&nZ0c!R"NblN.0OZ%"kI6u4Pd%Yp0`<.Ul,@Yr($cl\]2O+>mm"TqlT$O9O\n9VBYZX!CdI`8\FQCQ*!$r<b4Y_>D:rr>s1%>`/._7QC'^i"V!)gOR4agf!4#%!a9R%6]o/]O6a5N-%VF_g44T^LctBH@pf_#P`/1`#_BCc7%$pK%?eR*`;5CM'OeWW5GX1]:_p&/$no&nb?8Q43UES%qig'@7_RdH#>q,V%W0Dhe84[Y%P2HJ.9-IT;<DET8^m@O'f$@fB`i'c"-g/:png)sb!tm>Vb1YoaS.Fb[Gk_'Vi2o;j1St?X33>kHfSna2P%0HT]$:R6%)Zdh/fms8N4GAGQN*&tN\;XjS)_Pr\X"'Io\/.KEZ6;ENi;iu4\m>:jAjk8T;lRiQ.u87\I#@M7#3<\>Pm>D/ba)R?.?4iC&2lBI%8L9,<EiMTB^k"/H6/D%lG;@M`"puK-dt[Ij'HF"W9IJ'X7ehQI%`Ja/YHe2E:8.a$FtPsjO_^1m)&-G,*?..m31c[[G;%*XDG":S%>kbc]"HNX.4jGkC@,g*"m$18#bu,:Kj1BYX7mS>96DuEDg?('K^bP+Y83(-V.cQe/fE"pJSDn4\J6NPI8BV!7=PV5\mA15BUqI0V%r@[-Kfl*7h#TNr0ff2`p8VJRs70L.MfP5jFaspZ?R0U)]`mJAUS2;_2SD2<sJ*H_hcLO'@VaK5J.DrOQrCapHnj.NUaj$F]-=l$B%N"a=s`!E7k![9hTZ4c]o7[-1M)LKb_*&s:]Y_LK-,doa23TIACGsIO/>\=-$9bliC:*Pgqe3lc(PB0&En^?I=kch$*VNn[Cnj8/7%&*AdZj!dAT?6U%PM_%ZWq(Zgq^6B5TEso]@E@Sj*,SeVf3&<2*Q`bpInjS,uU1M'Zeitc6:<VuX=RGn^4p&$]_>P@fD*X1i;]bNS%.1qTC\WF;"']Khrr0Z7@c-A*?@tm@rE#4DRUaqmPj[HdmG1mf!!8`BeHi@9_Gri?q.'sQO-q-N@W)Pb*bInHBKn@An.s5>,VZfqs%Q_?7?Fu-afk:b-uNrBG@J%u5T96jqR,^/5<k#2ZWP4n]]M,]L(0,8@31A+803m>pejd\@U0Ub9+*XO1FF@XQ\kBi<e'>nk6`%,[,%a0_kf#aWed#tk^<W/1q:eUs80iUF\'`]Kga&(Yo3%U4*g4&Jd]</;cfA=4t^W@R`kaeq5;ppf-"$&Aj%(ug)0aO&$%'Ao*p\mF0B%,>8<>674#<4EE$7+<6s5gknb)djXa?%s51:Ye9SU42k?1=\bue.%EC5O>fLi3#-BKM\1Kg%"g@B3.VMkIhnH>_)\,"\T]&'@FYaZ%gWmh5g\eV3B2KsHA"+*p#u<(=n;!)ngr'?=mpUu8`2$n4&uZFG5`$c5Na;1"!0TagFFnkOH*XZN"tUcs[T]*R4E+GhM]!b.+3r-k%`$^Bh9Q"l#"_EA1P:WVB-F5`F>6Z;lTNYsW@<N^&,Nu$m5&D3QP2?a._fGGmOu^#j<NPEcWj5>lGs*-&cWaXF`^uIPA:I9T@&=28%MK@6U&tr9ZKnl(Sou7\)cP]d_PU&Mu.OIQ:1<]uacj8;[cH7Zu^"#k1.`$Ce0c\dUb\!7_X&ommdp>um+FLpc&<"JlHkrG9hU1=H%@kTp?T_\G+BZgV"BV4dR&i@<@5p/X?(CH]7P->Z`i)!AG/fJAV3/M0O(@7hWPFcHs)SW(b^>`@UEICjB2kZjl<l"Q)k.$&6=s'Rd%"p>D=/>"q!2!)d93#!*DLBISm(H:rF>u6NBPn?R(=,DIE\@rL"iM\HON:t?g8W80UBmIuYc#L,:2g1lF_+XNa4ba[WGb@D$C>@16%i^O77pKk9MC`<mcXq.iG.jrMu']Fl#5eqE!K5<_Cjj&f?hG;/I>0G$:,[H0lJnO(NO-jK1-f@UJmgrIBlE=XJ46d.p6?3&KmR`NN%_h6@V9,'LKs"%Ll_KjN2%dJ"?'akaV\062:@i8(e7XYNIi,Sj!lu5BL2AhbK"ltIECsI"1+UFTLOqg3Dn7U84OmWB?,J'!paLa'g%hng:Z[a0HJac_?f,DU[jS;LT>$OEXTYhlOfb"A1\1DHWa:nem5cA;i476"VX&Eb#[S5$t;hCXdtD-8.;jR,#!XbcL@Y+n=J;d9md%JK.P/3k#tTa!i\W;B]/6SZ0f]N'`#,6aDc01UDbP)_ln+a,bP\3)&pcnU)m<n6A)pk=">"5cZiI#E2e)0pf1#)[)*kPLp,s+uY]2%*]YAOQ8W]lAE+0XCRoN0A%2T^Euo"Q@ppH4?2(j5LrL;-#:-Isi%Wua0\bVY.Zr4(bM35`<ORFR<L+;<,Zp$$+q7BfYmcsR3&b9&%:N;31gI&DH31^R1?s,l?k7;GCn9fJ;WWFfs5iXjWl3tSCs.]lg0pI^94#%NsbBFhX40.>p^OU@!<Oq;/i6G#^j]S$@[g;3t1n]D<%4i*@\I*b/TSjD+intEF%1uK!9bH?:ddS(pD"Z)9:@dt%^W?pB!jVuWr$rB`%Ie)HtUo8H-F_(<n4(aT(nSNgK*#sns+WBbC0m4,"%)7FXWSK.s"5ggpTm*^a6*s?=F6u=3*;UIE-8UlhTK/n^jZiJFg%?";&/%VH77FQ<<L3+^b87a,eM@I,L5_5-(TPM9`(Z&)0:*>fD%ae?LXaBHNKlUWgBK:\jd3+UJ>NDa!tRZF.sV$tQ+0T*Lg=tX=#h,]naNgCt#=2bS50J;\V&:RbGY!2!b`C6%AaI1@.5J8.52>COI%QaQ$[.FVkba+$@O9B76?m?LXFj9Hqbo(Q`-]c],s"n5N6c)&]MJ?GE)QKD`[GI^C[l4;87!Y5)Pm8rHan,dijY.;b.d5@9)kL2<a%46_(1oD`^>?B?r;!r.7erV'q;/lqg(?/qCR?V]5=aB./9P`_F!B]!;k!?\;uSkhUq%D"%MkUTEGKs!`0D8(aPAN-_:7D_7SBsC=W%B!r0eCoE3.NIk?+q*![079YmGc16]QRlMFs+2Q6fiXRPOrn_e@T2361i*j2dQ*<[.>WM^PXBS(o:V1i:OVu#i^R)+Vq#n>1*hmFL%N_<oBWq/H*W^n1!WkHF6&g>M)qY*lFS56j,i%(apDa+.$A;-][`bX;V]**,tJ$\]lJbjj.5"+%N93.d'^('rE:_l,`&$'RP)kjTf%1W-(+m0g)'1!$i3f;@olWY"+LeBoB7O&eG'\hO-<.=8lHi$*Q9ZI(L*U24]Wp`F(rMlm`(f&e*D=0>9N^KJhdAFe4SpM5pun95fX%0%^A5KFdZjZp0gW0X4%E!sm*GLFmDK99>4bSSKN"h(pfqo_?<_N=6btY'\X=J$6,DUXUPHGCV7Xag*p<\WVlDhiI`^7f-9@B[=:#%k0KW:rVX&W5CL&%e<>9[@Y8264^q)FUBVPWJFaeR5VPZdYcAZTU<?!GN9,0c?sF@Paaq+Zn13PnV48ic]iXt`S3rd5"AKq)a@+64%@cb6c7sop#4kP*mJ8pmqX>6`2Y<q:pYP`MK=*!;!=>U@%:YVW&&g!='\gN8Gq/[ul*Wp>a=@d=MkCe13p5UfH"/=ij)2UK)GR(AR%1[qXW-htU0,Pa?Y!(4F5N.[.BXpcdHNWZE3dd).N9\rCd6+;e%Br:$g2s'!<*cuQr_Gi9VdSb+YnI]7Nb>r"94Q#"H];-$"aTu6$%J0T/HCMiQ^hC?'Cg&^6&fN/I6E091QhksAOM.Rd?;l0!QP"_k^DFo@(Z5b?KXL*@ESRun0#gl_6YGK^2Alr3XZYjd_2L>l`G"q$]%9<KS:qDI7BN#T5$l69d"6tnWH8?Pl^??QOM<bb%+!\o6nVgq?:F3VfAK"-pckY;]0J7EdG!/dOf"llrdLoiCD@:q&D+GN#]OMV$L%fL(H2R6Q@9.Q0Tha*FSY$%0d0J]M>PDdsZLdW"0h949`Oa*c3bk0#g=E<n!;31:hHij2"Bb;/NP`ko%^'^"/N2,4Y#O[[),1o>$/%^bnAT^7,i4OcaAY'dXiWY7Ll0#TLRo>KNg*Gabm=Nf?`pS.W1;5$h=9l0Dng3+>[n23UAnfN@:n@4l3L=8?,F$"O*-.5JqW3+V*;%j_O+#'ZqR-3#i+=pW+Vif35gB;d>:)a4Uaqj2M=DC2k\0[g[.B!!/T]60u\iS0U&3r$FrjKbI\4U71Wf.'iaiLP,TUMDISO?%Xp+%YY!f-M<15%atR!Jetb-W-a4+#!lMFM&7;0WLlRU1);M"f./"A7C,-kC:,9s"UXg#U0nt9c5.I?:b2R-g6NJi57@Y7jr%Wcu6BY.W%s*nth0B(;Y88HN#_Da-(K27B+q3jmJi5c9]Bk5d"RG`Ds%=p>5US>\`6NkDhZX'Da3#uI-OADJR-&od2K6%^9^Lt(od?oPKRT]iq%_X6_Qi7qPUG?nar'Z&I3h,=nXA1"+.l5O]f)?+*JK2WTa6'5,+_"[#JSSLP)'+Hb;5#om!U2%3/YQGX4,KEEJ#[E?k;j:_HaY<1.%#L:g=[NEFDMPD"F*/pVI)R=)Km)MQ@>22cPis9)'P!U:*:22?E]TYb=?D2jgbCN6[i0_HZ@*dC9aatX<,Sd%&,uumc$amntc3WEk%5$rCn:ATsL*nuN>($rYfJGMt;_c"e4%du:MZ=jto-t82>EHrpj\DAqPpeE.uV@ni[``.obBVM(JKLgn4.%7.,gu-7V,2RL"$ruG\%9X9>HJe3n#PC-!!*#,OMAg>Wu`&4/S<as.J@_YTMWNMU/30n1#,$Pp0]XL_I8]OEH;(C89IBi3+a6"4_c3V`.)j"ee/[NbOPDT$R%<o]G6m%r#/qAcZV%EgKo+pSW]\@VpD53(-knG(EESr+=,Tc8UP29RR.9/]6Zh(8Q]\.M_]VhN!EQ!M?(&mcj_+1-PkAML!;rK3Y5%]]epV2HFkC)7Y;lWL/B6-VceJ'b:e[\%1!X@Te_>`uQ7@P35,RZ/s-7)f:I[DCP>+8=FH4GoT=m&ZCo5(_kO-&2Agi2g3'u<9o9W%YMaS-G,c<j3mJ6H`:Ht^L::1B]I+j7#.]J2rgXKg&g!,kdS_R@/rfUGeX3`M`5kgsUGN$"0fMW:_(:84pro&EF(EXI1@5:CQ0&o+%(8e'B\HRaI<1[S^q2k9"OUU9g80U]\cT'f.oN]H2k](Kd$'GC&1<Cda'N`qS8_O5LP!im,P`rHX*,6m%Z+Fg'"^b>I]OE=FSH0s-%8_O73GpeM^iAs?5MHVBii)nK&ChXO$$i?CSlN_+ms0;<19:@-XH/K@c44GQM@fh'c5gon%e<jd4`o-nB$ujll["Ple"CTJDO7h6X%^;V<Z192<Y<f%r1j9=33<J:Ana1()Aq$s@5"f1L>E_glkA8]8.A/CdH!ou"F9nRuCF:#<eek@be,_bp@:huUV^ml7CJYBuZS&ta(%M]T"C9N)fsWdW?t,*e/QX:r-"W=7'&:WP*#7/aq<,:Yf@(^Z!SnpI=A-.0Q_XMoO=7-_/[:+Q=c,-7<3;]df:cn%EL:@!:r_<WR+%R=`Hs3>$G>gk<.)lIKoRV'XP-c20bbXmmec;V_8-lTHj5lFNcZW^0>#O2M+cpAs=@L5(6^=72@[`$M.i)!DXY43&W>9LW&I:>Dmm%Cn%s7.csUS,d9m5UrO7@fWPoi#p"d='3)c::NI+iGoRDeH0J<POth'l'g#q'p_M'-i!X2JHRafbbN1@iNtO<IKk(6Tj#QA2cA_B#%eg:nVX[UUIbB>H:?Sfn`9JYM"8l1VKle'WrlH358h^]O%7$YTW=fOce["j3)ZNqEoYX&noZoEc^:\%`ol3\r>Jq<1=IqrEE]&KoN%h:m<XI7hj*CQ/>1Foj"peog'2554<Dq^7<T1lcL4/Asq-[!H-hi$J1qF]+bsHLlGYfmq`%#-//#C$+.AL>M6"=^8smAiSg%,Pqps%Cdk3:hhtD-=@!B3.I*!GBaa?H)gQsr8d&*TQ$aFIl-a^3"rpl9-;R;tF09&53:!V>l(]^r>?NXYCX:<lII_2c&_L+J/a-tPr;o+m%Z0I7Rq@pn&rT)Vk,dI!Af/!*C?,62Cd)Nm)=iHCKej:\$Zcs$^dKTd:;4h+G((8=I-)sY-RDoS(;TdI-gEdft`<&S)UFoE#[/?"^%ii.WB_C1<!6:E1F(g!TtM<%n>>bg/7.ZClB!i]$2E33b)oYc3R`9b]`4&@VVls4qF4p8sf+UYfj/p>$tQ#N&2frV*gHEY3F8>B3A%:kG]0NijlbHHhld+Jil,6XElW$\OR`$m^q/n^I=pH#epGq+B-@V<Q`tVAMO)2"%Su`D\%`hU=IZP%5<4q_j]9E,,s!U]go4Us?IO%577i^?PqhLX(HHid/\JqLU,;YW1*B[)FY19^)E@O_\pLd[A91NV@-2ZKr5D,%p%Q@\r:eeFmXU6P5kda]$hal@S"+IBZa@P.Pt[d%"<QZ^@0)M<D(K7'.A>!%,,Kr.4Z.R%j$6P65WlA.6<P%b"EI6[ln!Pke\>=B5G)YbX]3*Y`)YNFR?`]lg18?:rAY_WWW,q`dAB`B%B.*O$Jb"q#ple#FUL[>id--Ws*+=iC@'2h-8s!qAA+>8D@sK0do7EQt<0Gs5>mFX#otlN<.TN?<,pB+Je<ZtQ5EkY.>"WG1/s)Nu%'929MAu8-&aum+3*D:Zg.;Fuk"uFqbWf)UscH69;llj:<!9k^qX.]tMglo.7k2T@)2Ql[F+DIZ8GB+/!KIP6[m\FSSINlH'?k]"[%b?>;W(%.?_Za6V^.S/1`D)JHFU=%8MH59Mc+cX(YmdriUpE<Z43a9.7^MCa\\h(hP(m.(LXTEu;ZU&5[3\J[&B(q:b4(#/6aMXbi%]Bq?hd@+<;6CJ4$YY8XLQ?CUV7>U'6.k;FY$9_MGSL$gjJEa=SV(O"WlrgMlE-r4*Z5/=0K!^.9b:B@9,Z6@nkZ8\>d-i1<("cnk%.Sel&eFc1X0;W]Qh<1'aKX!G>O;kNRj>Ls?LcVc/P#U-Bmn"Pl>?]%VWd!a7A!ukt)o)uIZ7Mo0WI/&U@3WfuHqZJ0a5OhUZH!%\%'M9skbMWLKg#\;CWe(iC7-%hAB]6ln81gRhjF$Pa3YO->d*cH"eHn-Q<;$SQ:uUgKmB=B';=*CQh7s@F<hU*:RL]lk0FN3aV8EAp%"SOdEW%_io/9mrrp,V4/JUOMlg7OTg=9=oQNI8?/]/o46o7!]*pu1nUI%]:CaWdfk.udS\pD@1*l>j.tLU;5ijGV\b3OjN\XSK7Y%9i+brB[W:-G@4e9Yl[YZdH303U$BH$;f!1?G!*"!#,Iqb!L_qXD-S9T/1i@S'(7hl\r(U;Zh9n4T6$r-T-pl1CQNOpE!boaN1-iI%m":80<=et7N]Cu*i%X,oG?Z4N=Huu-h:\n2].9ob1mo"K)[rO?>+O00';kn\\13o4$6A2qPmk_T@."j%]^"Z8NIe$i.@YUE1CL9*%bSAH7RG3Jfkp&RniKJ(8OVB8O9Dhd4KkY=On_:7^qKDUT^ZE0cAZ!DiTLnq3k@*+!,tMeIUtCsY*9imlJfCNWR>2PX+#JPA0JTFl%K*L(@;/V@L"buW]m+#(,LiLZqn%._^18uiM^QPAHcCH8*0m`n90W)'sEgM=QP>6_R1K2VAdBB<H1qKtEY'FR@U=(BM!:"NoCkJ?X%bZ;R_Oc?-?4msdibY1>7X=PZKb7-uLlb,t$JgDb@A=!m$EYIni&9O#NRgR+Odi<S8B4:;?S/;g!EcO=+3JP!5-icm6"8ATl^"DXa%3Y=YFe$Kr1GC)HkFBC()DTn3?pOc>=r6eW+5(aM+d-62JhGrkM,k:rVQ:`9#H.iLj@^U&P:]lP;C8-eMYo)!`WQ(&^?5+nGVDfI9%'1h4!b.'B@4Td(X9dY)+8Y.?]gr<Wk\B)/jIM_?9lSg-:VJ<\$M&nT)'\0cd'P[L#oM17;"DH#K7$.QZASRQFq^LpWQU#PW>OnOS%ES[,G/l3CE6GEmBY*$$5ZYLIsnc[o<Hm)?T*qd0='\#nV-C'q'P=/9528m*p1%d[nI^c$u<SSmXddukF*%b.VD?;D188eP]nC=p@%TLHE_2h=;j/:!Rq&HVnXd3>USRm_8hb4@5_:qKje(+FE[Egre'7+=/X<g?5/6sA]e]SY`&4C)a&m<u>3HL`U8QihqnC':2phLNsK%^g=QCOs8ZiH2@Xj<_tRm`.(+Bg)5&N'cUH#8J`,><Fa@5bG+3T`c@c:3VLY[^q0oGARalR8<ugpK7prE3@Q.k+.[A'n_1rY3[;28%M_[BQV)lmceg=G3U'$j>ck+`\2L]JNqYFVBIeMX@n'=j?P6H,rj">_=#\mI;1!EX&TUq.27$3juoF`>AU4EQ`(26ViL4b*-,]:7(%]9G[bHDZacXe\?cQ^o[T+Jm-b`h4fMYnWAJ,FW3sV24:HY\:lTB(5soNS5+0ZDibp,UoH5=.QE:1b!1PM/f*f*Mu"K6V,(J9&2%N%KJc\>^P,X,J97f;%&>.o$0]k'qE3?5LCDm7q(b;UDrTRX5skbFN@\5O3_h%c>n.5eP-_Z"U6\,I749<kA&6\uSOgTN6uPd/AX[Cb%d#L"]*$>]+'3V\rpm!<A(U:PF"T=/6j1%L6+(e395f%`n1,2h+j&:M^r=Mt7apU@g5[n$1'$D3o,)$*b9MeOka92n*N9P7iZ>r',%bQ*(VUf;oJ(.32QBn%*PTgo-B]Mt`+O)$SPle=N1QZ-k1n<l5db"<Qr?X^@0B4?_s]FMte'?cq1#_at<S]]bn-oK-U:l7lNG8,Cl%1:O+%ZLm>soK6*HAZ6acfuW<TJ5mtq1^;,io+G*r@f`W#gn[=:L`XbCNOnMW+B[on%bZ-pK9(UP-W$77mV'$+i0Y.1(N_WNB/\@a%AO%!C,eSA"O3PSY`bZ#d/5<VXTkM=E5dA\]$drfk3lZ:sOQ-iKrA+Bm&fQ%#&f)o*/Q&0Sl?/=cTECO:j&l5efESn0&+&%)F1rQp%?bXqT6;+7m2]V^&2<.jI\R(Z5>fa^4H36TH=5r4,;CGLg=YLHFJY!t380#BIbbbt!RFAHb)?ti&F_>U6>T1<<ooS037k8>PP=QJ>%$A-/_=@#n<c1Tel<IrqIBbI,u'eQ+?KK@4Y1Q6F8Ag!:c%2BOMDC/[m-G9%@pN>i6Y&Vk@;__BpY[:[:jX%A`bI>O(/@-\[%GAce%d3o[h9<QWmBRj`8puDln4G*o]TW^^!#Enn8/8ZVh1FW/EHhbNfR\GFdZW7jC-i/1CDR3t"m3T"id_JE=RR(GEJBh;R4iM1;gSnaZ%IuoJ%jtuI#/MW\@Ep0Kgam-E-S/=4jQGGJAedn.>ajp!^"k+"1YJHNU4D_*QK/(1dd=oTGif+hTKU\TgAMV+0<b\"<;5#0p)A"W\%[CYu9@q!Z\E3G.6W(OKH0''LO,W/1m@oDoHeF#]I!Ja%4EN&)3P'<L8o<Mdm(f17/3.b`HIkN70'JDg[:=cQ2l8\TI#Mm+N;aAR4%>alf*+eE:T[,uq62H1p6P%*^<Bb_%:_f$\+><g.)7\TcHj-5<2EM2:bf1JFp86kICnO(H6W.B=$,)PfoimVL?W"]+/Wgs=2&(C\*%=nAr*gO(YXCiC?Y]pNQh"c"#8.gfS!I5qEK(q>5U>-Y?hY+T#P9LsI9KQ\LooJ)\!)#Knbc:grm<#N`0ar3Rp-f_A*pKBB(GpPp&%$d4[-Hj]=W0_?NCS@*[Ghb0p9`LWjX5a]VCV4HBG65;OKbj8I#Q1a"t;.e"oKa+>0oq8Pk$X6NE'u&A).2Ea9asD^<32DA2R+e1<%$q#]:A=$+:%.-_('tHtY)hU"%M9N-$8]82MKMjiCr#K&MX`2;\^^.0inssPg9hl/IrY_/%*Yku3CITalX@)O,Ea`bkMh`HWVWk(U%O!>`J("0-dWi<+gGdc/,)cg#9e8#LR:dD$-9#pY2?5q*1^s?^CUS:*eZdSKN=Z[-3ds/RH^l;bh[Djt&*'-iB:nn3HgFt?pE#CY=%ISo%%[\P*fF%qRdBo!-aeh7Nq#-d)cG>$>jCGjKu`I=)ThoeB_B>@F>5Rl%H&k[%/G8o@\.V>\ILJ$9/ma.pM)'$.?.SS6MpHGXp%r']-C=+"auj,.B5jla![CV;e_f.D7.B/>D"H(+"d-dAb7MPTt6>ra^r!6LH6Us6k0Sll*#PBN#uQ0_A/1k5R/,HP@5JuTu+b&HD7%80p<\Vdi1.M_N0)>2]r=6t8FA<ZIP^FWU=Ug+*$AA#[#q?_eL3E8/`dM'bh;@u\pYKfqOqR!ja<4QtC*#30e84sD\OS'1r!2doL.%L1[)N'D"SA:ntma5^I;j71O6hQ.EqQ2nAOr$QCAEZ3!fRBpt[d<p#7S'j^JJ;_'^$%Oi-HpBpN=a%^mF)8]h(.6Nl:b;'[;4-3@k%HcO[C$Hl9k+D/`DQJUfq(ZL&uh2L_,)oFX!$Y,Rk_PAM)?#;?;3p7YeTAfF-8V3Y3/%:ZW5k%G0XBsLj556fO5uWpKR@?e5f/<US%>2!tP'0;t(`$$sVj"mX#A"n_c9.lkT)?a3Q.r41<M,:BU;DD)%YieBge.eu4nW<+i*tghSb5?g'^D209McFMrpHc_u7th6@Cr$ij%"+X8/U7eAf-h$@q]XL2Rp@\!fr;?9SEr)ajrM%q\Gp>p["'VDSs4SaN>tMF[R,%JnK=B\W&_<Vf^*<%-ZS:YR$R:6+![;_A!Js+g%b[:k[:;eJkeB'hB8if`/hhG=QT'Br*,>Ur7+pOjHFk+KY'ZOsR!?WlJ@0e\4cfr5*9jUt=n%&<5*TliT;QiPf%H^"=9h&u`(OCRa%PgAX2E<nDo*:\4;5tK[9a=XtI;lbopEk+b;$4XjSP+J^K:;MgPT!2Wg@ZUB1[X&_"Et<qO.`)E-%pf)7\)h5`K\acR18n@_^b(**%JY#mfjl?ao%(G5;0_`FMK((">Q!c/=H6?]L#ROH%hn[qp)a&d5?[$l%Wj0(BL?[r2JS(3&_<8\U/:hE1_astL5Uu]$8FD*,Hu%A*%0"jp'<E[5N`,;Z6:t6k=F-W*+;.fp(?qio6eUPVcL?3\Xe.?!.G$)dm5[A!o8S,12/8_U"Ktr$l,&Qt;Ls2SO9a:K2qiP!93uQnk%q/']WW7E7<(sRjF!C\O"!+`ZLW<)E?Q,XbcZbs$@-qqrAc=!sDa!L)+;!t')CISJ46r4XbfR+)VNQf2"epLqK824lk7Nu+%'kED-%NG1q6<H4GfJRXa?m\.]a7YFe6T^[XVX+Ct*PV3:#(nFeea'K^CI]Y%i)Hdn[/TnM/,#%MJg.D^TVF"%R7j4]iKOQXA&]g&sdZD3-%V^g4T0Jdbci2L0uDc"8J"@.bc\Y0F$;rm97FBoJ;<BXFM:4Z!cJXB_%E&cGNUS:WFQL9&%Ou,V@:YInX2QLRJ[RJ=J0Y">if3A5\%<'SGBX5:-eVR%(=Sa94QW%@+7ocE9Q&cLQET(c+6oKd#(_JFdSXC*4m\oXPtK]5<-s,doV*3\']JKBF'j'<qO&UF_=EetnW[fu7s%?<luDQ0k>h;Hd_PE(_3QFVn.#[OJ>4l.GutP;A(5#`[OHF[bT:7"I+_]_@V)6)mGl\8Y[1D%ajqPh+*hV,2#iLts"DP,42I(@3'Z%VN+%#frkkA>(AKbMs%;fV3?H3J`7r0:^[3o0jL)0N)!fti4Vb['8iD,R@CWQ7Tr\>H!P86>q_]2#1q*Kg0OE=-IfDh0gO":G&&$J%Nlnb\O_Lmp?Zam<LkjEa5p@<[3m?TW0\sO,)d2^uHqi0\(s_:^%Ot[>>f>/QAQ*5KA+^hgIIia]i9j@h_U\$_0N^tpi,M34_0T@:%1eO&+,%.W>'Ni,J>`-?i*I/Om"iMj(PPh&/j/^NS?9ic17d6Ac"LbV3+QNso0?#cn0]^Gs@URa*d5"Gi]6NdSYag&[g=DFV'KbHZ%m[/#oF#GdJVr&8!'+%oX9kH06OPt\Y72E*_>\PA",[4%bBa(FmAsNp=a!jtY[H+!#N%T6SG4^@8n?QpPMQe,"l\'3bg`WGc@0.f.%Kq]6]rm^f_L.g)h,iIjs%k1u'Vq,#4p41gOb*iZkRIh=8L)=>iF[AI&;j0Qq34sG^1ZmsP*'($nPpup1PKZlRWa_$-9>`\CgnCiE%NThURA[t7.Ke]g8aA.!$i=,E)D+ge?TfPY,[24I@)tM<TTD%gXEXtN]iQ5Bi8Rhd^j$2]LW<sj$QC8ea21'`(pX75`;p_tt^$@*g%lc0e1K63WfZ=L'S(#CR4K6k8p6c\ppDe;@[`lM?g,#.;+JE:io\I**_@p*ZHO6TcGoQb0L#f1Z0$bt?0e%-W\m29(Bb_)/3))1EC%CiX<$U[CKP=L8QXK9p_3'Ju7h/^p#:j"N"t>DZAp.\-?#<3<3bE+3_Bee)n-o(d.([ub]g[usmI6jpX^?_bNhjs>Xa$.gnJVa7cu%[fkkfcio<`KFZmjW[f6pW<@WUB<Fgs,R7cNDao_<-jSoPH)4bu%T2nM#u=KfJj=QVa)%2nX\$"cWW`?tMb@%^kZSf3>I;*`*6F.L%=u2F4&nF^]3I0Leie2An34cj5YCab[=W"d#>fs`+CZgY0-F/BjR*Kb4;hC^/4GKBd`W@*Lh@WpD:S5"9s$QODT%fu>I?nk"dO^Vf%M\4_9n9[!BUTNeR1mp^`bU8'Xn:HgWjB:(P2gI<U;lfFU@8f5)?j%qjSqFBhk2Dr%]\DK</;*Pf`Y)XkZT&Jk"WQC!q^5$XqYEQ(%lRq)l.-RD=Y2<>66bGUJ3Ec$lKNQj?&98m"=Z84miSe]Sr#2H/r'PQtC!f\D/Q$-&]%(UdVC=%*r4A7ua;eiY4d:4?P'0.GfS6JI%p3YCim1jS(i_*m;lS,=Hot5*60a(OO<]5l@ZLiI+,pAY#Wn4K!-UFm9<pnHi9o\`k]:7#%'!MshIto'f^(5$"\R,nB0g%jTO>Edi%2gK^n[>gNl?]t0XVCf:9NeIAE1>3`F(>Tmb.Ifm`,Uqffdf)`5b4&/#IO2YGYJX,+gTn$HW!>e<&S.b<#KLBJ'$Nj5D<DJ^cD_sV%:+\!i<N#piVo]5"]3/`Af7fIV>6Di5nThuf1q^l0Df]>V$BpC;P#Eh@0U@23f(E@l-Xuo.#=24abf9)*PmI_1XfU18DdEqLG>^1l%bWKCW;5]osb[h@i"t(CqF;$<)n3c^Pc6t"T.![']$I%2MOI&m0F?<nOF!dqA[i6qq4*?q+1?IFVe/f?DR]A,GM[PpSW\c_H"*Y![%Pi9:75h`?c&<!)=!A<!_Um&5@*&0E(_7UG=e#63ma"\o@T<!lU@_Lsc>85Pc5fT,09sgDZV3s+Pj7r+(+[Mq>+nuq$mD9p$on'EQ%K`PnpTS;=Y^lCgpDg)V6kkA^_5Vhd:lh=08_7A;s],.?=7N"KWbdbH'?5TP8J;$$5Of2+4!MX+b.L$4YrP7p*``e9e*f4u.PP?.$%J2+;_O:NYp&aBg$mr"N]KNgNpQg=UZM!3TR'5:_(.bKt23[dIPRWFHT/]ski6.^/h?4Gd!qqu)*)J;%N<PGMkm_fqSmL_uLc1X#e%#h/\nhHcL^"ZR&T2OFu#[LW7l]O>Fp(*YVlQf7n:1#fm;"n9R^!CEh_O#Q:h\>Y@pDnAY-e9e8R-Z>NGq[lK4jqD3e>KZMG(@(i[%;C`3m(C'$I+ngs;X"0$%N?<ssA^2>JjGE=714njg%2lR_Q;3+JV`kAjrHc+dBCFCIp45.GI$/Lo2TL1]..JeR*i<G!M%N<Z!O>B\%`I-9K*6=A4U;U%CIO[3X:Na(p*JGAC<"/E?AQ=R+Gq)';3!'_!Ks!+5&fo@PK.=W^.'M@;LO.![guKlZWaJ2KmA<nG(\Sgk4\jN>%S\q9GaXJWn=CM;1,RcPj17>"[[1LR>(<;;\?XgPRn#c:uAd-q>QfdkMG#l.2,X:70TUiq*2l(+cfJ(cM4Pm?]$f9Dn3>GS$Z9p)4%MR$]9o[ocS(nn[QZm#@\LNa^"IQcPmZhJA9qS8R3mM/Otp]]I-FEe:&1'W>CTAS$5:>[EO:TW_L&dY)5&^G4V-l(ms`.(CbS2XW\%RoH?-isKu#S>9b>hLccBO=M'S32rIAdE&W_cq]2fINoL>;"(X[`WZfo.DV($abCrI04>[L0Etu\jYJFdQ:s/ip5qIOf.h<Q"YVU2%WA!UOM`.h&[l4n@/?OE0INe+]g,^rj%k=%m95O2)_+93OoP!nu,UJir<0NL(`&K#p]E[\tSO=R@)NfT`6P2"6-AeKhe&cS0\!0k?%@&lj_1XO6\.(6Y0$H')NA1G(LDdsJ8JqZf1lW^1J"/fC;ArC0940D^)#GgX)0emd*RHdM',[rrofSUqM<JNtq!@ZF<!6?q=`@epo%hm!lp84>gJ@)g[6EFAbm&R5s,BN5/K'XM4/@tM-gdX71&L.,3Ykg%_#.O7#hjr=D9Km8>L7@lFu/c_##0o$E:dI+n0!=`s(@mfl*%oE0nN40YG0U=,uj^04l^V"C?^.6&#%i-Ki'<*TeKLt[WYDWm-j>uGr)AE7/])nhAiDLRbM3.53INM<7E1Ph&Q;$H,?C:Y71AG?WN%%UoT@JU32/6:GK`T:I>1)(KUF,(k.2\;'V\R(QD;?)pG$pdlO!:6rp+dlqTmA/p'XU'ZccJKGp;Hp#qN6&0.(8W*eC*54o'9_#i_%e;)AU^Ud,']R3;s)ofRbABo*5^GUK\>OOb)UqOgX:PlBOXJ\CK2@PUMShs]t[7s0DK^@5N*1TF"j0D8h1GXgHa#4VHoi&M>=`IRF%O[Tt.@4_GrUosO);u!s!rpTjUNjF^j(80s6*B(PG)2d-#liXN.\\#'ML3I5S^i%I]j?fdh6-4S8ICNd>9^QKYM"tJFi7Wm>4DfLP%f[8:6Aj]cU%\@E^j#aQXoa:T#A*\bJj6&A9Oqr5$O33Q.i]M*6,TXiV_<JYuP2M15&q#Oa\7>A+[sa.mr;D-@o(rJ,dr@K+<"sp5%S]/$Wi\kO/$TkpJk(F0G&lgCu*/EnkbVF>%^Vi>&)!K$<VA`5:Y*nk[lG>lZ[]V7LBWKMbgp]5ge*_&N6EYdN_EQa0IaHdCq9?+=%`DOEon<P(j/%(P>"@SO/5WZ@?"T`9Z,pU3-g)V=AeAJm3oB`-%Z=Ak6PcJdHS]]XN_21;E]pV%Xr"S2^gYUA5nFt97@qWOtn(?<?%[_@7L9aJ6DE"*Qc9O*`P;-[r#Mm.dfWUFYM8![[$[S(5QoKB8Fl^LrdG0)#JiZl6aJ#Y8LG]2h7Q=Lc>94l5ihQunR")gMN\9?)%%0S9CTj*GW#P8g,gn&Q-c_KNc^Qp,.?IXSL`YfgT3/hc''.TH*8L/):$ARW2UG3nQX>Mm26(VuGpN!>h:c@p\d+^2"FD*SYkED!eJ%@8%C:>oOGdPH(H4;XEaH9RPuZ[%q81ZL1lR)?a\p,P=tU]Q[na=MXtP.H-4rnK`c]DW&QF?QrX'H!GnDNuC,7.aXTu=O]C<?o!)j%%3=-ZR&FDKS=Z[h(d7G:-Am6BHUPfC'dL;JAWn+3.FVW"fYuM]4?Kb@OP@!/RLK?Iqp-?iC+*cSNjG49_AG=SILHd.$_AFK57^oT%2mJI3'WW3U%qUH"jX";?m0?Yk2%1#^Gn$?b*3Me?oYI/PM@>-OQKpjmPfJ2u!(1qi22?^D:iqoE9m55&OU9EQ!_l@9fZ'U0GdQnf%'1kTchrc@c+Nlr5aV%hPq+3KWI%R%T,b"K'M<pH`p\Dq<Nk*J3HqhiZq$DONB`%_G0@%#P:U9VPqtq_M?FnHYE!571cd-LWlWl3V%llMH&s-?$a+\X%c$HFs+FpZPP]4-AT<V0/U.LiSNUoD2dHN>s91n-OLjMQ\u>,fFIndH.%B`kM=?:#_lkkstr)6nV1Wt3raRl=\4%1O6DJ%;a(ti11@2*f7<LA!fdm4%D9M_IskI4Un8K>ig.%*;;;4CVqXNX7q>uD;>$7<Rp*?Fc4lsYnZCh4l:oGDj==#lPjm<@DgUB%XW`2;9.=gK,8RgD`939mga+u;6utUUd&uNHh2*u3o+uUYF_f%Iq7Rr"i:^qZ14,pbA.Wq-['K9lK][;R4r`CAeV,#R5PKp).Bd8)%aWQAYI)loB\aC`*.7jno,Sh4cZnP`1-B^9#3T=uG8C"XlDHNTDG&KrQ]'\Z1Ze'-/!i1H^J<^%\%D^2!CO&G$n*cWi\Mp<;GpNP5%X38F04(mS.J:KW1Pr&,)9Q`]<"sfK_A<>2g7j`iITAFEeL-mB(hcbULBY<5O:;Fd(.m]6b'_1%_[rAh!%OY>q(NTKPNiA4T46nt7%8`8=H?i%K92?M#6AZr3S[T7GZ"+$bo]-2*]@=;^#d00b(?dR!9*nU*Vp=WEa]UKIRpIq[7^0uspC;W:m6*#kO^g'HW9:*OM7<*9$%N%A0]6V.un7%-Kp&PRX,%m<lpJHQFaZ=^5NDEqL2fji,2*Nj1tg_hkoZYT_[W[oEI^d&'?"I0(7U'7\(dmT[^)%#2\`,++jZ-=Pp%IBC^OiK2Su-JT2ERdXgM/Q5qbr\6(`iKOZn`e$dN>B+)&]?"=i!p7H<nL9`'jH-j8:=Y7OPIui,rb)jci0_>ZOm<,9pOsDfOGYbp%O`RW9@DEjV8!3P$L0UXX@i\ci*S_lQX!!<06AB)O`A"q/HY4Y>&+)iFjZ<I("-F^YFUsid*^HDaRm"k&N_W@Q7l80iL<AiX5bqho%YS4$/Z'/V]]g5i6Z*#"K7.TtAb05>W86?r(CT>UNs8KX6nEc,doBg^<)AX[CH3I!*A!e1tGN<qMjk*iFJ@4?6(KXCF]IkY])&c'j%"'-lSZWqZ:SRVkI>!</>/M$PtKVQo65OD>Se8%E@[XrlUM0+mo6)5bfApVVl#Z!*@<765&n[l1X0d\]b'#Z`-g'*.opkU1d%/cn+%W^0:M:pE.m&u$s30j7*TUhJ+f0f+'Ff$(p4a&!F=]-HMZ$fRKD-j6R#HPbh2)rQ5-lVS.b_UTGkRGO1g;FrOcb%@j.e\ba@?+i9<%ELbC-LFJ7`Ra:H8FnQ1f65hhJ+,hh0RDLYP&8X)f6]2%)Fa>_B8+e0l)ER<_>#B^6B`51*;Ni-b`l"@5@4:M8In,A!ILb.eZfqgV%`Bi;iM2beYX3B22U96`&+N/!romDTArii%P\[<'^`X333m"2!j[E!g!f1<NUMaaDI%Oru7Xk6QCP_>TXnQkqf/kr4KDNDN@-ASKT%0&e55q[hNb,!KWm`%""`%O0lp;FkDt+V$UM0R4dUKLOBE+eqB_#JJ4acoWI8c^[.p^\$`$eEOthC&=+iU="lk:i^ZseOUDKiV$2I%"M>(F(ppdsoJ-hD\9/O)VAEO;LN+Te7tf1_9WUGK5EL[&RS%.jQF[+D+56ZF-<Sg.[>jBoL'aBb%jYTq[pHpebd%6DQAcr@b)d4s%ok$\c&fJeXZ-Ga2WF67bJ.4LZW6t=_T8WLlIq55U$58Bn<M9ao'NX-+DYi5EBQ*$mce`IM]:D(f!UK`1a-r>VU2P[/(D=u,'jIc-%AWf$L)rpY:o\ub[(qTk?B&<XhRU/'1)3(eR3quClrc:PN(;!N.;qndkV3bOZV^0pLW(jHSTC5mZCEG$-f\^gPC:j-[a#6k3YG]#o%Y(eQ:p&0Q`MYK0#!Q.Qdqi;V?HFJ%]I-U(lg!\')q\!K^7$/0QrIIY'.20L!T4pUHJS$X2!/P@;"9_I6D`FZqJqI[0^?Y@8MoC'?%9>.j^?Xo2@bcZ\QK9N>CaN3["2-LP,A"EV4ob>Td<YDrU[G@^G*28onp6q(F3d`$n>eT?8:KHhLFb?k`$oejM,m0<OZ=XnEi'Ag!%'lXi0-C7fNHXi-\L,RCO3C.uHXV^6=1ogmq=n7F3WepXV?8Y#Hb=GER"A#,X:n/r:hFYk!VW!U@(dr>nL'2+X,PEpqqrDGO[RF;J%P%p3s-1,N="q?8o'd6cJNJ4Z=(nZYP.o5q<8SSU4j<<@Qp2s^hpR=V@0GeA''f656P&au>/<EDk"EOGV#?D@1B!C2fl/U-u8O*]-%[\5sgA'oE*Xn.uRKh1[_lE@B@FUG5?ggGpM8YD2!St(FV5*JA)_&&Lk!r\`KR4?C>(*Y>NcV#`7,nfF/I1;fVSgPg<%ql`:BSqL<%8?&?>L>0XWPhJ/R4i'ub1[1SfoQcY-]JT@VFaU2QV^gCgZ.dVs7cpT'G58ihKJ2E7UK+*?hh-'.V$C]\08rG\d>/2^WMa8lYm5u:%n,*_+/$,<j+HpDiJEcZ_C8_K/c9`Z^$Q<KW)DY'n%5Xt:,!L?Cajb$nd73O<+OsUC/_b_rIU1.)Y5P6;Ea`.7-9qtj%Z"N,i#o14%8k"f'X@ro,j89&K>Z^E4=$7O&!_Yj`c[MolQNdQo-mHpsU!<s4`b0K(F)9%<E(Z#L5"S=k8ph)jD<Tif.3bg5,cB3(em9XL![2&A%kcH"kUmj3lgEa'=Qtgqu6!HT#)6AE%k:.^pUA%@U=!!G;(_[aO>,B#r$]Ld0Wdob)iug3`\R9r4i>Q=-U6:_PP1'O)COn$sT'jRP%5itq7$1=ZHeRQT>1.E&O4jur<ldnHX02Z#G*:$P/XDc23/GbH)daICFi\HnL@='pBbpD)u!'Hc4ekDFGV.8Vu%0<OJ4_;+*$VF;l%I8Qth*?Ai+.O@;)>/%g0n'87M0J!mpQM_Xn&M5?'A3uYPeBjRf<Cjg];<k($AMD5C0R$Mm9q#)&Or$/u5#]YiAS-lTg>_*B/%:l$%N7-6MkQ+md?10Y)J&)N=&CL)4nEj>sCJ3Sd+#2.YA=]pj_L=(c%LN[RlDV@GBW38*qgr@%+.B076.j<To`Ol;cRiLN79^MG&F;l\%+f%RCSH?0$nb-,Wg:`A^Uk@EPkQ3X)a)ig'*'rn"NcT95MRQg[/(F3KO>n9>9h%TAO5skqS'7#5h+CEC'Lth`j:boE?cU"$<7gY#%X+FTn8s^#9:Vo;\kgu7VG=0S=noHWt_,bX*DXPBT%=jbeTdfK+Y#,4!bXTGcMfVuX.SPOCCOqW4&7cPg9oeN';T8pK=<Is.NI&Hi%`*6",*@slDXGbT5R[04YY+K?_rfb6qh1=7k[$hjabeVK:0V?u^T63jrQUH7RCoF#2p#1ZUV_N)ec,16Z?Q1DJ[:5]<T'F51PhHY$%nU,t;)s]X5D1R$dlD_4*c;*?d"0b7+.[qb!Ks(U;8\$P."`(gsUW[lnPT?leBuO3Jd#$TeJWfpmQbG!\bN=qo/s+1/e8h'H06K<l%$B):Wa-_LPpDDfhUF9i!nQUiL5;71SJ$#"m64[g9IB;R9l'qg:/_<6GO4tt1=R=Hb>=Kft/@o;>Ik^JQCc%ARd`G]sm7V6SX\;21%X&dE:&t@E"?II3-cS/bOgguB9Aj\q_RDrMN*RMe2@ng;sl+E0F.U;tIG>e:ej>d5d>2\8u+K/^Dq&Y<E=m(mb[?Y*N"1rhBIkI2Q%?6O=TPjMsE$\lga&W'CMTFr\rckp]2faWqJJ<l2U-'_WWpK`E9XcUHs261)XppFT9GAiM8R2&t*NV@YgWCM+J5:;3"LnZ]kdbXkj%B,JL0r,^JqfTqO<Fg!CH8;T56,)Y4?1n%jP?t3pZXj^pR7[VjmSf)-?VD?n"StpZgjFQ^H2H$f*UA%*C(LjZgcK*GOC`"N/H.&\:%C3;X,RX7%>q:\i_g_t]@B;<>I(>C#*D2KCG>Sud3$.\2eMpq"][?f6d7<g8F2f$AcL%P;p&5qOQP*^3&/=@5+7]e[717#+A#%.9*%LGC`r=[NhufX=r#)nlpQ$RkHUo53(:f&+]!."U;MX1@Qu3AY,&JUlW,cV5Urop_aT&qLdn]:2G;@(>=cI8(YkQBCNC9q0"on$cGP%.L.Q5D:Xf$]'ZidV+f`^@!X8tkJ)n9A=5KV%341am*k)s5JN^uV1U54<ik9D^SktB'72!jV\L[j7)IHHB&;]oV"jepA!OXGekhS(%[J_)-LO6Ld.<eb%RHL'@0&Q6Mp^XAHm$RX[2l(A;-&&g'.)^[Y9^"'K#*C%'p+<Y(`Q7F"j*Y<L#eL9o>AR'%luXqiUloDP_CFU6%P,_Wiau;[S_0r9b":QDOCm``rZDb(28@\l'rPDp#9I.Q'eTIUI6Vu+U<WA_2K3F!SF#4;berm>Xmk?.uGm%8p'Ho6=Q1L2\E?E?)%G.<R"*Aiu7>qgKm;):XOK?6`Z1Hc-)L!UA3&m#H[35g,5*QXo!Erapi_)@Lt?_7tH%83K%`>otWT5tU`@MKE1@P'.96B!G$7?srk%jSE@g;&$j?ieog!5a8W'm^]FnBSK!(Z"g:kg:HO^6sdXJ_Ct>/1=+@MEctk<a&/g@(-5I>.!J9p'AOBZ0I+Su$u+?:<L#ghJ+J8V%k\;lrQs?:I"g_+H*0\udAD@nRh)pH1=K-ErUmGedgV-Eh@!"jlcbGTULak&I3S7h3cIpT6`;J]W7k/R."rMKBDtJk&f1:N/Zkf6)%0['3pikkgl4u:s[NMCpUG[K'2T1JSV,S%STH-a?CF/nas@f_\Lqfj9Tm:89TqDIDq:Y2:Sj?9>O5#l*X4q>"\E%/*,ePWJD1,q1s%igF+`gF1=oT7rS^O[ZK%BpKSu<kKD+,1()I24h9Cf:<N7(umdp8ofKHo3H<MLdZ?m%j]GGlNIcQl:\+Xkp8!oE>C!f5tUnU(b`!D%0Om:E1mnP4-H8r2!OlecT=i1Z"kS/K,@u:dUTBqX:W?a$ds0c)DknkTg/WcIFe?c>\0OLYb1d*W?.O@$*jHu65M_HDcVqYtT44N0%T<a@j3i!*1D!udToeHWO@4Iq\#s$SMR$r*XaX6jb[KTRWH>bA[4B64*N!kL%]Y5.l@DS<gn.*X&d4KW'?OlqqnRj'F[L?gD+7#/T%#U/BYHiOFopcp6krgp3X;5pk-n5S_RP4:[eKrY+U&i+nVBm$sdA(#I^(dM/l<KpurT8>'H%jc%d;J,\(bXOXT:Yl?mRO16#gf02_%N'-M6k?-..UFVfU$6H.^)*VAq'rC1To"^@!"%cbLX=,anROEM5h`FdarEc0\TWp=]jei[=6#Ji@PQk:g@bD-nL9/iR05D=RjA]Tn%=ueMS6oXl=p(RR.).AOC3?>[<>O2k7bZFo)f^k@ZU;2(3JD@RDbi'I[fUtr#<.`#P'<4i@pJcPhWoPLh?G+3?O9d)P`f25_Ct]3l%T"WdNM0h+\hFd.-BPJt&*MrA/+nLLrQo/EB,E-V=*?_KLI2d-!KG=heLb^(BrRD>L0lNBSZ%Y;VSQ_Dt^:WU0cSq&IqcE(kft4Is%mcS?LqNR=5prkT+I_VhlLKJG.afGf*J#Xc!6034QFKdRM<QWm=7lb\B*+[c!>W0jK1n_i%(:Q3mZus;9d[Gkg<,;%>k03-R]GHYo%!L;WMQP:)\\bFJ19>?>-a]MM!PG3XNrA-E03=2Bbkb\FMMA&sPXlidrjub'u:&UaC.(UOE/3%&Z==e)Y]/9F*Zqq?&<>RY=;c6^t%WsKZb<r&TGU?N#IMSi5dke*6qYG_Lk>F"77_,1d#q+>^uor-_4'+4^9TTG>^OSSEFL&=FD&(e3*F+9K?<KWCn9j(W(=c"F>pRE<b%4[`l/(^?Hi.jFpdkiaa?^Qe:+4XbqFZZo2l4Sbn=J#5!.&QU;5\l`!Do2&2>qLB)bWTdEbluVbSr3V?hCCGu62YU4?N>Er8O$\ci%_PfA-RqK6=^*=joJ_@;<X497N9CP8!A"nFuaMZjf@j9pSFHU!Lilii_Dgb!u5&?U5HF@pEbtC(<1RE*Vd5\M-fUc#o?C7PKWYEIO%*R?:4-W;:]a@K4!G&/LHiOG^n%ef5_N'-J*1+)5gqPgYW_*74#$#Y/Yc9?'3H[<,BIa(MG]T<VF[$:%-0m8b@Z0f0P$J=6tS6EU!%#IfaXhqqV;9Q8^8Y<"=OmoOX@eFcQ!S*,!fX`);6LCJ<#\!HqL0BKFN\g9?s/QuT$C1-JW_V"m#jXf[l%i%&38Mr.CAr7q-4jMl+%O)%&h[5;4MMKYrHa-nBLRcpfO$8QJOMk[Y>Y'XC4rXXZ/4WrJ;EQlNQJB6OpW8tTt91!Yo%R[6b5F5e)G`Wbe_/2qN?CQd9;'h-g%mR3adK"6g.M^9-MSA?Iu+I/<G2(UD>4GH/8->.<8,:0!\NQs5JP>2+#YS;>+@&OuHad"RP:gbS8PcS?dCC\_@,BFJ-K\%b%#\R]a%Fln+/A2Q)oUb^@-R?0-&+G5@?9qJ;e-H<h+9OduB*1N.+/pSbhZ:k?5<jGY^:oFDG,Nrb&XU\.Ck>5^nNpg<]jlu@n-a7Jc:Pu5,%ZRj\77Y>T<Yqe9EBck[=q*La98!4@R.7&hu@gGDuhE@FEEAX*:G0eiB>Il`qMZPP[;/s;N^'6?M^qWMKpQZd>!^@R*?l]tiaf*Dm%J[M^4Kdk!O&mA[(bOG.UlZaQO_3ss=1-spHA9`#n=qd+65`b=!"rJU?SqD-fbdN&5"iAKVeGE"!Dh)H>TUH[+r'KI3J)qF7TNbHp%]V=Ed<"gK4R>5TdY@d@CB?]Gg?I#Q;d%ECT\;,qIDa^o?&S!LV\WA'%R49,V(\9AX'S_7M'R^3[<.84l<oXON<uifs(X6B2>a?kr%$/8@78KYbD-!PSkhNIDGRPUkt*.%]ZT:Pf>)3OYf)J*:b*U^DuZjeeF(Kb4Y,Xa7m=`J]M.KPGHZgX"+-mPA4\Hm2+P2VQ44Clng%&D%$%_%&RMLY>W%#RVN5"p)PLfp?J\KG#b?`oU*f.7jLo>G:DBQN;^b982BSU-EgU[`kh4GNd9G(>Vt7q>>KRcSA]0`kH*(U+(As%+n>Y+5&%63aQD@s''=n)G@.-ka4\3Op*TY>/1@SqL6I&:gum6]5M-pXpTS:<FUZl=H56]8fSM%[Ypo]id#80^gaGOpGV[i)I1FmL%0(bFM!Y64lb(L=o<G@N!.QN^WGGrSGK<+[\_2DG^KFnf<5mP.`gPWs'XR$"ikZZ2L5QF)r"%5H['i_Ig/#JjL1@.'4pR!(bo[I7p%;9#oDBDOT_Z^%>5m"XS_,_\+CJS&ju<(+:W.,oU,Ft=u478%\oFp0%L2u2<#6&m%!3Y$TLm<,-t#d%q\O[&uN#ubdU706AULtE%>%/64o6g*0G96V(d".(#5EL9"ld^uCbc5`l0S!AjMVlRjntZ>hU,;W,5[bDXY-"AbSol-_!4!)L)<O;p-V_h9Hih4+anHAXI%PPd/+%Fs%di&i-%U/.FX/P3If`cW!3s&RF.?jY;eu2d%W08Ld@L!Z!?3aO=UbmsPm6b0-oOV($IlLAcP0P:^U[P:c..JH;/*p32q5TjCQ,%:tXVs;gdNs>=9P#I3SB`J79B1f:/iEQeU*fNiXl"(q[=;U^q_s!YHG]'$b10gIt,-WqjM^,ZWitMl6s(-AEpI4*d9pi5hC9f5$N0%$_SB12T1?=fe]Z,LVq)t@D3\lo0[5m-<(i4C0YVn#0T]_2rnR18[_\HWredQ-"s[[jAe:'X:%>_<VrNT2L]&[=\;1c'JWDaU[OV;%PU)0k.Qd$<\P#^["#`]J7ZmfAR93G__dWd[X`>WpA'M(:3KU+:2(t\BR(9_fk&+NY=W)rX1!$cFYhs17X?7`3.A:deCp9%^!*ZUY%r@X&AUJ=!83R282TMj2V%(%m'].N?^d[Z\.85oi^heq=.'6Ef"")^mDXL:EDUWKSN"/0n[guToPR]/VoP(^-tJC20D0UVU3\1[9?%9`V<=,T020.R9df`FQ%sVt=u4QH;2+<LbisLI62lgV?80k&7N1S-1Ug$;J^Q*+TW,dFNtZL1F]@`&Aua5G_Hg\-.Ceb"5PHn0BB:%59)&C$o,:]/#4rs@aUTT3u5AMgGFm_</l/)/+mC-2jeFGcD)=G_'iusRAP9a*sP8P2u10-"W9J]J6?mLp^3k,=4tfWH,8b$aP^Ff%Eb@OV/<=71E>OQ*Tc)#]h2pG<gJ+Mra-tLLWnPPi,a]Y)r*t`j?0.$D8PTCc4,>m,/'Fa90h(-s>T"5S,<8AXJZ*c+(l^8r</bF<%R[K_<1.Bd=3+R/^)EM2_p1C(`DCRE(J;LU4JNk]r6-XFn/Ys#)>2F=S'!R1XUPZ:_al7"-IX%d3c+.K>/'Zb;]!LRT!S3^u>LBel%d2*bQS$48-U6r)F[u]X!`8;Qr"pV-dhak%@_^cWa#knN<I$U[+GDk5l^J:coerlI(Q.ht/LnkWu=(Wh%`*o8]NtK&AVs2K>G3`jf%YX3@;7ogocC_139BhgUN^Ie\:g"<NA3'`GZmmaF$32E^__A_I$Um=c%3KU-rWaj<oe!!+'3^tR/)TsX3%FtS'8YKme\"uQB,d"S1%2"Xr]DELG$&2NJfq+T:4W'i)#E69s']ePaU[tQ^[PLWcg"=(t&j9B@R[bStsg]Ni^l5@W/1^'la04ZW-!3>t03W2coWM[H?]s+"l%J$4I=r]J,#Ya^__f?'gLoIt&^IGM07la<&(\3FOZ2:gcNIMV%DAlc(IC3ENSO3h*>\sdT!*eM1`iPmA*$`V76p2fFA?%qc`1%[5X%GD*](Tdt@r\9gS&J;er=Y%h`-a%S3*9(@G8!hM81mu&4_dr^8YR(D"=Z.&[$YlB@p#P1c\4YJ$4Qb1\\:q8VkGuYJ'>%3%c<+Uqi%*gL>%!bR=%>o!75*;\(]N1SA];s6^?Hk+C3FZZBT@n5acM%8O0B9*H1@gsFdo>96@*!9*+37`=JkSbtd;AYt+N>'jlV1f_@;P!.'%qIKr#<3QsmOltF:VVKaqH>7n$15@#ARF3,lKUK5Z$gFZ^8,B[.=]nSYP[$G_<ALHimlA4F_um'UM'(/hKni:I3`M)$UoB$dHGKL>%BXsM3+>NU)[J'0U6s0)A85&-K[og(#Di3b$oqri,V_X55A")p/>TB3"a4_F1&eg&Aa5"a^,XD@U!?S03>%'f2]FD^4#YMO:S4c]R%L=cc611i*!F)l>>9biG^`j-"'V?#GKA:X-do/S[,WPi?9@`^5^O;V`NdX"Z2MO=jWBoU4SPo.Mpg,(8EWQZo#Y+HkEH4JK^`\li0%kGm*=eiEe:=OHc#j;#ZqB8@E@^9(a5Z(Y:B[Hms-)BrrdpOZRZ3$F:sn'`/_f"aW"oQ_3k=^+$5J?h)7;Sr:Cg?c+=@hI0D<K@=Q%qUcBLneAi_@U`l!@@q0f&B/(J6OY4;=<nb-9l95rmMXXlF_^"$F3C7@A?OD6,pr3C6s?(p;?c=[/n7Bg&CfK,@4Y0C,m"r1BgD(B%1L".904X,!NFA-XhAm!]3L)64jJAI=V6]6iq&iQMNKR"`gf##dNIboX'mpRZc-L2q.mAtc4udjYemUNu7%"7jpAWbN_>#,$U4Wa#%(8egI].*<NbZRu#/2L"iB.bm_@`5:s[$#*R:5FkUH^Reke,@$TDOIO8<VXXAN*&\-N3MKR9fATi+ESNr:B\Z_H$o0:dnrP]%-9>"%[##:p"4Hbo<""`q8omULKge[Zq;+VM7?B9dHR%o%)'EPBaX[N?R-_<I=AJj/dWj;c.M"?[YjBJYQ7q73QJaHrE_K2RXB6.8T0>A<%P>+TF*.3`V)2Y6IXEJjA"&chr^lU\Oet@5t"RC:tF@_";cL:Ga^eB"G8=B]pDtB[(ha`-I9a6k_\J!-BBbBR9AEbh9S4N62oT5m@%1`?W4[$S<)60i>&<*:NPW3>'r]8sdt,@5=13%[;F\E_n'iBltNLcA*U1KTs1:a`90&=6<AS"qQF1LAI02omMBMg&oRGRiW2U4Za*%a]t$S!8\8eRl@)96o)#3V*\%T-LgJXB)7*]lH0HXG'-fb5-&BtofI5e`m6@HCTocspM8c+7&2W^Vo#kg&QJc8ASEmldBd<mb\7*s%.`PJi8@c)BZX<6%Pnk&V_`;llX_4/N=\7oI"L_cKgGYUl23^OdpO^?3=(9I4B]*:[iBB6P^GmK1=ag64lM%i_eR-SCJaE=PI5+aG%h86,UbV_Uaot7G(nY2!!#H<j%=aMXu<VRU66uogN$#::o(b7s.T%#o%PG,iOY+H(sF&-m.Qg/o1kCQC/r0/MAk)*o3;eM3g_YHV_%FpH.;KT'T=N',k+ohI]rl-Q8P89&7kGOi#>9QLb>LS[9>eaVY_kd<7u3m('H)E^5DLW2q_Q`e:Y]XflT<_D'q`2^I[kZ?''-97`S%ASRn'8q9$ZmP_d4ZQ9)%+5_2JBo2u,+lqYYh/QQu8S>cA`rgtY_)221NiSE0keS>]:bWSSJ3F77'j;;uJu,!?41IiO)Ah/(ZTWi&%=cWsm*W2ZCmlHuSfgeNN55cn2],"G&ob9r.35H&lXrP=QNjdlj_`"[k-e<-IRegtFnp<O;63'IE%_XP(TWN.KDVh?Qf=$)^1Z-&%%PumMjHf!Yds+LK;1uZp6M,/?gRU_!_q#3gc&,I"q%#;QqV^Q7-)afe60UA@ZUQ^EI=K`.j?m<JX%Ic[X/4.^6!gVN])L9tJJ2,+M%<FX_^-73qTHg?Le7ZNf2^b$GVOG)!0.EMcoUKCm@B3;7Rhu)sUfmjP/hu-X#ciDbHbo>qbQJr*O;SUIS>dWq*PaD?7[P;Pl_-HlY%nrA1Ddc9Z77"7t\r*GH.D&OGNmRYiArAIB$FVgq&UdY#EQ3Y)HX?*jc;cFC2H/,:]A5Su(XVF$B:"07Fl"dK32)h4Yf=HD%E.O0F%0!?OHc;Ti'7Jg*:4QXP$VV=5PeaPauq:%E#1&ADK>1@>F+N*5'9c;PQ&+uB-f?djQo]kp'9a<9>qjVO*hkqq$Y@EgO;LpW,!a5s=%cK+jZjYJ4>VWfVYGa`B5If<WP:U'lCI[fMaoMF;&6=bdfotlamS*a0DP2k&/'H!jJ6T'nL`l7$*U2N,c1KN=\#6pt?f/ICl#m7!R%Y+d=]VFb3<\Nfj1p^i"@l%1VlbF-[E(GqS$gnA*Gbs`>oA/E8Fer86[+snilEmTh""9i2,*;VND)8u.5XZm.3C$u.cjJ"NskJWX6%m1PWV?t*QGomjT2Z'aW*pA<d<`2L_A!;.N*9qX(HBn-Wp,O?R]+Oi=\J0quto7.3d>f[Stg)2BMYR^ui'KpGF5SRh<)W)*MiT]0Q%+iY_5pK'uo2lNgOeaG*Nl.smnKme2iG()a3pUThG;E23PO-+stHL;Fc=DMF$Jq-fG@\4='89\2^:[A*_EFsc<'75no0&@p50V8lE%f.9D*p,pW9eDX/tgue:"imQKA$T[7i5,VKp[d<T(h($M+]B1so7Mr:2%&EJ]F$iKEEmAHJoZV=Ao9pM:_9Y:F).(JP-=o;FprV!R%fEhGEejN[lGH'K?#4q]$e)@;=3T.D157:A/6pUs=X"ae]3tNQr%MA8P!u#eb0H?';!op6n\*G5+0m`?L;4alUkBoE.DLWAO>jE0l%T`YH!Rr)su*s7AM7R[Nk641@`kq1P2!9E?/Q@M:kHt9gCl=?n!qGcZ(::+Q9"+c<)=r@p]&KmKCia!tEi6GW&PC7L4;=G&2!TpV7%!Q;4l^aJKq*+C-&#=ZKqU!EjGd-*Ahd'>`0LQLK3,e_GnWrgkHYJLkcSg,tq=b/.68SDdQ%WgG_V553anDgqlg4^Pa"bZl7IUQJG%iaYWSr2E)96KW6]C27*Xr=#@C8?2fh),QJ%o8\h'Vi3N=hu$Y]T-gasHf/!-Ii`h4IqA9%YC?)GXggf"HhkE?,;-W]M1k3+B8$a8%#PUciA3!oCcm]J'@5>J9jb^M?k0ue&^rSlZfbK(:SW<^WVJ[NiRS>CMT$LMLg"$k*ffRiIVP=^O1&14b,mQ,ddctL;`.Lf=(NCUZ%<Q=/D>6MEM+Ap7b+EThkj$*<8REN4VmHGkQqr,_\K_Gc[$l2F;8oT*RMSNaaA?I@-\b!Pj's]PjmM6mX56BiD'*7q36+]@Z4r@FL%E)uZX&ss1JW<%'j8Gq?ILu_D$XD1;!\=iM.%%)b>=U&pg&HpZ@)a]&kIh7`A<7m="4bn;gF!adeT)Co@V<&M#>Y%c@6"_%ff#59t%Np\5H9d$RLk&c5Zoib7c?6^lLdZ:U0;etH4?G?3b2a@2mcbFr*m]57DNt5T9DZbLek52?3n_:8HnFb+Vp7K+rh/>K)rTugsp&+L'%)p7XLk.gi^]D)'nIeL,Jo"/hSqrXpis7[VMqTZKVrU)b\qieelDu]J,%tFNFjmR'TrVZD>r7u:OJ,"MB^on!V(Z58;J,K965J2=;%iPY,VrkJL5Rt#J1?r/BBs5rKOJ+`Zcs8;OKs5UTV7SlG3`uk4@ahuFJeG\FR4oG<6hgPIjcbK>$2h1b'TD^>:"97?Sh`cP_iR=Es%[r*;.?hq$W,eR!3mbDf!5S!%`SU]Y>^Acr4?[qsR2ge3r9>;`u>d7.RE[:YADgq<6Dr():)`$4H5M#L7s2DmAh^HnM"sLZkMSqII%cgUi"X6'8??[_h%o07[$?amrFO)M1%NUqR]_rWp7Tll0X#KL5-Fp15LF9c-cO,$2T$:k7\ZGIJZ!3?["<?jhLTW554(t`InVKS)h%mYKNn(<3rV0ajI?K@+3[&2WJ`*sJ_U;%tWgHAsP]KrLIBZ/M\QR,N`sKSNBV=K'9:'AE*I+`E-)US.PS)Y$].5C=''+FLkceoBMu%mIQatRS[:$K,A-nG_;cP\CX%rb;.Eh/Cbre`QZn,<8iZIa=>sZ5t3*CF<qR1k6THS98;N&Rm?Q?&415j'Y?V6maLX$C!,FqZ/no(%OWS3SY+Tg(%<0NNI!k'Bk%`u:[E'j^CQjmC&%N;I\0cY@VV+Ns76ldF*u4q!W&"pn2jO'QKZjjTJgI1_Wc;J"&?I'H#m4'C>(ieM%O9S6cE!C+V;L'S.p`J-[&/[Zc^-?:_G`"'j8;6RWd_oF",9VgG_`Kn0qg'Yt&,><"7.;#V@Y*MAkEYC1Wn7F-'GSf;,aR.\Yg.5p%kh;#@(+<VPL7k.I)WX^K'IZ/EWhFkNH0^qJcFIK(jbgPgq#Nase=)+H,?BN5(et$5&W;^DY4RR%g-*n\#&K`F5/?.+-]DIZ,)-N#%-@=?D0@a)hjpgXEbc-RW$]OE:Loq.Q3]YbPgs]0SZ&4t9MUF_KGF9U$HrXlpNGEBEV:2`qI=sHeW)o`Naf+Z8MuD7Go*+/q8^2lC%/`]SKdX*tt!pp%7UV_[0,$L,M^Vs5BXRJlMAO.GYB4WgK:4RG4HE1!]-&?jSQ\m,#+KCFq4[qb'[Ygp?0$Pmgj^#5`Aa@eSd/X<,%LP-6VH7cHG/@9<MNnI5dh*5s3FhP/jSe48bMs8nqJP-%b="\Eh[CHi_h$6dAf%,re.4?Ag"$gE'jt>F`r`G/IhihK/R"EDhIhig`%_DXk>GB&%`$B#Z3L)c/FNV84tFiOHeGQRU,_&,+*q.'8^HV:,KWZooK+\>d!Ll8(fS(35/0jL2kph1e7[CmoI!k-BG1HVo>kunN)%n0B-:<r>(t8_FZmVLW*4!!u=<3kLCJ2_FGF%Y(nXk7bFZFKNVT!uPrG-Gjk$aJ6#++JI=QZIVjXZbMUg?2bfYeQYTh0^D@<8ICnO%2FO[q6F'1r1X6s_Xmj7p$<Jje(KEtA_edqD#`uhk4'J+Z863t?fL3$*'?$_Fi7MlJG4TJ2?6ud4r`g?mo)_dTFUX+"AMUpOp.`Qc%i[I9N^&#;n_a0(g1>s*S;+0[iU]r2&h9X(h,LP_e4r/9"&\#Vlc%H+*3o7+@j7&lXa<4_-oc9>mSu.Z@Bm#u(3mOG*+bl9gcQ*SC%JYu&mABh!GX3pC@RKFZX=9+`+_IiW^OnDnGjRbnp!tB5=UnPEM3CU;6O?>6T8E(1&XJLs/)#6Aj_<_3@1esb&"!GgjP&+O\8btK8%E]N*OG0ioV[K*^7YX\b_b^2F54PG+"._YmE.Hd?3#&mZUT>e61irl0=oj2330!JOP?4dA@3Lh`-r<q21_tL/VP`B/>N>iQC0#B31%<Ll29X[o:Plb\1]FL#\PcQGc+gmZn-rg%a"',s%>c?<k19DabfdD=iaSPNO^<]_tKl]_%1O.'ARdt\Ikr8F83a64-pUPi@RKZW>c%3Q"dAC^8^CpjD1HDaqt9a<,hJ\";B60iq"l;bZt"1Wq&OfiZ7f[:ob-h7m=q=I]?cc.E![GJDh52P5<^(Z0Z6m<@<;5OuLWl/Bm2%kjZu7j0U*fke&-j.SF,6krRSr!pCqTeLCj9lNi66\faugEQ0#&,u00!DH'W%%9ptR2so=I7I)L6f1GP[=!Rh<>B+4C+_[InbcH>5%&\D:\R5nO+L_LrjZh^JfV#RR.P?]PF$=SlDRiZu,)U'u$A3mG+_,:EAJfA-)+H<$(GY!juJe/i=Ham4`!n=L4#'W1%:oMXG^/"4o%S`C*_bshn"ih>_nm<o[4\Uo>(+1R3dIgh4p*g;Q>6@1Cp0n%,.9U:Dq<rL9"@.5lcjr3Kt`].;CP(Ql)/Wllcr6e<\&FUH'XesuD%P/#bDM>KK\*R5=U+H-NQl^10<qG#bGCL1\@5/IH(`o'^b"bG9N[a%1SRn2s%L\6HeCZ9<KHp_]o&OoHg[jB;j2^cos80^t:6;?u=%eNEVraJ_o*QF+Xs<IJNGk)ZQ'b@D<PM[HRpf(ZAg"E.``J+\:2s7?4;J,f"fro;&.cXW?WrT_p_#&e>T-KbgAS*`lD-WI-C[j.Pt%qV;$K04*C;:*58cQLV'X&J3Zb!/]$;`!uRmgHQ!T>tW/:N;AsILO6db&m/7HQ@prk'$KTjO6sIIJ`@6VYBdkYG7]QM\m,^GJS=*C%mscjMs"BROrjVsoT-IF=N+9QXjk<)SU%i?4LAV"aP0:r>\.fqWl#L$MF*dNJ`rPgP>S%+^MMD*Z\[He=(QJml?QdtiB?Bg:qqjRi%^e_c)Kj<Y\KM/ISbo`R]i@g=/r0)1$XS;a<*TU#R/sXNtM`$.ereE^kjV8rbo^Sn&C$R-qrS3FAf7/3`$buW9l+>i&qhq@j^\MeT%s8@T.o8"iL>9c`RPjBWLFMhn3YM/JG]=s[<7k/n0c7.cC*kZ?fjNY/%h,/JW@IX?"hl$5*17baN:aMG0+eq/Cm6':@md%d6XnNnY%rpb]`rlb`An`I`=MimA&nacM9`lhMTL^nI[OOA#ebcom!pV3$=Ma^W,dM_8OIG+TQ5KbG_"%Ed<VQ[ehZLgr>*84OZ[*i+7A=Xcb%6/sRgP9iSbANtbq)6!\.%'T99&=Y3aY)mt3g<)P,n9^Q;!$/HVr)=o1:2`aA">[#X]q1V<o"+.JTCc(^HR+c`q557`S-Eet`$TRW%OK4RI*Z"r%%;26]?B)0'(sC3[k)UJ'`TeYQMh(FZQ1?YiX]cguGfL%*mhdt&L#Cs@Q.BQ-ML6]1s5VE[jahTIZtsuDRGbld%,gi8%1^puiGWF."e<!ner*#')N>[0s:Ap`FO[MQ_?F^W43N^5slZdU6?kIAk8#nf-rpFk/Wa:"R0JOI_X`6]C;JreR&&=O;0dThtULA1$%"e`,L;nk"/;8k77G_Ctd-31nI.%4!OI>5q`28k/&Pc;:Q>a%=>Ff6gQhWhCqe&B6t:H^/bU0!].$G':]r[Q!:2s)"';46Am/#;$;%b`Ej(O,@\/=i*RoO@O,uRR.js`=>cg!/Mp>Omd9ZS$C'?.,Pr%T^6joOJGe@aC%=uHn1XVFHJ=+EA1s%-EY33C=E=(16I^BAa3lp%VmFoRi^OcJpo=%2ltCFeEptq[1]"4YD8mm6!g.LI*mFMC^G-I`l]s!o`thW?B)#'$bVCi1)]VHB\TMJ%K$@NO(h\BKW'so:9Ngh<%5Q^TOQ0@t$N8^V^9si%3s/pd;G<\-gi.9t;AQBq^`M'mp0P:@WWUL%-'NocFBdgLR7e\,;aMLPlrFi'2F$3$?4K90ETq*(X%_Hqp%_'GQmLQ\i)Ou'Upj`AV3[f\^?>fXW7YO'B$;j'5)e7Q>-(GlH0CmU;<Itf0_4=[+"SR9&+o,/9>dLPSQB@8Fia<[V6E9AN4*cmi4%IJ+u03^(8'qC+$39ENR%?CNm8Rb$_:+^esVTfQr0pW7KK@\5&18<#s%`$q!(Bc1L9K>_5V1nnrektI'_+@7gd5-2h9BGM(-:ppHS%hM]$f[8^]hN/9t,Uip=8J;bln)bpX[gh/YUX_V:A?o8Um%W/]hWgla.hI\I28dYbj+=]t"V8&c4XjcjhZ8"DE-BmOKUSi[T8034*%C+Xt;2>h_\iEMP^LrEB]n`s'SJ^kJP@6l7O7[ph5rMps1fN]>cdGk(g[Gd3nla9E8/?81m(a%$"jr\O?>RRhP)C(F4]KPmeq$d^W%nN.'LCgubQT$pg?*Pj&bATD>#;1F#8eTT<M,]p!.$8>>6't.V1lDW*.XCKpZ7p_kiF_ZkIE/4PIRJ:hKV#\l<B#>,q*Dgf^pa8.+%V*>)\a7.Pmp3.Vta_F)IGF.qKMQ.N:_qC,lcW*AbF<D+u'EN]%XYlZL5uYOVe/U0[AT]g'kdQFR:70i%5pK;[h"@n1WX"FQnK8D4%H#aALD0Y/N76cE+H^,V@>)]X:`:SK*aN-+SpZZs+o5[7nF^?t[K0WDdF!XI"e*(e#Vp;IH"\D9,j-1Rp;FpA3Y7=!ABZl)MjVuN"%>#*D0[NsRjj[Y=G4uIcZ%WK6h/HI<G<Q]K5oD@Nh++3jH&s\Vh%?+RBGM1eNG^&T3cZ[.PXbRQ!L$Wd38)>>u:rGR#?FjHG/lR/8%"2olM^[!<?3g5BD#H3!09c*XZ.DZBepE*H$h"q;JChCYQ:(j-D.YQj^+jUI$lF(=Q@4Pe0ha5&T;jB7q1D:($:U6E8\4;R5o>=)4%k/1DGaVER^@($HlZ#hg2UNSc#/'3_9!-)=tjjo.Nh!lVEGgLN]eS=(U$M]$[>'6/'Y&n(\3GdFo!:Q&$"jPh2i"DCTSYY7SdiZY'%I4YP.?W\Q_]_o9I]p?h8MOb=%-DU$o;bBC5JhR8[/MpHrG7nso"Gg/?$JkF0&aB6`7@@;F^)'F$lNH!C+$Lmp%pt!%VM!0XOb+io%+d^;dm.gN_iDCCc1!AU#PXo6<'A-RKFU&Q$M3D'<Nktq(+Xfu\P+]_QJ/Jc!"XF`K=I%19jj(Q2`B/g'F=,XJ\Q-Y;J4:Tl+Y_8>%6EV2m1@2V(QV"4LN)SgTN*"p4oL83+$m4He,khtM4t\)Bc-&I/XGQ[Y=q@rWdUY3^dR/#5>V'clK$'Ab"04u.(U@5E-K+2=9i(`'%$p#*hLm]\on0#<B7g1cN,&!,p<gX963#cmUY_kskNjHj'AnI2c%A\g"0gA`+"rpi^Xu15nL$UM,;I%VWi"#Z5N.rKVJp"M"k.9C0%Eg,>B7V$N?G*6M#1n#XERqa8f;q=K9nM"^3gf6Wg:rTUS4*,P3Ke5nRL+48)Z$67?Y5u&ofG\/t<M_Vk1kO.RTPZNL!.cfg"61L.%9@/:f$AlD(`lY8BHqa!9p]&F@9/.l^9L-!?a%p04Ojl:@c4"Fh/Jqo9![;-B;7_":6-,1RnCng^=M_m5Fk2IB:>&e#o-:R?'aX+p%p%4&G`,fLl&X>e<BeF_CLl?;g/<RV8BMp+1C19H.\C8Gi*b+AN1XT2-aeG"qd`:E4QH=H;^:m#:d34tUIgP3`\.tc0(1**,Jt>BM%<3]UZ$qM&r2+R^aVej!e!uVS+`6CDZ'\]42&HPPe)fEc;HsOC$3@aq;LPY7cA]6F#>5SXc7!U_s/,Ins<q'H&X5[Tr;QgpWCs_Z0%o/2dn6c*N\mU<8Vh%V/MBuR#G^)M#YoAV&cCf%X3_3Yi*+=+nEDBVDW)l:^X4G+#?\X4f*0g!DY@OpSK8>G!0H^"KmD&OMH?#YK<%_*#T]J9qN"V9*[K>$AdlCd3@5fR@E!BZ&r$5a4-%U5kK#"d.XBBo>5'1TX1C:dm)s.kLfJg`V#]iWe2^3Do%48Ka&5O:`r$$Yq.o%U\C4=j7X54n'Nk9`(&+#UnJ?_o\SZK7_USE;!:t(V9bh@UrX6X@\erFY_^b3#`F-SPQe+In#aoED-'!5h`htZ-9%pZ7JDLZaHr@i%1\L*,P(\\/(f;7TcppoR@Y,4KENb.L$f_F*H*SoIpm<9*h`mh@l0co,4K'[1S9X=,>-%AG8"^r(X$1;:YUA@cd*EL%Y+hdMb=I0H%q2r_R`*lY[s6eE>Y>&a)9\KJ.%N%h8I#1.E,SLL/.L"KZI9_b[0<-$)CK/hr,gDEKrSc_OT$M/4&bH/GkmZ@H:l#Qa)X;C*abnec%Qmt:?Lo:t)#[oh[#k)1f(LXJK,:jbrJZ<?b'YjX'GTPae<I,t?kPs@KqXDmho0nu0.mZ=J8O<=GUEf;SLC;#E<+/4LH*OPpQn'YS%b?1F!3Ua;4Ig760jFdgs?6=\+pV@2!$\=ZWDJ(#mopMJ@S\]D4I@>.(qTIKD!4D6.bu?m`T6k^'/_%;I?8j&sd8e'hM>%/qXsuO;%m%$BSXL8u1@i=5g;"AVmH1Rd(_3Ar$hB:tenVGQ$=bi\+kpR^5LH@,6M7DSXYnmT-O@c:uE8,_=G5<q=\RJ&@d1U+Q$:mc+qT)<+%B8SuVh^Zdd&A^M^-"rZSojW=*lqI;cEMg;FY;'4QDq+ZN3-`1`c,G?"[3#cq'WMY/0m"p6ZN";sX("gKGmO\g+sQ")T4&Ethi?-U%I>H#^?%a!7^1Aq@_MF:aQK?ea4OD/6%%s#d$<:lQ/pjkmP/qC_eTY.pW@1:<V`bCZM4H%N]99R,)1b.kaDqqANJJEo#9h.5$rrC:%an?<9<Se<-gI&C3k5!_M`9eC8S#*I)3eApKR`\Urk0IP^<anbqJImRaqhE7;Cf7ge:@(BY&)(pT&ENgAN6K6K@n^.Z6R99EOIYXB%dO(\.SN,ESkcm12-]._4N[j?`;J@U9l?,aAP4"W>_FY7P7-=nuCsHPnMX.5Z\g`eo.p*6XLD")k!u+DEZ6kaj;H#t?/+H.A[5$!-%&U<Gm3Ta(I+.0(qDZm>D@_p(m_;*#=DZ@s-euB`JN"U^mEa_AW)@pBBMHl87bT^`ic8Z_.`_FC%R;];`6ir\;''7U'7SI?U?k5#(%!(p\R^#s&;,S(fNr;i(U+%f-UlaGNP7U@^=V4!U&8O1rc9+tA?l7lmHmR/hki`Z$6bY$U5*?jo#N!:&*a>fukqRfJ_-9?FdWd&UU%0o_99X>J_6d]g`I,b+@-KL-Qb0MZ1Q2JM`t<'V5u]<3uf7/(<5S.7l+BsJ,EETSO$+>QR=^j-VLYj+$8&TSm;)Y`dK%!>59!YW_^%^cYse'k3Mbj/bqslD4pWT36l^#'QXEp08m^n9o/pq$(laBdqQ)D_A`Z`H%0uQ>H7!'a=kO0umb4#4X1OXI`2N\95[>O$^8_!YG1H%?lMW7]+$bLWEs'Vmascq^t&4cUg?2daOA\cc.kqJ$.FRn77<`sg:#"FA9I2Qp0l"m#G&!#Dgik/-Z0;FRsKP:<0kpfU[[NFqPpC%%#p$G1G^-@"i8T>eoPF7)Y&E'fJRYZ]/#SKSTDI$bAZ%a9h%c[V6Fn8FI,V0'BkfMJ8?"<7HKt`JN"PMDZ8HTr`ah-i&=0$CfW4_[%con`)hCAg3lOBS\XO],m%2c`B:0$jN_$L7!Tfte-$WRnGrFQ5.CepnHX1'!6AXp"'g(U;\LF]tYgAnCWd&:'Q$?kaZfB>Kohfstd%oOW@p]Cak.b0)I8FP$pMp]f$I3*'(qlO]@hr:]H[^:hLU^G:"b.CH&MTHen2g^!epls-fiI.E[-P?Wda_Lf3<=?>uQT7$K+2]`e*%k*pNecnmY[SK7IVB43*N$R8!1%hMuiENtnE82]d?dE883Ya8d/=D*.@4(BV^i-6ocZ<`QX4(ru>A?)\X%7RIu.utFT^<(<6.&@[n%_u<&-]$+=2=Q[9cWPZNBG\U.@cRqQi,XoJF.TpGtA<H&cDL9r($*nX(92!HXO>6:2YX6),W*1S_3.,tE^c"**4US%_j'6Yp"_K6V%MRgHcmVNB2:hZB,Kk:%LSr'l7PD*,:?dpq_9&pFt6`Qp;0+?qBiG<50Ehk04geNEr4N5e\;m*9Nat=u>A<efMjScrGW"]9Rq\`\R%,I,C5Z==3+ijY5Hb<UU0mhq7#+B8\r@9QBnAHGu7$*hqg;4LQU5\0VDgr+/@Vm,C'\I%m\G%l0JX;E<N.Rrh%Rhk\<;R0E:LrX#5%aiNK"",ShS\+JTN&.);pnh).r,`>$4G.&)iYqa(V$'/<RCfWs?8.(1U(6Y9S:b@3r8d]r((`*07bE>N!b/ZeV-=h%p""L#kQ]:7V%E=W=-4+i-C5Y.uZdPOQ,BdC==HXsj`8Z'*G0)!;j0!!4BoNR8oB13bo%o("KTU1H%=5MhF9uLQsHI!GmEs>C3PiT;]5#QR3Put?u%-W"gcP8Z;dAl?]E,BZFq/RBW1\t+^3Q3,iD:+T+WV@)j%d>8j=W&&[RcN"93ZU\HsiR]'P&9(]Lj2D$m9WCjl4Lb7J[H8ai6uK:5%m:Y]fGKcr#kqkb3*)f^Wm#u\7a?[Pfs"uB8c<KZeE"A_G_!jF'/D6jk$iq3h`=AR8_UT/&71!MW4q9M4AnF<8\p3R=Y7\@qZ/:?_%";*/a\=94%AQaIg`HnE376ml31KC*VdrOA3*P0-s"CYUo.l3+U)J0NrH"&a/Z-sqBHm<ZAM(fhK:#hml@^$D"`R-!_E^mP"D2^/5%c,/:-"Yg+)XK$K_#eL4((q1jZLl'Wb!E!)jDan'F!n6argDUj!3*h@5i*i!=qkbk2S>5R_Uc<`bW\+]"Fk'n3a?tU)m)4]&r/:n[%KfZ/toifPIB1F8"!@-D%O\)/Wlbs>k1qF8%gHX&2fAQOZA$EDI/:*juL_1,k4V9\T77a80",%D08ZS^/!CU*^ZtlIE_f_%doi&!!%QnmDC%j6s56qP^6TLg42qR8t'Lp/+i[4@FQHPak2GS2Hc,1ne>?]:*(B4<7qYn6mDLD^]BJC9`W#'8/923BQ=^.aAAjkCFlGP=KB%%[hm+''k(l(qQaWPWUdQI4,n/p.o+L@EqO`Lr3#N0Gkj[(8Jon/FPADmafacVi9U`$IV<[9t$$X'I&6"O(^,kn?.nlR:\fq;4ge/%1u)6!jt<"4m'Of$<Nh*`KI%M-[Dm3A4g@Ld6U"+P5WV6M.bV>uX#gpU@;*D80bd?o28l`fgWpIW\9Eju2Cq`d?#Lq+[Bss3^&tD@%4/RJp%I%)'8V+1H-HN6Hc^rh;M]LR'M)!<%DMa%&QQ8'2TAaX'6%s\FC^,SEJ<6pMm;t[@[p,%r$gI4Irlq4C1bS,P,56(d/XlVe%dS$qF<*g\-8]T_nKMZ-cjR:@+rSZj2=pXuH^8#/_'$B6)K_HD\or"Na](DMq@b$?:BaWuV7O0Z+ZqJ*!2Pbld2!kVfk!_kcd)]7_%'Kgtfe%!==bXGqg39N:@@-6i?q%7T08<HgkM-[]Yb)G;Y3fNR*Lph)+_(&AU$N_;rnfi^^8D-ROWp`lA.-R:&Ch:sL!2,5()M/i-%2POru5`r,-/sa-=<nW"NR_C+3::+Sr?[cFhGK5Ea+q6iJeEIAnfd]a`1bi)7BjW4q(2AZbo#bTIY`*-Pbmak];H(9SL1iR_Zlo<_%60p-Z[0Y*&;e\>)'ialNORigqf_APmX;)!.FV'*+M3F2]i?Ft8(79J"`1V;U))BB6?Qd/$<;=!aVI-AL.RBsT'\n=`e#?/[=_sb#%j$/4R/X$7)+3Gj1(EfCFAXDh5%,U:GKgf.PKZOudQN`k$3>Y.Q[1oMuD8Zb&RUf6E9[_#QJuY^i92gG_A=RoS.],['iKZ7BA>c.1%(&a[qc"G<,BkHiKPq-Ht(]br)aq\?2N!SsE)PRdBgk&^P,$NGO\b3pFW2e:]3YRFo:J\;p1/"Ep0[#[g=pB:"Fq`%d*0;aSGU"f/%aK"bGpE't^#_eROA],tDmTmK76$Ua_G-$&9EXZ<.6O>gnfh=\[Il\cfRq+.gTG=F_T.V`rI:A.oB9c!>ooO&_V!*rp1`WURFiKOn%O<LC%FK-uK<n9Dg,/J20"QA-t;HQTiL/hJCDCm`sES5iF\_<0>W;4;H<om:Dh^i:reXI:?-,Oa(+BbjrkRFVY?<C*B==KZ[[C;Qe%LPK,[\q16OJ;PJe.<f*,\r*ki6u/+ndT:kO;sa7pH!.$5m4gYiKiXl[-*ed;j.:=FkP\3^,#ZjMIll46p<n40hnR>chMQsbI#<Wp%JY5ghik@4+mgeQ>XM[Ok'CSqs_k#G8itl]-67ZLS_*^0'EWlJpdA8\tileL=!e+O/D)>DLT0N5CCJ[>)pR@&^TAfgg;EV4ZRj8RV%gN+6(4Xd:1&87-^fT<sPn)K=566C@VFCYs>eMa^#$<fK;@,u%fW$057+1Jpn:0]Ga,T%OLdFJ#GS=Os4IFt7d0j!,qK3q79XP]6u%\'3lLV#*Ple,r??VGAa!cfe38M82#r6Q.TZ)[%WbQ>a@=b&Y.SUQ=pqFOVBojIn%I83:/!d8YX.2RfTEV?6A^a7^jZ/:61k5EXJ"%ZuojCl/Nf4kJ.C]o!R's_^knJnVKBu]a08_mAYUDdB05YZ!]3J'$Q24go?F]a7hHmeq0?nfN:'](cg<]Uh/nT/*p(_p,=d.lZ(Uj%>!J-D1)G++Ar"Z_/hlVJ-Gt8SS1`S:O]KF5Rdr^\8AQ@9;<TRkA`uc(7$'WbBj^ssR,^F8m'o1\VW?G)Ai=2B-+%*fl+c-0aU%6O%qi;W2CM/^RVqgIcbl+=9"Z(R=<6[b/Z9QJ'RDejoVjKZc(M3I0'Acs7s.>kHo1-OhM_TWh-B6bL)A2/_pK[q.*4"2mg(Eci-`$-u%$hM6n*prF"[W)rb)2<WirMc2Z'(Xd%'2^u@.gGoMqKZN$[]i,3\(13OC#__WKE@I%ZL8))Ep,%NSkuWpenpfnf_:'jRC1bPAi?Ha%+R"RM)S5;Br4''$#n,G\K^1)]Gr9[CW.33A!qK4R^[2@-gj;@_;bk;[lL1*P/aYq$Rb'T+dm!L^JjO)&Smc7$f#S&sR=@PpYu`/c%8mf>T:&M=Vl_1AsDWfPOrS-+WqqS+/g4$,Qs%;H<-n80`\%07`R^N5/$=TG%;S(UHq;HUQs8RBLdEm/G69DKMs+PaT?L=hnIJqeU%s0!K7:S#1*%DD\HIp2nk?N<X3`#/F@[K-;.e0<-X2:H#a?f>4];DB+k"Yp*7aT?0\BXGtm@NAmh)9K84*c!qdD`hoY`t&*tN\K`3%3@;MN][MR_+I6CLg>7e0bDSbj@M_R)#TnM6`h^&Y-IC:u#2aO*W6aLq1-I^#-KqF1L!bDg7Rb79f%cK!QPi#<o[R3b6MSIg'Sn=!%.p<d]C/@">G_+9?HaXZO,u?Dh[Z4!7im>L:%O<7**Cr\F6HrmbA54kjeKTJT]O.eHlRYV-1BLF6*bU5)_%3pbM6GBR^+b?R9Fg1X%-GDA&W=54a%KupsC'#1_=h/RB9HpX<"cYd+UT%"(RB1ZG`r+''!-%\KiIEVTgpor>R@3;\cfAOSYR@2D.6^7uZ8,Y1+GS#eD[.&=%$75\$ZM1N6R]P+`hA,C(fREtL:*R@6K8oeD3C&0kCrhGU+p\7HV#Uk6AODb#q!MG6(piM.>-",:HZ.<-63.dHNEoOkeU10a32T=b%hTrY!,hgY]cY9@[_JES<O]R$@67C5?15c`r/OFK:br1iC0F!jU4Ee4dA5\bhEG&WjG3&8/iI;1Z12:?F%TO:)&@jS_L.s)Y,A*(8%BNufh&-;.!+H<0Dh.?o3nP1*S)m_89brhBNVS?]()?eL$BNTDOG0rFI4.S("F.R[V\5#6$J?F#&^Xt!!I`Z:\bHb",oT\cR$pNI:%Y!4r@\AFLjWP-LIE_>mmj5#F:oYQVKS-aSOgN=X,r%elkd;M90W'C7M*rC?*8.Ch[k^#4V1dBi'5_"9p^SVPX'lD%EPi<_s<7i$o%:OOCipN_OB^16[VY=G5BqG'Xr%]n>`k>QKPV6E!uU+=^"*j<U5?``YH0>;tgX1lJ8hm)bt?Om[p>q^/RmX32NEmRZtMt/H/k@8(0%%t,V)f6N."^14)%Y")i^HR#;Ps8!^GeAK9Im?sm=LC4cIh[lU$iVc#2(HL?+`QpC:<c;*6,3sP98B$kmR-?q$krt7o*uDc@rHQTo%kf<T&5hA)GHpH;AO'S@7p65PM><s$6bn%@@d^%d!?1-m$Hi+>`j:^*4/iP>q-_>eajEQH8>f=:cSl`&)p@CilEeu-ILMUk\p%E_.%isVK"OE@iBf6TuC#*(LP:qi9fh%VrbSps7*l($C33d8g*F?]Zrh<-lTV'A1Y[%CE^2u7dG$(S:-kUr;CFM55Vr:mk$$lkjdUUOQ\%\UXM2"m9&ekJ$nNcB/T4`;LaJ'/a1.8*<EWX6UPI\pu:>p'1>?6dFWCla^YYmIfdHAFB/W=(i(;`T7oe1=ZJ^(2uG8L7I`)%f1R.%i_sa@Nj!jaVe^3d8NAhUO"ueV4YNlWL@-BWic<:-&:9X[ckV+X@;#56d4ES*OGL-K<8l1AO4YFXP0'0(a6'>#+SFb0Rp37&=LY3C%OBVkQKjCkD4(MDKSJVlcm,i%h=DrE*E3bQ`;snWTn\h>FJ'nc4?i(4W`TAf>MOm[]67p2-_Y0/0'q;g,l\`q1dn,hcKe\5qNh#G"%0B=FI)g4j9!Q@SsCR*%j2S>G50/l!bHrK"C=)dSf3N`RU(_t"kk`(T>43r7uN^_=`QXG1%IXfKL3MUXK/Ac/RA'V=5l_e(*\_$^`%='b9B53M<grEfA2I]iiqLHaNW#63KV0if&Q_qKN/"`%o2iqu+s5[XE.*Jo4)Jo3<S(DbE+le,>>mWsLiR#[Kp3taNUX6,@^j*XZ'%Y;"dd^%T`5FM55WIK-mV%)0#9gmkfsbhgod8Y-FFCYc^p[ccAY/iaaJlR=dRo\$s_E4'#53M!FYT6e%a?gi&AFhRDBS@9U6HbDlG%?Ft%Rq/-cm7%#6_g[ou'R^aJg[9#KMFl].#+(Wfsj`Lm?M"d#*",Rn@_`VdSc\\'<5MjG[_-ZSO?$*dOq4+o9p;cFtrR8M4%Db9<%foORNEZ^@es,MBZ5*.\G.lqNI]XRe#^XQ%ehQDDR^R+h-DTKBc^Tc@u?dC_kp=GA=[f=qu>ut<MI6Ql^Vu:W7J,fG%n!Pp*kI(B)%iq`A)T-\5R7<gS:m)O-K=+Y9j5u^eIEDZd-)hF7%ZVrpK/(#<pU"U`hUWbTK[2CtEMkC;G-L]b.*5iSbMG1%NJ+j<-DUN`VkCO92%T;jK(]VkYREBBsHYTc)%Y/8rCRi2VG'qi5orauuE,EAiVFTb,3Ye%T#9nN&/nf/",8BXmo6\k52?EQu7KHdrZ"tKMgh;>"AkbF*@%_VIj:2Fsen*8mP0<BsI4\0Op!aJX;_Tk]Jgqam0N\*B->pRh3/Ln734*D:,@$3UgKEA&k0Z6'ejW=[>H.Lj5^;.`HBH9:rVm7qgu%N=(IjObpkoH;6%<nf?%kWCZe.rf7=Y_?5;3+E:801_g-MNLi<sX3)+pY+k&i?jBXfC-=)>Ljg8\*nd^<b[WJ1m7+C=;]1WnE.^&0%-S"G<(2FHs;tNH)L`F%&c7o#4U4j+MKbl0CDjdOS@l:?f-m)])7"!l`oK-ieGf^*U2rCYsgFpRF7(TTp$3)9JhPR9WKMZJ:"ApA@%AkmJ&FfdKp'`dJMiDA@n93)[HJ`eV9&f/H.*60VGD,V2%,Mepsidp1^f-pCE2?G<h6$>$)$0m);_s0'Fb825%jDs.e<MJ/S!R'H6%V]!$P@'*NjjbAH7?b$/tX%IYaht_V.lZ_]qO\VS,KE$M=bEe]DkbaY`&c&Q)WR)2Y*b0rKLDP1fkqOf/8'b$GP(Ys@b7IMlOD;-U%9M!d8=-%oDUn7=+:,-"//`)0Fb<?7P.sl`jXudRkhVC7LQ2A:mq,r'?'%:>+mHO*p<Ss_63?clSBR1@%oQ185f?p+;oeFAtLBQ.c%5g,I&+,#"KE2;j6:J4reEEB;HU2jKU`V^2GD;SE-N<#&TEt>'?Dpd?1b>GK+Ml08)_sa"shb2)+Qa=1CoN%Pcdkm]0\;J]\(HPi:%p=Ea+eNE--,5`uqlXZ'BaOD9kpD@G%I%dps6SnFZZ6f]R[D+DWf!5faE@;*LLWuB6*&"O^k];t1"7Ln<,t(1=OLF;?]t/9GaB3&*%#0+"T8Mu92RR;gVL$ZrBg"BiX[1D`9.RqpW@%9ZWlXRo;NH+A>$G2P^k&ap$b<,;H+^fMP'/W'Ma-&!f8C:WeE'@sNL*3;!'))ir%h3::-7*i,nBV,CriG4_7ROlsVlc?3Z+2mn/N:ionM;ck>4"!gqA0n475,+)"GjDA^3]kejD(1T<U0Xs`R-/C9pJLHr:N<i@]OH@U%5L=OEDh&`nnNM&1LJ30m6d5DlfA*KWj[Au[mAOArGSaTTQ'%^rYS5L]9/esV27^#.5gUdPXn/Jg><K-hE^M^/-it/e<W^o<5^%29%&a'KoTf:Gg^&TRRcH*E^Jo\/hGPTX2W(I3!rTi9uWOI(^';+AISlk,\m<-+O/\$%JeVn!;II0;>/j46O$PM#`/cFO[^`O0il+$3W%rc<#<o^)S8_`eQIP7GJ@ks!/Gk92Cr\l9.W%8@u:q;TO(1o^oc8S[).<M>mfgAq`e89?4[h*f[AEq8;NOqdb/^IAN_p6Hg]]95"/%f?D)`<3tm^ACLs[LgRo`A!hrE5"LR&(X_C>M4?e3jusG5>)ojM:+,L+]>p*F25^39e:<?%3QFEPbBd[9B70DXJiQtfMoUlhRfdN1%\>dgVYc@qcjp`sfK4I=)lGl0G+s8u3Z*:q.gZ6eCc*?aTPK1IemoFP_9LZBjLGPkCc%&:GS:?MG8s$U%>Ka6#iYSZ$OK,Vs1,Q>=%5hc3VWc6Q5i@.0Rd+E>pp@'3,L+.]K[G4.\Lp[JS,]*]V#T_#XOlk(l_Q;KIlGE0O61uK5.O5,d.D)WOkO$=g>cT4+DkmDchVsHu%'WYRX8?[<YDDSS\YX[etN\0.gA5=Q0N3B,[=r1,GAhd)il'\i<h-Ae9$uAg60$,T::]lja/>XX%;.A`A9&$tSIltTEN(J?9:qP1+%"FbQ%@^S:-o#=+PS.Qojl&fMNq%?Fu`h&b^rj;s@!,n*Vl6t2%^$Dd>N$<Z''W2O01KB%2I*R39*$g%T9D0"cEr`#B&W'V<KK@UF%/9#90.T1$p9Q+?jPr:5+%QBc:?I+t9J"IjpP_'mPOWROc]eP:0M5iW_FhCS0q51dFo.6Jsh)ZKS*Ri*/HSq^u@(MXTF_KDe"?EjS%,t.RGqVpM*ZOAdPf6j=J^8Ot^0:LUn$bX5!:+eLJX@qaB.SUt(`hX6b@.RQrdEstp3.FZ"$/QD48>o>JN-l!0NNDs<p"!&)F#CoJ%/t''pVd3:5LVD,6FfK589ns>`0Pb@:C/t_:IacW*I#RfZ48L>&Y[0C2r3Mn,?g\an,h^:_=mZZ+Raf\5lVnWb+I3&OmXC/Ich3eE%'#3S@/ke-[f5pH=OP0R.X[%9J`>b@Lh7pnSH1u/WNm[S@+Vb@8B$[86g=rB*Q.gOn+K>nOOn2GAalZ77d:X2/ciZO8O7KTjZQJ&8%$r-CX[J&J50A-#Q,BVQOZ/$<amS]n3j8-<hET;:(?KZ#/bc$Gdd]'/)1r.5%m#AqApWu_COQ'd"R8HNDiLWIG#FMg7+?EYl^GZha%[UkruE./4F"HF;oDmTDV2*R%eA:q.2=S*'ERKe0]F7X6@"-Z"s7M8!&'0HSgD]gk&YhaL2dY;3%<=Oe5T8[pg%F@p7Q=80X\/`Hg%i9qL@VW08qC;SD*I`l\5FZ1S/9WC=[Y8Di7DE<IdD6$WBL^gJ?o*hFqqZsLhRs\RIk9Pjl;V+\R-&M8WFq.l(E03`K4,-h9;L1u,%>TP]o3M5[MTSOpgrP<A[S*eSUq?rKSaqjf(eC]t+%iLG"9))h*Qq=$!fb`0&n8S5>P4cqQ!DGJPXE/PH`K]S/lBn;jeE1HY0mlTT%K@qiN-K>/JD.2h_Fq4H6jn&]+E/\W1)`X_dl-.e2UmP+;.XQEk$qJOW%jlrOHALZ3]I3Bs:G>Nmctd/DNZDt&@9hJBZ>Ag=[me,2%aC]AU/W9'3RMP#RNF>KGdgp"gO$r!h&?Sb,Z0[$gK_pX2jqZ<W@&\#X4cSk+e5(2n;\Z..`Aos31m3QOO_Z]f0[Hoqn*mE]Culf^%D`Ou;Pc'7bi2&VL;1\QZB1dg3Z8Kii@8JN_lftEIe?##2R`4Ydq&0iD\#GFD:ILfF"),33Zq%pVM&P%o4C03P.<O2_#;R:/!21=-%:&+ru9*s2k=g(aeJgK?goU7aOUF:0/j$-hj#F/]*X[`OaS0HY[]cR2k5_&I5Yi3>=nLoAW,>KM=Tc5Pj\?A7Vh;!p6I:Ylpdt7*(%pLi4B9D`bIcrT+uXeOWOr<M;sW!!pIWJINP<\+DD*0fq+qfp02^"GeC(WPNDG#/@p<?T?kgoa^cO;1YjQ[1kZ_aV-F'hS>ua0/mC%mhdTZb<_.pa,CY4mBAiW42fjCs)5S!WQ7dGZ*X9T2\gCBZ0*R:3ic-e[95C6.6#BALS[&j)=ptEG1omiV(r]_"]k17W<@LH.SGMY%fmM:N<2G?(`@oB;juan_'3mhtjs1)\e?cECi<'PJKmaXSd`e`hUJk(]IPqn[K=-e):;7-V.]a!I#BSZfZE&1?nt&kK#ntbG0'5V4%6kO\r#D`_V#I@/'MTIbE(XKAE9+YHiWG]9>C_tWdPa?3_m:gI<c#NJN$*)BRT#AU2RQdW@S#K0l_WbYnXP/;mCal6uecIGsqoSfq%>@Hm5p`G`&nA]\Mhu$i%d-2OG`tLm6?QSDcdL5nc!kW<Mi.s'!1Sk_=;]X4?%H%KZ1iN;>TcY@i@H6Rq]a"mC*(?pn46#Ltb*f94%4A78Z7-#p^DQL>]p/6<PDt+cb_9WWg1eu1(^bps$M>i/?<[iQ8Ynj7m<_.a5h!.=Om%M[b'+69>$A%?%^!J5=FKShp>Q'Y$WVU+?%)r)k`>?>%'M<T!tV-WC&qQ4KGDl#@dG^7pu/.)nT1Z;M>mZa#%75VJM"$sL"JWrO\.JfmDUOn\@GbPgNejNd^hI@oRSu@:fARTCW%lF;f'@]W86-"6,[<Q@ejqUOZQ@Za"6V3fXca*k>O_@n.H;q6,c5Kc!\`*P)=H+H2YgE+C&eTtq(T#lYteArihrl^Cmg,Nf['SZ(E%:8m0a]KljbQg*4hgf-Lt),:H$OXJn".QnRK6cMapMuWMGIm<ql:I"c<s6f2u9ZL'.]>&afcSNK&^N6:$p$^tCVml.KcFtj]s1ORi%hV=F2rj4WRp$_4iS0J/YIH(_3f'E<Fn+DV:O8Sa%m!a7<Duf&V+J`iFq;;4[7K-(0fDKalIKP&?p"]I_E]l@oh[@!?A",MS_8GV'%Cl+I-[rO'-(Z771LKr.MiA['<qH_8:+1_F'b4Q](pU?9#rON!D!WQYM4ceSeb-cY'JDYmLq`s?mGI`I*njg7aY7'h=n5HK`\)$.\%[I0)b*FG/j2rHoXof%9uq/uL]"+H+b/;Tct_j:'"([H"6%,_l;<Bq@S=k7ulr:P4.mB8bAWOu"#hn=qJA1^$$=;)D2XcmS8%TDYa%i;FUPI8.<MNfqsALU$]feZlh3^\sYS"C[t[`>YW=n%j)\.o_6K+I/?*A+=cT$fl5.<StZcP-pF%(MoK9^B]AhYIqR2Dcp;ZM7Iai%6([8*g`_1*P5RDbfP_U-hnl"K%Ca_jZJd;04YUEQ3nL`.L19Frs/m@Fh_;1HKg-k&Y.*:aa`@=0PZGcZR.K+Jj5&W4`mqQfVe!\J%H$=#VD>=FN)>kJ+rJ#If/c7'Mo_/2DrORImD#T0;oe$(jfPl&L`-=;Vs1frXF6p3i0X8?G5?4il&DSQNTn;0S>rEeIm-&;f?0=s7%YMZTq^L;M<$\-IT#dW53)hF:3M`ElmmYSC;\WPSC4-o4l%'=I,:M4JHWd\I"rf/i<1/M\%78Mqu^FIodrSoOprS>5E-2<9NrSmkQ%O8gq'_>CG5X^B$6DrOX*rKgT&qOdf\Vn`6BJ+rCrrS?B/hgbU&*t0ZcrPu_H[fY/\2X]Md>r-ri>u98=++r!ka?f(jou"Ok&:4<0%T-6p&oT`0frm/V,s7>cAs7_'C^E7OnnULB)s7eh-O+2;fJ+70_nBU1q4d@s_Nif1WXQ1m\0h1^2KaFHS6qC5h352l3A@Oa^8['CC%VWAfH!j^eI`fnZVV<C9*>RNp<9G2@'VKAhr\e-i?jkh*2c776j,i\X"9o2)*jWD'PQ`/n@_1\JIHs7h&+(U[KJ-Q.7k"JmWGY7II%2JPlL$;3IpO$$nN(1#<T-kF^rjWEdWaDTNVTlKluUA3Z"`#CGEUPT6Kp@kN!7=LSs:![kgjTTMaKuJ,63g4kcn;j2tCDb3mja!*o%pNY&=kgr#rE5U\35!C^9q"aF2VnN%XF*dkNjB@f[RrN(,3q,QTNaH5*W9kY6ff@]d<%&+Z<?F\.;d#.o)\Z@\9dBmJad,S9GZ<\q%fcp5h*0ApggO3G*'W"Y^[[\M?6nko"#;+A^RbBk!;B7e_-m<d'87@9YI1c?+aP[I,R0C<!&-VXA*W=XXAod"#!Ht]D<Uf%<%(<Pf%T6jFSHspXF-kp-QmCLj;!3TB]EcPq3FXtUtV8g'&ZJFnBaNd68>uePd$*cicR2gGkiM6d;ek\CUe%(.lQt#@MQ^f;(reP.oUC=[4%pjP%arCj2uDb']J+38-en.Df##)AQ9-l4>TkA.i!onW"$p%PVZT.*Y:?'_=fF;jf[D06@*ZZ[krGf(3ZC;_S_@MkomBMkta>-ngj%FT;9(a3u%1F<l#$i0.G7L&+@1T<`@^Sj"[\ZfD^?27,aV)-cs/WXlFtV@"8R(d!AY73?5cZX-3T5#bCCEDX_DnS,,(:XQmd;-<A1%SSFGMWYPp+X\,=k'M$;tWOT"9/m$Yh5pEFcYYm_=?'(hc9$nYJ0*&6\WOVC\q9sOgk#Q'h\g>@n%d]+YFFsPt]s<V_/ce;lW"Jcd%i3buu?IeXnl`/u8ZTD'dl-Ja>7cTjnSb%gR<\/j=l1<:>'pi;A702IGoSb>DlDX?En.hW<5XdqdWN`WpE5#t``#'U#,'(s>5BuDS%V72B9#gD1-EKC!T%m>#!V=G=koE3s-[bbbj5o5P7`_pou&>lX6Ba(7%,C5PA(A^R!7t_SFHc_4-I+>JYh7mI.0S0WX!9uL1RDfC_%Luug_MO5:Wc\G,'fc6JgM`DJMca+OQrtW=g@HE'bXdM@$F7E7g11m^-<\I!%5ZP"C[-q[q,&R\tBcfE?O3fLK@_nFVLug(u&$`hZ%F2HPZAg.Ved9huc)P^.YNtmh]jla3D2NX(bPFIqRBha#87#A<O9"ZPEkQpf_e1dl.DYI&Z!)RSL9ThAH8N@_SB>3N\2cB)h/kJ5"%'"+bVL+4Z`%IXU-F[N`pb,,8DV4U-/c^l\iS,!l%$noJDSFo*mi84h%+h8+JcX@6u^P17s6s#d['+7un@7".>EB6e'B&r<lPd%Y^%BNO&*ZU#],Qn'HE];ZD7;q!i$W]bN#VR2GiN+>P_5P\IOUOs:u)i[$)`Nh$o)GtCMMLL(c=4Jft7^o-C%t2Sb$C`mk:0$g/K<,rI%l(2>$%GbUN]C1m7B7*FJ^U]rlk8UB_AERf^@k*f2VA/!I0fP+"9Lpc\&G9:_oAMerL,fkXROT1*"<-FFLSRUDgfueo0*3]l^eFbu%kFcu^?Yf:!<%D29ab^"^EfM%SH$`q3S48P7g4a&riZakAolr'eaF.Y0f-=<.Nk(qh?73MbS,lHK%3j(4&?7uZ82<>@TC2B>b^,M$%)_Sg$pEUn,8nbN>InHGimn7<:8hj0<PBg(iS:\)FfH5b;'D_;4Hk%*1mHe$=$:RI6@7%>0$GdniJL:of:]mdG:9t?(7+KkA=u`IQ%eF/>m'MBEY[A\1<I=e29=VTXW3=u0?R<gu!$mboA(67]4b+a3e=i-6(<"FDZ>][%D`M!Wt0([,E(s1u^\q]K4OHf&kYpquYf5Zu<%d45Xk9.!HVSVq,t3NOt@D609S)T%"-1k[%Q]*P4jrWA"0/*W9sUEDGQE!Q/i[fgNPX?_eOE^[[K[\N7?\t,\_SK81Y$S7Y.+aJHB%2^7fJ*+n2e"DR\%gL_p,.%/I*IJl_E`9S,Pg@E:C%(QFq<!B9RM`FSKn?V<]`N@+cl(mm3b$B&NGroS_m"W(ga6d]B?]Y8tc1Q9&%0BGL@%VZ]YV<(4keZ4q_cUH5g'(99DK@U[c@2(=$)/LZ*EqZHj;,Z0ZXI[mTB2P)BK2bO>UFT`Lnu91H-^kAnpP;ahX47GWntEU&%\WQKGodch9jsY+q$PSJ??B&!QqKdDRDe*mTRu8NE`8MBddOn>X0H!7ZM*TIS4hulN>#`BI6-8tr6IJX%-LTCm/*TQ4:%a6?+%&#`%Emq.IYGJsd1oUdQX)LHEEg(sC=R3*QW]m;`&t:>kU"*a"AXanXY+juY=8SSM`m2%0#m\PFa;[.`^LBU.l_[K<W95MG)YZE!+M"q9%?lm1k#EJ0pGur?"qdN6i(f(QN@29]R$rNQ$d1AT5mBPNGRNQe!VA8EF:pqdroo$`4,XM,TY-T+Bc_2V,bd7'0O<-nD^2-+W^@bAR%b;?MDX6Q/<A!'jMbqD+u.cC\-kK=s5rfRL@X.LSR2`>k'iX(:Z#r7<4^2Jb$Z)CP1,kX*JH&D'4i;NAh,P20RRn*Wok;!C2X>r]/%#pR!NV$\^gg<iFT_'0-.U'oVYa_`FH*Z/F>fOj;"I/M-jr`Wdi[ir"p'+=hFS1ZKf/BosbM'BO;.\_[n_EQg2#Z4<\q7?<9fQHXY%rSF_5NrRd>J,9&W2"UBaF,nikkP4__Dm59%id^gZ?iB*L^\Ooh5Bja,ci1gHr9[i3s5AJ)chr%a(QUiKgPasNMfUT'8&'l7[;W"d%^O"/6fY[)Aq&fV(Du]\&rp2<<l>Q[\5Q.X4<IWECnnjGKqTXI4I@oH?g%T_f&Uu)K^&+onO8<eh(%o'3MB&G[C>efF4)Wj=`ra/0%Rd.))m9fiNDc"2ENkb+$GL:fiXN9;nK))=Q@pj'ei?-h`_gJgLId.=<Gf/t(e9UN7Yh-SgJ)7cbDn:)5i:u?`p%u=C&VoW22qkk,%1dBP5\#t5GXimithC>.)^7fqk#DANF<U?Qk^/JTm(-V71B`%1>DK8f:>;,n*/";Hs"l\^&R@Ph^oG2#MO;nJs4q+0Y=B\p34I_"k%jf@ILJF,b#>!*c(IhIa#/Y29hF7?tES:ao]2Qc0L%qcjW3sB@GmMe0WUptQiiBhc3g*',$kD@q=Jdm&=T^La;-%%,e`l=;-gn6-'%I1Z#?',Q=E0.ETmLFokohIkJU80u]2X&&]aO"Grpio%6:&DT64j&m0!iF2tq#VPAU*J;hh5Q4<#5Z77(Su*dF0_&W?89JtJ"9a$=%+[N:k9k,SaK7YscPa"*Q3_TW+T$tm9nR*#d+^nrc''+fU!90P]&uME&cO%qYMhtX2<2,APc1`L[i8Zo2ak[o3a2f'$,i5dpqgg#Y%jm"/o^(67`'9Um,62e2e*n$J<'nX#>\m*,dh]%C(&>;S-Y).o),q(g"X4<!?0#R^GK>OoWk*l4pa4H;5:L:q$Q0GVge"M]Lc]gW*%QAOV]+oc_jQe"%2^Qk;M?$VXS83Y)K^<#@/e2?3N+!an02K)_Tb13HlCbnDHrt/e%PNlB>S;Wo>mOR;j(q9oVEWXu:i>.e,(<hg$%+(/pgs!,W+h(;CG8*H&C>YhncUp_\%`GC%aNKg3X]Sbu8@)pNVZVi@YigL`AMH.It4*.-o;".8gD"0!g&uRV"Jn:A\Yst>4.)eGS%+gZ&IIj!->+sS)3&iLGb&&CHKs)g[.KK;Cog0jGBcNU>D>`\q_9``mPRq]8L8C6Y]JL/5=jt8h?>pO,X);#gL%I7uWMi]t']0AkP%AnP\_p!q!O=1#u2EY,g,lfL)K3S5bBZ<J[2@b"Fb[I(Km`5-lHY0PlcYbB!.YTu.XI(ltqj@MB-8MecIGH(mUNr<p0?,^,1I7=WW%-uV;,15sAJ&@%N,k/mG.2bfioB[7iT'[hb]mmCL?*fO]WoBkK.(LpoX4>Dpbk/3#/q1-9[-DZuUng'Ft#'QN6-BRXfZ^F+4Vu'!k%"jpt3pq_XCppO7E*sCb0D><$-4di'b"E*\:Ge%@Bou?.G2Mo<BC^HkS-"+c8$/Wn+:99ih:,-bNF\Nr*%D4Se@4;JcQBP`6Q%Eu(%k6ObYd40p-;:\D5]M-/2Bm@I0bGFX0=/812Qb6:q7mb0T/=$<HhFD"te;@"p0V<C.cV\qIeb?AeT8=7moq^#B7-F.=#3M/pSg+%Z%3Sj>[7nD\Ea\FG!+]OGnm,o`s:P/4`Nl&Jj?`OdO\A-Q3'IF+hU?pL&3%YFaT?k7OIK'3do3:(Dj"G[*K:e`93KBfk$p?WL^1cCE%oX;H;cORd_]5!ZjVar5I)b2dEO'a>__gQ"T'j$D^;nj44+TYdYZQmq8+As5ECW^.Up^390e;UICBiD.SZ+!mu`DqgQp7ftV4aMtW%T<!8sZK5kXmr7XNRJLlp.o+,HM[>b70PVQE87^hk_Pe#C7nI$qJ4N+;X"JkFh@'k.V:]?k%?3.gX:<WXWrJ93CMlA6nj`X>EbBVA%(pt)^-6m%M-HN`GlnO!mpTC7;f:DEe[BilOEE,Ugk0$*FO@^4+biFpEl.d5X<PGV(1FC6PEfW\<3p*umPHgb`].a>q:WOqc-18tY%2rf:>I^c;FA&P?64t:Rt,?_^lL^fOVmb:d\2J2^\S93"D5WDU8[L#+);@aL[0A=Je9mt=9YFjJ.LU5BO;<4o#M<sNcE'dQhPM7(P%MPp$:;\A>s([_n!SgYUeFD:5E8cYPM@W()4kY(t3><TME(OL(%A!5gA##-Htg,03YAm@)7!4B@Zk_dV<jcYOfPDM/$F[S^E0n9Gl%kpL[&<.=sm=Z)d!opcc;Dj9ItAp#f.PKT!F<F7<%SJd+99gk`:$En>QF-Z-<;MVS18Lp7QpJ"PV<#md,B5^.anVh7'hfL(kne\p#%]"F(5/SL4s78B85rr#4%E)mikj73U3KN+?172],UNS2U/C)/+[lGN-s@_Qsif">&+NiuYE76VH7'(mP_)tcf3WO1/jXOjD>;6lIf%M..^N1K%M_Mb1CAJJm4SqS<0)S-q&o.b_a%o+4j'iEmG]\il/*>`PQf./hrR23>mS;ZddgQVk?g*dr\9E*)]j4)+8[m:\P5P-%eg%7ti?TF0*d#@X8ikdZA_IWc;6'?ZS5b$&a2t@S(&5;Bs;'Q0\_r$HSY!3>EA`[$rHul:Ra\<@c=OCF[mR]5]kjg,4J,<]NhNgpY:^%;j?s@aZQrYhCXru&%"%(AQ*VW+;tB91;!"Eq:q_-H'&`MFGcmQ?TU+4)R;J>D^,QWJ]Vbe.P'.E(G$jA$(2:q3uJQ>SXHBhl:.cW%0U.2=A6P4?Q3cakGB76hBOb-5G<=-XS1!=d,*='3;e-*'Mb^rs3(J>_T"K]q)dPA3(</(;qK.>6b21)Vit]W'Lc&3qEQGK@(/jJS%Z0i<3bJ;8@7/U/^Q?Qp#e61*@UaP9c8:!kh*4_N8c-G1W(X&UE(.d)kE$.qh#5(MT;USpX<EE7hT#4Vae,?c0lga_*A<TBG8BL&9%kUJ1f4#X\H_M$uYj^OrH4cn_%Z#Os)2T`,2-Rg3`rHS4Q5X*urX2$n;9</5n[D@Z`*^^o!?+3^32)>+MjB+_3rkeo$[;F+^OJ8RX%RjKWuN_Q<;>-DHV4/.&sK%,ssJsOhme[3cU2-:BY4Itg)fX!]>Nn%EE_/rJc[EFsY5?&TCe8l[)@Ht?lOh%9uW,uG1oUf?.7V;n*%SDqgCO%cj\j9:V`i`skY86BDQ9bL`jGdbi,4NiIW]g0ji`[d2_=aXt[<B2+Dke0-Ob<!YQ2tKb-k1e2Y1_\4HcNW%gFsa4-88/9&%)kUO(gl]bKICY,:gNO!!ZYsWaD8!B[TeY[H99E:,hK0=jcETrQ5<>ns4/l=3a?EM$YEqkhf%AbLmR6k&Fe?5=UO/JJ)!jj4DV8Yo%a4YGoPph[Gk:Z!d<mU%gFS+!J[73SagR#EGB3pB_q>^Aa-`;"Dr)U4@;aR#'mo9.2h:I$6M\DPeYfA`2Arg7bUXdc9p?MRZisgB?%Ra'9^U#t]jWoQ#iafhluUVrqW/<3<9in0UH7B7^U]^hKEI@Qj/:A/raD'a4tSBTpq]25K'SA[bGl.oOA9Z$s[."L,G\drD[omG=h%cYF[pMka?ko)[lF3fkc,0(D7W3m<^aY090_!\"?7]rQ^a4##E(fI8YUPcf`ml7AcE_g3t'6JZ%T$n*L*\M7'\:Tg%0;5pZtjFOH_%c.5qCTE\l[i39+#In:?DP':`m^.Iq=.Y5+oqX4iEB=ADr#G#C?ic5cCGV,JRFWb7XK1mM2W6g2D&UUc&,HgJ!WEXN0cE,?q!Y4B*%A(]Fb$^A!&\S#_>.]ph$NV30gf/g7c%oH!;j0$opfp-tW)Lld2HT;b-l#9eJ@ig3gclGX'VQ7dC(3t-#mcgKeEDtZS!Y8I=lhAdu%enL2:8\]7DRdh,t^T0H[-.[:Ws'FTElER]Y(G@M;4t5g\:+S/2X#?H_S4>(]opE^!P&AA2J2@*"_Fb7Z5s,IcbrU@PS:M4F[kd"i%\#tDLo/:@,Pcf9pq2Uu[J&hJQY6UV*nkKD8RJrD_7"Yh3]\YgJ9-<`$\VH%ZBkYVdck-D]TAi[MJ9B4T$/[^*8#uM^%3gMJ7>re\%9&gNmqF9YVL"Al?(Wh'lfI&l03u\bXj0Wl;^=H%,Lo?'0ZJmsG!M7P2*iM1#WLabN.;qdRfK,Bq\r)I]eX9L=l@jg>j51f_aA,Gm%;[2Vgpm=feW=@:(d8L8[<-:n!/dXVZHu/HFXeO2o:#MT/IeB7qr1,[Zr*`,0WQ8!!Wp(4BScml;h>eqsqlfmBMND$(_X;q^UPJK.%*u^9t4sJ/ls%D0W@5I.8<EmL4Vt!;;+0>+p1[`mHhGP,t=`jdqQ$6k4%IKn9(pl'"9DrpZ]IeMLa0TB36Qn97\f6&3-=6rl&Q+YQ%%S=qh<WfEaV6G=.+.C7on`em`@P(_g]DPWOH_aV\\lV37C*ojuB:.`2>HpI-fB3Mp$j2i0idi)<9,)I286mN^^aVuuY7jJ3SQ6c+%%uX#Bg$igf,c@SWB/=j2gQO=n2s+anf:0E((nqnXUf?S:>V!)fV8uLka*1N=`9$e=G=G<p2Q>K.^Q:ekP]4rLmoOAKj*ba+@G[0I%lfVQ"/Vuj7%\:&5b14?9Y65l&1GbHWEC&km@5M<(&`FWfHo:JJZ&!BYjFSF>A-P81EXKaJ0<S13+H?#`<(p*^!*(HRX.'Dg0.<^\%Z*gks*Y[:*XZLQ^d/<G4jT"'<i!n)V%R&N_'fSY%=>()Yoh`DmCqMjXZ"cN$E5U1t85nW1/TIr+Sk`BuqH89$!']YUA$4qV7B=r9%I*dT2kPP[<`G9mL@b8fDdr-?'OFi(H>$0`HT?cIDE%%nq5QY]ao8:U&Cttp5FkA`"S6EhXG3I4&FZS8o4"Ih0AY&0b+o40.V5LG'%Kf\f_>uXer9eHR:mm?_%P*_NT>i)W:8V(9q:sg^&DleAKXC7fsc&I&t<UiqBOQ7JB%;P\;jG-m^\et)s>bhd?j.7g#lDq4JPVIM!%)rR/K!_MFbXX$7I^OsHV-2T%DL\s"XM_f-;I_g,]`)U)sEFD1SUs(>@@A2iW1O6gNl\.]G4*cDVbIYhZapP<N(7V*E(i0_Gn"Q4j%0sml0"t=DDmY=RR,hpq]adcLR?ZnJucL&+pXWVk^cr[h9B;L]GL[f^?3h%Gh*ft7U&!j'qX<)B\\a<eo;QFJLIgo/3gUH+l`pu1)%2s4:h4ZR,\9"Y5mR1t*So'fa2>=GYe-(pRd%_pI:M@gKX3Vg27[`=T-&qK<tYq.h_rh.0)SRo4L`jFcVl+I><Q:GQ9]%OL0U&Y6l%G)Pc-[Sk_;V+ulM[W`nDpZ9?qjZ_*DKI")7Q4eZuL4k!K;4k2Lo&Q/Fq6+Ndk$s]?kMk)\<suFK[;Zm,,rI6@7s]Gh6;fL\AN]?&%2'N1"3gQS+KH=@(-nMl&4pLClgP\dtWp]MjCM^k]Z.5%bO^bQ-!T>c:99*+bJ-'CJKgcTM>ZM"-;,J*/HdR$j(7(>oVY-'f:Ht4.%n"jEL>3mLhLK.6aQ;+#ia+=_UV$nq/LG"4%WOM$ZKDMRZAO!)9;\Z<Es./#gdgS`;G2fB6$l>m5iN>rDGItke&<N.F:#=EsDW_Un%;8_[q(9Jh$W.t6IN]<'s5!mhKE8M28p8q$l.,kST=NB;5a9UOaYc=M7Alih:]N\)T4mBENda4Ci]9EjR.LW_^5&KQqS1?^J./som%Z]!kQ824@o^6Nd_[[\c!?`P*uV4KgZ]i/ilDtR*t?B"b]?,QhL'4_qo2JpQAS5G^0a>r3h`!")<X8Snp41TfBH$tpeDn'>;`$R7"%2E?uWQ$Xc99%WB4/%CK(IbUh#eZfPQ`Lt;KP:KFm9o,6Dj-H_!1PDk9h/"bg&T1H.SgUH*$SMS%rj>TJ3DZ^V+G]>?mXt=YaI*=4%TVX.YXEPL:>;CqVIpjJb$7pj@0Hn,u].]/Sj5$d-$0[,b5.U1o(44"ULGoLoSOSJWS/X%c;:CQI0I:10"iC%',)VNJW-#G%+D?F0%:6OQrbJ]GN\j?AMH3+#MS0OZaF]"!^]HMD]n(XPqK$f47caETX;]8.T6E-ZE<sS_nMOi!eWD"iA*n*(0]e/"$H_dP6SiQt;)C?_j%p)K4X\7me7C4qJ,-7bduY'DLebsj*5dGN]JkcPnc)M1X]n=oBR$5m5]/.r6G(`=EEa%"(pA@[n;/G`";,:IX4,&F?n?^Qp2W>k\:%+idpTV",ju//`'b2QC!nn`V]*HT:PBA9-=eNAq)4&(b*&3.lXB$3!Ll&kRae>Q"B[\qoM)+P$(UF;FEAJU)<-d2i4]1&//@kYA"e%&?><ojs4)\/2b:FWr%f83&FQ`?A4,5Jst_Z:nFEQi<#cDmrs<i952$mXk%fqgETN<A8]*aar5I2r_&n>[_9q=7!4dHAr%/>rI-DV%$JN$r&d=Zc2$d/Hn*M`(hPlg+mfF4^j81)u+]mQ(AZ_*Ph.sP-<"O_HQTui2SKrEQ4@SuX\NRUigQYYBj"K@Y=V4J-9PmgWkCg(?%s6?i'nsLkY#7XK,^e_T`coDfi/si>RW0J.ZKJ&e$Ni*F'[_Jqjs4^M3bMalrMN(9`s-.Yh:ZSk[;b7<?e_u_!SOmD)Jj=Eo5G%a&%Bg9e7U1S:CPj.JM%g))l=)Ch;QUs#sia>u[\ijaJ`Jf@DV)[eB6q0"s@G$jB=>iOq?"\a/k)\tBqjgRf2RXr4?9<6Q2tB-*q1V[.%0]>H;i^>N]W<bg/2)NI`4qTI/WJ'IKqlJUZR5&;FOIe)*2N&Ai;JbhQ))+*f(+_u#)K=HtlAMqS)4P0&FX,X,l:G;<c.^ci&GEGY%b$?Hun>./_r`MGH7F,LaUFNHl&D:-CAV(VlV@H/0`5>3iZY:N%[d1ISM7[JBA9fYgZBoD>p)jY//^EhEUc9+IE)+&6S/"W,,H&oU%`Zcq:0Rti,1rf6VJkZJC9002ZK*E@3';8T#6KAWqpWG$3a^*082[PDf(0#U-nCJ!\+sKdD(<BC7q(734E/Q8[n"N$h?SlCX]SJS-%CES3@<G\Y4G9NI-7!/VjJn.(2@"tsi>.U,ffa-u%7nkYQ8N^&\2;R"(6Z;(8.K'rAk'SZQ9?T0r23OQ+CrN3`g.JsKGE<^PbEqdG%4d(.&qZNo-)DT>J]7K%QYQWA]-W<bb"=to+c6Ac$:[pUQi@!eF+%BIH[qNf+(l,r$c#l9h;h_3;4ilOa+V0$qpOI?#mr0u_s!4B>%;"2PP-f:2s-7AcW;7*R?:$3c_;=X>0E:7Et1Emlqd6E%$Nc`oQO$f$WiT>><77e>gjR/B%+G*V@_bCKIR#`7fJE)_i!P;JkTZ,[_%P^PbbqRQ*kZEbk4.eKE-Bg@<X8-DYaf((XA>bnAT;??;u&[n.p,YG0!kS*hBhb+Nd3"M6uNgO6(h,^N%5h0C_\)r2PO$;.7e-jc6%E<BFA^9E[82YL*[\&#I:?mT4tm4-9DqA/=sih;>J?`L><&1//!G?$+K)*H>Q3<\ZY,.5+5n.qtV2f4+GjC/d;/4L/:1BYQ8Q"reL%(M(bLA#uQ68]fO@?H4\`CTOu2E(\j'F>e2MOKNEZ2r1rJ[./$OIf<*'r4?,$jUZ\RTW&pP+O,SIEP.G^]t&(]l`[Pup[('2h'B+8%As3DEWX/DG!/aX&@N]_c,@(J^+?FBOAp'!N`0&@816`?GM[i+j2)M<j+pb]sMM0/hgVlA(m'<lI*`]SR8d1Ga?.8XRel(KG1)6o-%'GWC*1OsEEn:0]]?+W#k(H/"8G(*"H\=9)!..MX^RY2QrCQBMUUC(,u\.oC,*3E\O01@4a<PE^Dok:U(95\ok:M#mZ'D"Zf^)k.>%%`.m<(2\*T3#*D+8lJQA$7_U`:aSiMTa1lDl^73!0Xq-(Dc&aTE.O..KUaqhcQpMPEE_'0R7.O.,5,(bBRF]!ajnh!.-1ZZX-1([%\t.@;LZfDQ!;O4siGR13GOEe#8.Vu+SOiPI1KN/oWf5tb#q8I^`3$,&Fbd.c2&Hg6Ti(FoZtPXI&q$SCet!W/IYqTZ,+`ns(RP#!%@K?LDcE4f(Ar-'4%1"W(n/V1T(m\.PmH76_M?nk7]P<@\'LXB-]XTp6RuG#uT3&7cfKMa+]9Ml8$l(%^ckdnNL/'4oqmKL!,hL^G%)+@#g.iY)8/k)KlS@E];_u\+jmQ@],b'DTkVM_c75TAI<.;#NBC5Poe&3A^gJLNP6gBmflm8k%oH(t'",'N?JOqfE")H!HsRKYb%%X[FtDkq,XokTu!q'rKmY<5^O+d_]m`4l.mlL=-21eZ%W&&`l[ubnFq;?S/0&6R.@lA!2)o,!0:K)0[(Vr#Y6.E%a&Z;.um@4,^8/%Y4a+PijTm1=,3$ZV8P]l/N\?"$DFuq3He=PV$g728PKtd=L'f5H#2gDif7[NBO?SMj8p]OgSPYS-.]/0PigeX+>\;9LKYDd*L"G.%VAin9BC#!7.2LI]6[#MJ10A*Cl^^]Q3u#iFhHS9i_i00@ftf<&]+\%4A.;Big4K!1M04AW='r\F"Z&2,Q%BN'acXaXq`\hklJ6&l%XGaU#`[[\o6(n;pA@%:rZBn'NXM<8Fd*r&N)M)ELCWKO:#,WjXP9'tOhLbgcFF"cE4.mSpq'6_J=S'L[qK@aGDf2<Fm(GXUSTU5(%dj,>1,V*Et5aI]eL_%fX@Kg*rk[c#mRM6o)?\Oa,q^/4-giq%)nT?CM(3&"e-nd#e3tN&D2PN<o"YJsL?5\N8[l*E=?N??r1$fLk%P$F3Aj%#=f2d_jJ;NO=\6FT0VdQW1r')9!XnOM@tpu]pED.O>HdT4Y]:h/1`5m!!!dEid$M"<%&"[^=3/im(9&EZmd?m?F%7VtYM%K'Lq,6P_Ch)3cbB'o5G(A&tr;i<%6(Ff=A(U<Lr7HOfi&j1QF2$Bcl3\!5N4M[8FdA5Cle>%MK#<(6JJH^NujXD-iaa[HiX'3lRT%=&(Z0P6bjkUa#n]bFVdY@s&i#:D!W*&m#?OWs1!*nnIYEE(r8Y$V)Ra5TNJ*l%]f$_E'RFr&,p66ohBXbUe74;AiG.iD%dpd]'fe%XFhMg,T4pp-J`X4-&EeD[_h<O@`VHM(C9OBkpC]4mYc9jR]^IfCdk#(m]2YphP\d_MVb[P"Z5j?,+<1HEm/^i#p2F]@o[7`>cChl%`u1ne)XXHrR0u"6iB-W"SmqNPSS"n'e7Un3E*j#nKO1$i^?"moD[C;bDZL_%C]\)B7#/Rb'SR7Y\$F3\cC"!3YI2]`_d7cN2k'fW%kOen7`5(?I\#KE=Uipe_0frB\$0D\S=BHt]:*'O84d9-9Pj:LJ=uKBmjp8?k/U.-[llE6Z9Z=Ge=)oS$-JAccDBNX=cetOp'F:@;%.8s@ZHFYN*';TZ*T*t2')2!"ih[d1.'E;j'RrUDoV]314WVaX"o'/d_da=1nM#UA.Fjl@<[>1[_hYlH+s$V8GL=Hmb+!o+%db:_o%XXmmV-uc(#jg*oWOImL`U^kXe2I4h55+U)IBZiSO>2m&ZnlC!0As,p,@]48^-s'J7VkO<;E%qD7YLI?[ER)fA8,`&0^J3)Jh^cct%W"cuY6e?N2"1Y40BT:42*A=L`Hs@VsU2/3@BDDYd!r\]j%JAq20]Gp@UsMN?n4kV2>=>m"F^JZT/i*l`\RUL3q>nX<Z2IjQZ1[)C%ksT"B1CG:+AQ:Zr:O42SHbSsc3oR!kPGiTWp&9;h>_uSWX6s?T-b]Dk:Z%V5?R<,X2kN>7c%#Xe5D@N@h^C):C#:&?>Qo-MNp@Vj%iH<=rV_FkGPcnD;kGEXRoY-phA@bHAIE]5GD`!b1V;sr;pA=g-YC#EHqjYA"2h1^+h]g(Q?hWsgr\+<>mr'$ARd[pe4aoWYlB]PG%M[5'7hBE(!_Pi4paNC@Ec+N@7Od),Y,5*Q:+n^$/,%I=[*cqYZCVDASm&KG0^N^<PVGutJ(PmJXnP\OMYP15Qo^;$/l.Dds:b-TD%oDQ=`>*@p;=b5[0hiVIpI)Q.'@'cRXL\Q<qOcfKdcjeB`q7[6k_\^:EE2TRVqm?DTVKes'U?eZSPil-H?E\NdB]D$Sm27RrmsMMr%M>t?-@fPTRr]H)Z+4]kk3m]k$4L%TC%jcY(G$EdU3.6!jDW6A'F"iBA.^$p)"?`8t6hG_tI^igN'.>BnHI</sNn<_'o'(qa>?t<9%Dgjk6mIt>*n$C*?-WfngH"+'LknP?DPmCG*!i;=:$]1AT>".5L;Yfmr4m*$Vi(CRjZRRKrHr,T#"\[hN\J+K\l^dG[?#L_oHM_R*%01M9=2sMF,]m6.(edj6^k.&=Ol%\uhX10cg='YoQ4m7Xak8qN7TPcfHi?u$Lih>]$!q7#lQ**c_QbK'^p=&fpJ,'Uei;FNk2mE3Z%&_;e%mPA(]_hE,>;Cg;I"Jdtl>;@D$1/.;@0bK0SOJ7O2jML,2>hsU\0*,TOk8s7Y#R!,nPiQ4@QNXg9p+p:Bj/tND<pdSMXN<j3%UB@P./XT;:[rCkZ'ngeAA'^L#1K;)&I6Rc!l^F;2i$#gl6GrlHY>nHo;C3SW,GH_]]93Dr)!O+%J(_O^a^g&*,%AQICnDsA5q;c(%H>ItQ8&lWO,ssOjPE&)E:X_)T8e.)%7ZIb9R/rV`If1d,Kr/c1"3=X"+Qn:[k7[A'nT)<s,@Gk`69nEgb"6'1i9-Dc9LU2;Z+ZTu%^/_.$am4n5s2Wa]h>d%qpZ2<P\Kb[2pYmr:-_F)u$%WC#&J]*lN=6Vb(l=YPLII&Unq6#!PuNL#V09'5d5FK.9;isudt,BiQG'/0%7t=G>?6D\+GpgWdSaKfaCFG]d?Q?LqG(=SW*'k'>IfO+qQ\\sL@(Km)Z\?.7^R=%bmW(nN\4^B;5k.cObTHnGhLn<%13trr9mXtm%$2,EK1`'ZXAc!<pf=[X$*K"c1m[f2h=Ud$r8gl5.2:rMh_St@-Zs;m!i\AYG-*beYT5D"BBjN'G'o3s&G<^k[;MkWidQW=:(NUr9%/g^WW,6FUCPoT)2T07O[6V6g6a#D\jrqs@:o+Fh=A(gJaeu-pIH[T>&ZVjX/VKr-fWLFJlCu*Y%"HZ6ai\Bf%K/_t8%EPM>(>Fe0%SQb-HpT;m^\b0p^/sm$g^Ksl3e3mMCj0#@"TVhMYE,@#I1j3;J+,-+TGQir<\mTs`l+KL\n^uYg>Gp:#P!+ohS@'qqgjqoG<spHX%="565r1rTSb-#CD<r)CQE2g,g'nl4WE1]MeR[OeAFFRhZElJ"Rb#WB&[I]"hSj+AI*0QcU(70rhR`MK,*js"?C>XJ<<PALT)7(L7%4Y=P;B8^_#Nb^^oDj+b(!@\5n$Kp&=,+CpR>`]Cc/>=VWW:F)@S,.r.Y8haZBa!hnYn)E(ACaGO"P$'Di`sqnSnsZq21a^Rm%Wd#%j1mk7jokpoWYqEU9PE,tTiPTO#>oE]"5+kDSZ:`E(3:JfB+iTgfkiB;&Cf1JR7!\Ra#J?6f-SVF.WqoFBnH5+\QX4QUk6E8cEiYY%`L]f$8&-sih3lSMZr>RiO^%-2>h?KHLimX];(uPqi@.MG[3T<UXBQr0MV/Z=R_k6GD[hW8CGJ^73G`=eZ1rht%)pQSH2cS3Rh\Gi%#XG<pKeHSUBi!;aVC2qrl%i&r(kHfB''<qn+r;7Cf4_l=o+0e'aPNJ$OPLp]SL2q%0TbW)J3BC8<tFb?$YJoD+2)bc2Y!qTGr!ob%HnLG'G>X?>r'XLlM4(c+rn&ck.^OpN*,Aj9SD/'MUap7!VmJda-,Pu2<N<4]PkJ'!&:,c/EfK*SWN4':DV]8tLmhof09BCZI@Nj=%UmfT8lun'Y<La4X]?k:%UsFAD(HPHG>LjtF/@DU";KV4M;oCJFfAdktBIDn@"cMjO<QEjlRS4cW7o=P@U[0D$`^j,%VMc:)l)HYr%%V4=Mkq-_`^%Qa/E8VS(4?;;1BV&]7-<iiCPTNWqo[aC(@\uh9<c"]uTrtrtG(t;!D6jUXh6c<Nnu=O4$Tg%D,>[&Za*H^I=@#oJ%6[(^%;n"5K79I*K/;e`$U%iFY$ube!?Ul_m0M&J!-5"=W#CQ>P:<J,&UNj4W?R.=6nPL[mE'q')f,<)1Abu/`No(4"A+o9&*Ge#_%eH+'TF&[HmY-m-#.lluFDQ=APl9!`j\4*5;W=6tlqZ]SE=,loe+hQ;WQ.=T9b4dn'h]4[VfZ72!(k)s4M/W'?"QWQY^bM"D/gP[C%3;dEbpZOl4b*]ZjTRKqKCDB@OP*:L$UP^IZ[!IfRnK.A3']QW>IjKu8ZV_oe,Ru.)cDhu#Ab8c$Pq`Fd$(89(U!tBr8S*6K20'XR%bQ(O/21\@9q&j'I4OOhmE`?-UPrd`J'KNPIerFUI`GL$VRSq'3XW3mR.N9V<G"O/Aa\&a+AbhmW[9WAV.M[cpXl6Hfc4q1_9Ff=i%;)-:0!H"FmEQ,fN27!()b1CLi1Q]D#:#91W[0N?,LbXdo)PtDjkF$/NI%9ZUn].diWGhNYB_dOfNtE0s\5Ptg7VY\Yaj5%:Q*ejM%P:9\qespGaToJW5V"]^n7\>HLD].:JZ"Ntf-_a_M6h8-?=[L'4!A_[:.^77h=S6d5j;@75YGA/r!oe<GY1)b^QcD<%SY7G%i?"g+%m%Z9++l)O&,!0KpqY/d-;GUB="kBK7Y[FMtHC9CejF$Q"dRBoRJ's1qAWS-^U8W\VU@\G,$MGI=M-1T6=&&E&5-Uc1bu2E"jM9%'%hmTr=]<(`!*3+?_(E=SEA;<55qbePI8iRu-M3EJK>JZUka,(MZ+C%2ZhK[:sq`OE(.A8E[89#I%70ZUl0?i)R`Bs&C%3hjCG]%@G%,K_LXcRNLqfd'H4q8MbLm;(QQVti!nGt0ES+R7"gMl;)[mXlEEgD9KaXsYC7p@krCb(9MqcIh;J;F6+91EtCS*aQ4*]NfQ<(rYIU%#;W:V$L)q`T=,jdG^0VXXnY*X,@q#-hK@5T;3#A:5?LYGKaC?*>\TB_IT:<hPBtR3S:QA\F[h_N@qN/:[XQS$1?sZ_$"QhYZU\YH%?EU<\fu8Dsh3Q"U7*d!@s1rLU4'j!mZ%Z&`1X=4SJYq.\9GaQ]oic\c^9=OGo^aOnD`eWS'VG--T&MpSOmqn?R%H=ai<M^BL>F`[%,ORq4f@L]p"27RuWk4FhX3,%7s("F/#Q_E'D;E1A.;sWpb@C1OL'H5;]*;qCHkE0ln\S8DX5jU!V1jIgf7;]50*d;Z6]q7%dtB+O%j$5BRNZMJ#$<r,#A?+'e##X`/WC/KHX-iS3=_\qlV8S9L6eLV*K&1@6Ki_94WjNS<#`'EKJ`RrsG$4/bP`;,@K:2iV/'?7LIeqM9%'$"1_\Ces/#*EUuP$9C)kRr:@F05&BP_2M<3\"EehKHF^jnuLIh<'p$8X.P9$s1T9DodOsgok-b*[2ga*G$,RRh1t@0nFQLDBnro%DO94T&U+sOf,fL7jI2SHPMRr_.`fmocV:8FX.K.X%WYBuS\!!eQL_7n%'c]&UdO0bK+%4OIuo8GbsBq>>.%S0XIoo'>M9dnhku;t%g,dE"C/B\m<]j6:.=SfS=hZ/;Md=7R3tS6qL^/uKe.c,n09Qi8cfs1P)(XI@$JAkPrXt@an^c!*b/sttD/Qnk]gr)+5$%slI@A)T%%&3A_&G:AmHVCeMgpatm_5'up=Uo/5rX2a<#Cb#>P54uU*ET2am6cbFq5IUXLJ9*%)r`%Vg1HC2Fet%sWE#jVnlo<p-B'"HId0(?%<&b.\f9&4K`CA*=S=RD`W3uOSh!dXBgt+EQ5ZAn#:Qsa:/1>P'/>#9L]L*4A.RWr7bbSpqm[BP^Vsdh&AQ^%oA#\]Z>7D3Vb_?N&%lokX5TfXu+g)%^oE4W,r8#!![V]T64D#WXV::7Vq0dBg_]O'X:Nh:,D(o^<4WX)ulaFWgN"^k%^Zf@ZS]YinOFM?u3jQg=4M*XGa%6&bGp$PYNMUNDm_TaUb!MH2[e4#-FSFh>OKBnj>887lK'hCaUPlg7^S6]mTe?&5D,]Y27?I287:Cf.A[%*I0_:WL1mOr"bl'ZX!U%f_HGXn(@H=f@-qLGpeDdVS;t[-;D&>qHJ,8r<K5/rcIQGA[\qi:mET;dk<qm,)8[;@@n'hdt.Yq'5M.`dfU()550efYlblXa$)^B%q*&+\VZqkSF4VoFnEKYD!Iar5%N0L@:Iq;`BP-XPWk<k,UNb)J)\cZMHLUa<n)Yg,"q:XMrSDO2j*8\Qm6T2972t=]='Qhme)uf"%i[1Cb+bHLaQOEI^*UIXfFnn*;YqGaY?iD0A&Q/3kMAk#4OnV=,@90.`FdDGr1cq,+'antMT*&LDIqZ-cVmg/IE\o?FQ#gc%keQt%%TKNo$N"%rX?CSI*+GH*KXGZ]16LuJrjU7bcJkU(MX*3qi3JgRsTj1I<_@iY4+IU[86'4SO.2,isjQ'Y"7q$.Wd3p((fmFrPhPV[[%TfdJ*pZo=Wpo:aO4cZR2c.Ku"gYH9llUaWjWk0_+Sl$"\V,$NV,/VsXW;7i\TMmV*74!RCFn=gtOWo+jE?A?dEDKmf_jpMl#FI`9%1VN#JdB[u-C7CDXNiI<pj/:E\6<.#`[^1-hSQNPmg>XuEX]<k-1ja<6Aa3/-@"2polg.VaL!G'C+,fRDPLIfji^]OBI?>5C&Hm5E%EXfg11Rd.!SQO(=//os/PA7=M9HV\DNS5#hB0EoACFR/,=-\TL*riRtOi.j^7,^$jUPb/flAD2>F0PjBC97-Qh.*oQ3KNO=np8Xf%I;gfO+gf@@YiG0_5Lq,s:hkfAj-*AbAkHG',T@_@VtjSM9ZX\YopFP*q(Iqr%Q'@rDF'CQj#I\"e_:[IL8_fts$%9%JHXtj0TLbI%>TU3`cFduI/J7nI((,as;aRRS0N$i>X3<`>IV+QcE"=20@0/%#=l%]`1bD-(k,(UYS0^?oWjq4!q!c2uQ,9OL2O\"p.8%7l`e-qj%]39)SHHX[EZV,FK;7QK;MnPa9:ISm\8U#,I\Ng*[9V#<E5*gpAi==JO>l2:G(:?0Y%LI98L99B_Q!4(UFERTZjUWsS'itKSOfKd5%kD2Jt1V7f8fm(qAEdh*=&[qM4VH?bCSXiT.I]dT*Z&2%X;&kin;=i474NZ*YZp@:6a!N="=2LNS0SjUQ26?Ro7;dV!MuD]5RIZnJ%g!%M<\IZHXeg"OTFXR>E9ZUTW#am"pmp[OIM8Pm1gtmHZc_<!=+LB>JJ';@HV<JorG=CNp#:Bb>g&d5+r"Rt);ne<G96==d(tB=.%go"Y[)j;.;bP@aS6ln[<nbU?plpnXJU0.duD*mH!P_./pQqr0:=-taBe@L#g^UEhs)+LNL35k5c]8<9;c9TckNEg*:FD-cB);f5X%dS-NE!R\]._Y"te>j54ZA/V@+.OIc?,$"BbmMhsf^>lr,Kuh&C^LN)OH8D);6.bOgd'rQO^Snej?uqA(_M"`+$HY;qrPj^?S<?"1%@,l@dC89fQZ(p:89Zc@;X(6S@RnMhpRu9W8,:^bjSQd;SV:c5V*MlciN<u`BcG0q\3Q:V\>*3+<;]c0^<WnF/F$teWHE4)7Y1T`o%kMaqWF!>`MZ@?(-kC'n-E9qML>?4m.nmE8`gci]Agm(k]][hoce,$0aDW"1#cU#q)nGF<s*du<M@la2uB&T<Y%sG#85:ODii&E8Y%hWse9(LJrW's`.sn_hg^_9VIs/Vep&Ku4AfjXa90LDI#SFWR_7>oPs&5.n]TiE95YppFC;A@<$G<):5]iqXg*fB-Iq$8I7U"!cWM%"j^tE&4E"'a7$R`PN%,dK^>/Q\9%9)2%eG5D@55,.i27GWjLAV]$E)B=";$XoifL[kYd8-0SMki%&D"-%jK^^&C"==.:7#*Z@XiD%o(5r-G#b_LN\^$$7W+O",__hA\2!C1;:4Vu@H,]N[U]_Am2EpD'C&DUj5J7=PA-i]a$oL&kjR:8FL#\(=5,YmhZpjj:u%GAiP>8&%9NfGE&F0X"4R+PcVt<Z7,B>ZLnORCn07t$d:*slDdBtusjM@n5p8WSOWOdS(&AM3s3pj'3Q)b7mWC;^%2%s@/bH)W%Z&<kY`alE.%FdQu:8q%,>F'!Af"L@jq$FAE5OJ\Vf"YTodpJUb2:iIY\@,ZH[gJ9[:FJc77VMo@Rg[6c_DDLb<d'@0<.!cD6n.+S["X6.p^8a6V%j81iEP*3HTopQ@p1_\+:HqB=90QOaFNqo=pjtQqL,C'+(`$j=C4gnDUjbR?DfliO"]#oEcE[`<C^1p-D22A_gCXS4En!X$"g4GOQ%8.XQo^;ZqT*jV4u4<`G&q_UZ/TTJ)GPV!_99-N;(<p$T(;sJqX`>(1&S]m@B<T;JHd&A[HM$'o&--7ti`<J-dZ!I-aOrDM`%+=K;%G/#J$)>iOmk[5PDBaPN8,^GDQK<$>976ZCr9<rkR#Otg$jP*grQ%dJ'Ha<'SJ\qMT__V[Q$qQuKpn!`ks4prV?8>E'UjDM=2s1.F%J<fFL3lg@].IUj;kJ*u)[O?H3F!2Rkr@e0@kM^R?k`*d65#-cMoje5l!YV.e%02D6+gNDIGaVBd@teN(^[fAV;F/85Vk50^N_R$-%VP#9jQJgqbMq#.7kA@1Gn_];`K\=*PLF?ZJHMj;uhJG3HaR6+`@/H-*X,BZfAc6>GAB)D/EZ_k/dNH&VcbK<mSO7fj^nS6G=q+P=%AV)3c3J@5;Ud][0]>*([^*Ym!T&([<F:%\*!8fpcTinPl'!+rXVVmk@TI6t)5F<41jVJ,ALu(2RVMms"\4Am/-37.G"LaI>/rCt@%0"Zq'FZ;oD-\t]OKVb=N<Zqp.RXbqZ')`i;jRADXSC`&@LoXP`0>e@c5=ge2k'>41##9hfc;uEarn>+W2j_5#DEtXF8TQ\OhM8`<%!rFB>eP?tc1*]>V9q;%]7/?lILDN?;&eW>oO1?P8G-%KT^!LX[kDQS,P:ePN\hmd*)e]VI,smWeSM*i07+7SqO-pA-U8=keBO]kZ%=B7H6UM'lQ\Z1ln#a$&[:Da'+Rc=47+K.f,&g8s",[7gV%X<uI4j@.kgPS&3W%C'<pplp@'0'2P)+6;5c^nX8m<m&Yc#XSUgqINj%q7U"cP;lX^09s`Jqtc8^0Kmsq^$#t-5DR)+,=1c=9!?F:^nqo5?padoamB$oJssAbgF+KS8R>G0B)L^l7WoF)ZmZ:*ZG+T,Ea-dV%7_MK.O7!*A.]AG?ZR>KLJ5ZEKo,"YinfU^<d?gIUU7XuE+fd?'cR#R[]Qe;Vn&^Na_VZkFKnVZRDsrce2rjPPGK8A_7M)`eThs?I%ceD(UXVI1m7.)Z=2t9':_<V;<=0.OQ@bm]icLSiZ'sDmh[:@*T4fLApHu@SZ`I5.`B%D7?RB4Ep,GWE7UKqcViE+g_?oWF.Lce6h%lJ+fPm`$3E"gc0r,DFRol`c\bE<^aFpq/Rf9qT&:9<*c+K?4r^YZb8Jo3C^&bng?5=OeXR:G;ODBuLfSU.#n=CPFu0M.2A")l(G[%SBd+gR@ZO;\>s(AkW*,+a^PS#nS?*+o+Mp_f!c&0m9$PT%R4rE+d8'^aCL5&$4K)P6P(uJ9N?jMIGH#W\k."bd]!`Z'AQXubAOsf%q_=udo%c[(=%K[.A][]tYA'aGqLe,j]:TO97bd*C6eO/$l28+6e$.5r>_m5HKk5#SfA3lg#rXpU]1;cW<M's$oNu`d1?>%kVuNd!%BY6$#%D,&h(4C54.t/\f_eAC*=`=5e7=e%0'e;rq2WAgnFt!bO5ZY>6R?e@E3;'B@SR=Ij1o$=[c;C'gNTiiIWS?iU%8Ba/kJgN8%:><"VkkTKGIMQ+4=hh<<ql/ZS,%rBE-m4q1%V>?IfE3='Q(F,C6")R0)MY@?2"8]X?ZocTWi"Q(5%]Mm+<ua2+31AF!6nWnog1O:%+>[p\c-B[hhTs1cEK+'\0Z9JVPH!a8?,cIih9Ao9M@O4raOF!D6rQgg:QB4F^MV3D+g@5OMZfu4d!_qLP`W?B;q1ISgSYUc540`=%3I?/Vgr/Z\9F&K'2c"CAI5(r&qh9U&DTbu(9E#F[-L9c^^DNURH?IQke<8A,A9j;d,fPNVD=;OD;3"AnU'.klH=ZSHV6s_/0@OW\%H/%4H0-<^`GZJ)"C,ESBF%#G;PaYd=52n_0NLdlPj_=$Z;ll=Yr(js$F)+hJ-I"B.b)V!\&kdn3+?!lg2oEt(I,kZN\VKBh7.'A&%\k2WV#!^X6;`K%RY/r&?1"OAQ&g4+Kfg4%\,WlW1&,;s4gs(Ql'+MUcqY74qg0ZIp&OX=A]&TrmrJFp#.bmph>4(jCo*RdlI'Q@Z%Zu6Xp[MNHsR``=*'tm,@gGh+R\6h[Gi9_=_W`oPP=t2;j9AClqP[m)j4_R>A5Sk%'F)o,3[9YBSQEA2Cb"9DCmdoE!'[p`X,&27,%:c_*38Rk>@c8S,](q6,Qhp#2L$07:kDRZ0=FtQJe.TUdNQY/@U@Bj2+m*Lu%H1gfVf!s%4cdSp*Z<JHhHRO;Kk4IVSll=2D[2+m]%kuC+=]$5J>3V_ct?.&WU(Hk<k^U!U&&'h%HM$Z0)3ODM3,.^(?:62P_HO#]s,DP2#R^[.RD)93rj17W=I('>pM75h^]'auZcFMsm%O-u5>VAe?d*,7K4p'd9rch>iKO\Vlt/HVIXd424e,FIHG4GTN1@G0fd6shHB'YDol.AjoXE'D;>]6tPIRYDEGn+60_1dr'R9LsDl%:6W$;#ZWh#dkLIgJd\O3Ann6].JsP=oEip&TS,,:I0#26/EJ\E/9,^VM)`RQ*<&+s4CqfYGd]W\L$a=M+_P'AS\M`'8rp.&8l-kS%#JKm\.7A^@fWL^+jscVX:[Y,rlk7H>FT4mo"4#]Onp8B'M)"Sp&2c(TnS-/;LWt27YcaN/haDDrAqBB=$Bs0Lagg8ne9*Yg<+"]^%9([.<R5u9:D+ZOl*=0[_<+/O]qp_\QXK8c.+oa5/ML(Nu;"sWZ_/660:e'ISd6F=8&R\,?DILHEl_^%$cm%bRi@N<LQsk*ufNCf\%$\VJn$a\D#nf\,UgPN.qJ]202h7;DCm`lT(*Ud,sUAIr.S'(@IgW2q`gi2,[Yo(,3F0oN#-"^4uIT^]%/;DrhV*=@S91X=14D'X*%nl<q"d?FoRMd3rTAV10;e4t=ME+s%AeY./#_i5eIk!G8LN7tq80NYq>(H"`,RjXQi%<+1O4igVVdEll%in_&W!=aSY`8Ad^R+qm3%fWL7JLnmU<;9q02%OV[J\KCP\;qNSDViW&4pFE91h&C;W5CcO6hP??@/RC*@DS'9*e5](knm,*UmTdl"irkMX*\N<fN@DR0.B],Q%D*.=)GpiPD3OTK:TJGkMb4pcF:SKbh4m[/#6)h")j`K[e<4m,aT=Kh;`06K#/[sHV;#RZRGrd8OL5:;$brWU>q@6%A&]uimc*A\`%Lnr4LX/`RH?g]Jc]9j3.@s_P-i[diOk"(V%icMgHlWVb#<e_6#pNAKc#\5C%L7]>UHL-YCh.Gp+\SMX#P6<!+Wn7F?X'M5,(Y7*:%EB.+,$jBC\-.GnShKB#Je8JSXNMSOQ:q>:Cd]qW]I[cCcA@I3cYt;X,_Kp<Y;kUcLLQjQ#/8"3gaRXHq'f]E(8"-+oA?o0I&'n9V%'c2^;&[Ei['*0ZYLsY4Z:--S+m^an65#QMLXGi3563d$eC.P>=TeljcHffR5gm9F=E@B08[b?j%RGH,i^:)m&fg&7PFf)"@m7(%n%J33C?[@_>GV;>;R*1peRBU-]o.Qp'1Y@h(M)Ju3l[@!s,@Td?SH?f,lB,+o?*F#Z2MTd-7q5O&f-%%5=%-mS!4tX.UQc5,6G5QgO%C9aS^!`:a+OAnu5E4PcdBt=nf[T$/ShZG8,X:D[I*9!\CISH`jC0g2X>^\i3^K5^07UL%)dU2()>7+k$@6;=C*6][0-P]=[dHJe<%n$Du@W9I@"[PTa?\/b8(@[FEX,PE%4QYJ&93LAfoKRRd=o`jfjPfnA$n5Q_l"4KepA..EVeZ>+u@_)g7U?W?hWul#-[Bn<%fjD'a%4=<`:1D"Dnh]$]$hYk,-56!_W>E1pjA/fV]Qn)'TWe>A$m:mRD69:/=ku%WH?#FY&WL4rAVC;ARaPuU4B@EWT&em*Zo@+Y+2LP3)%ZA:^P>>Bu[.Y7]Rk=*o][[[B?$bg.!jG<O^=`R,k&q[GhgHsJe79J5)a&"q1nq8EXe)rFpSWVBc[gV>9=Cg9r2e%%>cWO"2hC5;j%e>O!/WV`dW',*]DRh58RV#BUUD(PZ,Q"'PNG3joBX$6rLVHW'IUK@e)(.Ir;/QY513:8;23Gnf:>%4P6jM2Y4Q<R#PO$X-CKAM#)%#![]9l(bJNQJY]aJ4;NXL'e?qO<H=fKhp!R\3k8>Y<K/T.PnV.jse';g,5$.QIkhtf;VYl1/'M&T<r16FjT.ThjG61A6]SXc-cK,%WQ5Io8ED.G?B6<.cl0%pPu&:lGH-grG?9d/Nb&M=/goA<:l&AF-DV7US=8;NW$G=;OWus4o;"t*%<\aK?FR-'7+rX:.gNJ7b*ef/%be1nY9-51YLFG`:>9.!2!&`%gdEK*`aL>1T/K]OA-R^ZHMSYMr_9(_0>AYjDhiTrPL,R_4/pQB3aZb\Smk1l642Nk1Ica-*O/SP)%3r@LK(FE@,P&T:.]%Bt1%E>Q>Y&'6a"F/"b]1rO1$tR6;``o@JSNNOgDQ&[>eba[e6D>/B]C:43+7H)PYH)J4LR-T95?3I>.5,FX%$N4BQKJUYRBT>S[9<CFT_h#%I!L-,=TpdYq4^L9S2);BT.UcXrg6VW:"u=KZRRV=^0GFO2-*ka1>omKU\U_%*^W4X_Mu%]21uJ?Y%8L;N^Pgq)**sXlNPOck1[pJB%Wd9//!RlnpZatiPdCreCN>;CP\*Ob_?U_bQV]&HR-U0b0CbIS%5JI9-0@AWEIg1c\]r8?1W3pW<%f\5/<H'7nm<`b_]F*Tmh80u=&B;t/ma146g`\FP_1B2FV/Qn*%J0Jo_"/EeO1Gib/O'TKI@3k90B65"^eIY.'V?`c[-o9Mug=O]s%5h\4BLUnAMNYKE4,?]M6rP%&IY%_"=SB4Ok64K/("t_Kl1A\EX'dDHWP&^abS+L:QVE(b4Au+_,7/If$%njatm_Y,fPZf63X10l<%+mKUiWjD'fj_4bDb*<bih4DkEa3#gq>KmYG](KMM"=h3/SJ/$/6m\qh@.JF%2T\WLPOX2QX::G(#:@oMg[K`ooYBoi(Y1U@(h(X0%)Ut-rAO^uQWP0di*9N$V9I[-4qi$JH'pkkuT/M;d"s#>Og!2?LF(gYAc_ZeGeDrG\2BL`+>Nn>ki2^_#Uhlt^Oe/rT280nP;u=G-%S&iG\ZE;U*ZdieCU"mF!Kr@HTPd,oq\L9qT&"im/C+*NHmB>&:'T]9dfWNp_U17*)8B==c"1/e>g7?dJ:aJ.q7qOY`"Dr,hFjA$B%Vc4Z/@B3&k9VukrIGjUZY##")Z&TuU)EjWCTW/LIGHG_c'a=,\SFe'QrdcI.$IqPq2YWJJ,^1d"W&.5KAS485,F,\3O0c%Rn>;P'%QLbY>RO2M$VG'D];^^X6!`*UCMf:?7957MqQM\\mcW!9kD+Y6X-3fb!H`3t#<&,#sfnY)LUQj%+X6VTi#lK:=)0WeDkIap_<+tC&%*bqK_2:gI'pW<#s@W*7=hfB,TF3Q5MoNEKq^/k%l!Wsl7(:qs&dJNic/$ZdLatgV&YI<g53d)aOWA5ZhOA"r&ao5B;`PSgVmdp"V%FX]i0nL&^PdPg3!Er?IkbnY0&GD,aWlJb'."eN(-L<m's1DIFDoWoOH9#[c/;*A0<9R4:ZqU)K&"flN*90&uWdRUcIVmhheN9XX7%jem\s`q<ZCq90U]Q0\`RlAg@k\ZpAEp*bKWm*/SEmrTZ=Ten5D5/"oXP^\XDH<EF$:0\!AOSahudLInUZdTE&l?H`41Jlpg51f.W%^:eK%cL":.Qu1K4>u^$NJqpglGeV4Nm!<3)e?`=[/j#TO40,ZO4TFY<m3N*2e]sd'AS:J?'P66\R_)%i[Bm['Nr/)C*Yja:i?F'e%Dg9EZ;h*:(._`A@cW+)i+d]2g,t7g64JhV5SK7\(5F-(QAhd3a&o"k':X%)b8aaIL7H.[mPI[:+cDcJX1GF3AH2`&8&fKWPUCt<X%aG9Y>"m22qZ$,:.c@J2ghOf6?[s,>jnYXp%Y-3+$LS&A_A$`R&j\erM]IQ%MCMp\FZn0`QOM`5WP:*q4g5?GmZHMK$471if,'1+C%F];H&X5YTB\QQP%4Jeo?SX6FnB-o;:C!mB^;6%#c:*FJ(>pVLNVT<N1^c`"Ea=i\LW27M]Z@aGJD/YR*Yg5Ap`LS3L`3tA'Y$7/_%75_JhNG#5t]DaXLna7Eb1uMd`.6Usc?@(;:^3Q>6cL:m77YH7:70+>(/c1YK->*,bdS;^:8+gRu[u6Is"R3Bq&Zp5BFSi<"\_3u4%ajpIZ5\IQ[]/42'GSFN,$>qV;peOe^.4?\/WL\+:X]uV5'<@FHD9UDd7e"b"o:6WGi=WI4fp4!p_tfhs$NjP<LIK;X!mk,83,]`O%:!H(3cogARjf1B>TW,Fle%0K5EgVZWE]C,Rjn1&PW)CYehEp%#F80=DZ7<XnP%OtmILS%%]*d8u8Otd;?VTdtYFj.`p(kb`1*AM0%5=`pt8/eD_<_KHD+UGJ_Xfh;_\KFK3Zg'V/"1;eK]=i&A[;^q^LMYk.J@8c&act7pUqO=Z-.tR!R#i:WWDnB0@?b`3-J['okHh7Z%Hs%UEHoP?,lTD)t!Y&m2?E6=AXnqNDA$q]J!Ih1g%p^K5Cl@22-KJm8"Ni`'N(h@-C</K2Oib',HZ#a;)f-NMk\3JdVm#Rt<1Wp1%%7PWUBYe:STA<9b9+<7u,8nX"f65"[T"VCCSU7eWcW8R3>*sTb2r]5qJqo)*=q:+RX\<$)]$Hge):K]SflL3Kn9YoGg!l?:^,hbO%cZSfA<]1tSD/[]SIP1p\5r<E<X)"0D[_J9f)#d_dX1KdPVLNu7-"kj,j:ZqQ#)O^NipcK*Y.\9LFHBU,paL'.'<=3qqp2Z.]Hc]'%b.22#R)[i)GjFKPV7s<*hptG*;q!%VT&TL%%Lj]AV0/!iEt#d#cpG@2>PMfo@k#6@G="@`g@0d?;hc>d\f*#mejphn9t[B1o0k01%6gJ`>Au31n9P;J2(SE6!c@r?=F)&O-.9=imXq9IV<=o!uMEi]FN$sC-G*&;^&!!A!X6(u0%'h*%,Xi/n[S@<d3o[k]+l/lG=OS](%ia:A^[R#pOZX7b(C>PcB]"`F1Itf3`C.:fUSI$%mP`liJWT(M_&FO$.["(VfS`W)o,6&:e5cY\(TK]a`4,#7IPTnISeZcqoE6P*Q%UB?(lB'&719d(KU5[%=XFt/9?L1n9,e;NA)>M/WVEF>3=r9tVdhWlSAMrZ4A[k28i*H52"nK\W7fhRE6I#!$la/I4U(YLF<<_1]f%@4mgL%2ind:`h0LJJjKFk;nG/m@=+tUTQirieMm21r`VrRBU_oT1QKNCu&Oo;.6OR72\r5DsS`GS38[k%.B5AEgsXZD7aT/BF(2]%iNQ6P/X!L%D8GBXLW!/C<jR6iek13ZHDl5'G";5fd)8<q[kDHd1LNXD%@CBk_Fe'ub@BBkk18"p@+'Saf1aF1/s-e%+==53RMBS*%`Q8G>rs;iJA3cuN7&MNKS#Ju\&8.T'ZJ0I7+O-4CAq@'I[P3-nNhlp8k\Ru:a@RSEk^))eaHpi)QI_]rRYkEDi*%'O^B\hXO;o,O%b)Z0ql>`RIM[4pUSS7#;WiqAqR3Q/u0O/h_oMto]26UCQ*O[>6AQF^Saj!M'P0iiL.INrQ`e^[+K.J39eX%6ho"8g2=]:6ea@TWI%?;&"<GqWW7%]_^LV;V1c#EsJ2T-h0bSR1@PG0mu_pL1?HT(\PP9nXr$I:>OaI2&E%l<0X;/>V?TqT<DH:9C)"!]H$lG[JcTBV%ZO%N#,lKjad"0nkH^haJVP`9caI4="'TX:iR\nYDPI-E><3#D\,bP4RR"=1r/2D*/_9&kqb49HW2-c%XUuVI^+KZh1_nFS4IFRc-I?R%nW,U!)(&'=0#1)fl/T?lp.F`%>bVpmA)p:97#UAuD'qOir>Lm?aP"=*@_pIY!&Nu"0e`OA5eP-iP]4,8d274qb;WQb8jUIN;.CGA%NHq"kN^o7_[Q+k5YYtlZ:1,iF+NR_]&+%_3eKN]NLE5j`#Ml7.AY@Fu&uCeBnbB:8@\DH7LK7u!'1!=PMlfNLDf.5dYFW5D7deo9%N&/<6&oK2dF"A]R3n(F)_K!'+V_(a_%&Rc-2(6m&\4QBCs"h?1gI%9C*.MtNW>>/`.>QO4Jgi__)=:*lELtk#Ii8X<Oo'JK4o!Q6%pFR;`m8/Y*X@X"F(I(/*H^*lpE%Cm5r$mq$]9X(G&!(>"]:&q2MAf:B8:ek?KBQf)I)5+teVL]7n\,43H#g[WL?E.:ppkWo$<"Lf%$Qtb+n#si1=\J\J4pB`4&A;)_H5H$k&3McpQZhOt-BtbgU:dErV/1]Sa&J*=8p$^2PY4_6j!]@*-=0j2XcsGm5It3-5O"W7nCOMd%?%TPOCML&SjeT&':/]BsLd"J&PRuZG4Df<*(+`>?]4,[$BEjmL[;b`P[.eFNRN0q%^L7&Y]Eh=R=K:\i.N3SoO)8"8M5A:R+s@5N%nSf[,R3@8-77$r;^"1n;?2^=8aLTY1D-.;Mc^O:uWd!9BmE=4BPjL#$TP%Gi[Ad51NKdhk%2;);9mI<2.UuUL;eAN,g6/u04A@9#%i&5LN`kZ"ago"C?s.a+#rl&"]4h65S0_"[sY6.R_'q^VZSdjjcXp?UR@eJ]G%\S(k>"U+PZ=l.`[\Oi\69SgY\6oX6Q7ThlnohsL%@5r;NDcplpD`m6s`tMq_IBSNa8Ou8n6MCO<Nd/hO@FJA=RU.Bb5g>Dq5,9FMQ%4\'lK69Kp^`(_*Ks,lAIfbD:'45Vguj\rI>+s^%NU6+"c4?5goA4J6VE;^QZ9?:<L!X.\B!MoWk>F+`T:.NZP/6WK+kGt,O4g#8Mfgh*D_tfK614tRR1h$_\aMO];kU+DVKk,a6\BPP%b?-.0WUI*Kf./=BN3?_J;4[;9lOIR`o)fVl%Le8hc!]cE52JV8HIM.PK,[#p%K9OMHXnUS0$!2%U`>Z*+><FK%;mPO/qG#9ki#1A%3s).+aWU[Igiah%"m@R/Nc:CSZ[tcZ6h%h,"5$`SBq357hK'28eEA$]HQCB`'qKe5pT?X%P/tU8WNmcgkh0Y]+>6h0Va)6)MUHZ!%C?%@]=\LAZ30g1*i0Y>"9LhWREtpU6H33-Po\Q7-.aB/(*:$9U@'L%Z_aF6`A;![[]al()0b:C4Ht_k=KhDi=?s&sT9+S.NVH("_%REB'$f+RG1f[.UI0me\$ah"MkF5&*'QDCBZ=utY^U(Kk3\sk:i0upFNgp%;#9`U<Y^Q8.R9s46$hpVu)Yq`^.N.^bHOMe7FPRCT'%bf@X_Mh09GM#<1+:D[P0#$!=8]L\0\b9rTX[G7?tL'p9AWR6'5XA=L+N!6kAG2+R/,F6Yg:bJN)Ap-)=OSNBV#:?l?FaqB[oa!cE%VUPCSL`h]h:ZNhZdj8s_lF7ssCJ,&'6C?CXKS:_`;3&(_nJ]o6rnMmd!g05g#fn-La*NVsq3Z@d>?])pLPbD=fWd;eRX+ca?RGrQ%gd9,Y2csg@8Shi0Vo0?oIQ&\Qi,u^U7:r"s<fn>DBupqXEVVaAGLq9Uo<4+>2j\nmlT6m!Y[ct_hNGV8JK3_Xm0pS6EKO%*X@V+'%L=&.iIUPUrO1T$PL'[ogd/=][0W1JDA"=_YjQscP?Lkd]po;M9Q2+C+9+0_IW=QjX^[A;XlFgBY^[N]XcCR]JZ[.`DR';L4HK\Wg%$(Icnr>h<S=]iN^:]BVg_cAMaVHQcg'KEPeZO[^panGuI&"cXKcEu6\dR*m+d"dHpdb1nUHaUS;iDgAP%Os%aJT6lK@QC0s]pk,V%1tpO[N_J[gCm3/$c#6dfYO>eGfVF^cQTNil,3@5/OFU7f'A>j\6*'0`H2kIV$m_5lZFc$*Z7and],k4k[D*kX1)&DCeW+>qXOc!L%=aeq'<J&JQA-gpgK4Ok+9+./gC14_n2Ji%mXm]VAQ,?T2pkrVa\ii<`_Pe'R"[U4^.Ep^S8$)]E+ARG'OqZ"m4;o!SCabLT3,SuO%7'N%\ASHXm3,R0ucpY=740dJ<g!E[/_5q1]on"7^cB#u9%bJ[VU%^PpFTZg^'A.Z:0I3K:oR8^jc)5W+il^kl/3SArBd)7"9l+re%2K\Zip?T@Dq(^SO9oa4.l8%Xs#FjHP=Ip;Z;jXm!*R&I`?P))%1$/k])='A;)X7V+db8V<6:<*,U]@:f<+Zte3u^53o@J.ZI6&<N%rP&6A2<oNY8h0GE$S<Y<gGV2qX"2LLgYhqr%BHuRCb6f7^0a(Z&UcsD,Ag6<TU>DYV&e7'gp,P5Z_aeefC-<hpH2)m:bn0e3[sfE%5;=:7-5"B[V(9tM4kgq,'tV/fKH\V6I/?&sr8;Cjm8&99XH^DpKl"N5@G\'8dd$YqpRUVulUaZ!Sd[/>(8u2291oLQA3Ak3>eYSo%%$T@J_O)C.@f&;Yo]==ehk.d%DgOi!Y^O!ReYUg?lLsVcq69l0qXo@2kqcP15"pUur+?N\rZ,O(XEoWFr5R`G>he=DJY`si=_E\N%M;r+h9R%^7S2CK$T,=lRFael9A-bad&H;I+1R>>B'79[K09@.L(Z3>72:4m)r&KM@^EM0T8gd*(3et\2j:P2KDK`^afY+N!5lb#b%Ka<GD#br"](NL%0L;t'r<Ult$%bOA;ObGJk%L<^)mO5%_P(BET%/7VZQ1SPK`>8`H-jGD/@h0leH<$p!_A!_i-\F5/RIT(KmhD$[%,'=Fhp#/+)aF]-eFgcVgTOQ]!0^_u9_Cq,Cb-2H&NpO*i1!dE4&sHt$,fE6JD+9VL"?Mt%:Qlf"P)>W,:#$_T_7C-Ig&[lH7#A,N%#./>[718&+]jnUCQtD$OaGJ!7iWqqcmat]=AL%L-%3soEHAS6Ue]CR"/k",b.[Zg"%f\su$<0IVdY;"[kST*nGdgIXX^u`@9U!-P%eOaarD/L_`2+qUU2q\h\R'hdD=^m7&1$qIWGi(Xuhu1$&0d")>)kqS"0cI(9oB*h"DO&1n)mNC"36*V/`SBB:D_T+A\)CPcpU;=$%Tm<&aM?(e"j((r\;N[P0UpSKVJtrK'pbn?C;J(J/Uo?e)VE%j.-l#nk*dBVfZK")-'BLB@]3Bp<3<aC8A.TP>r5)fiR"HFN:V!t;%6%GLrHYOfT;[+?gdlJ!FdfLh,0T\[`&#E/4=6\`*0*s?3F.r9dgHISHYQd_n*?p3=HP1UZjBtS.)aIV1G,AG2`-"Q4BDJ]"kh6&'%:GA[=3,-uZD)cYdpnE4clttZ9o'EfDTU^e0r9KCflJiR#9h?M-0VFcEAaT?<L0LP#W*['`*t3]i*AlEbPRPnM\GS5]lg>k#1Vs-:%Lb*0.29&An+O&nLoU;ki-$*,U:.r_<,$lhBN&piY[%=#/)CRE:NB7N1<RH+3kQpZW&n`X6-Ra&E>%d882963sDo::cotYq;LA^QR%l+I#2R0kSkfhGRsQ?=^.O`$F8>qimE1$;,i3P9tg\TQ:?<H6%L2=ZEr\1faPOO\P&X(R[sf8ojfCILA"Hf<"7QZ.rI@Ql]EmL1dC%k69sYK>1MFEJT<5qLqY:ZZn4%46%6aImnAePPlb7&&9f%S.ZP#8Ib"9M[:,tbmf5:?B)roTro(lgfiqn=:qoD[TR9t3XC!+S=FKl%;&)>YhthJ.])BFr+17F("dZje#$dW7@r/<S-jWqOZ';J5Mb^Me59?.c<2:UrN6\`[aj7LC`?UKM;q&(*k*_+,r.o=Go$5qI)fMWX%HKWkbm`L=p?0kOq*G;Jg#^Du<Rs8NV7,QHQTgN)C05Act6`cCPB;d,2jgDq)lomW<06(h_i\c#hn?K2W*U$4*d=Bl@57lZ,GJ]Al%m`=u/DMV,6PTldPrT_=O"P/GQdN'LqZmsiVIKbNmLPWAK--b**0hIO*\:jo#XeA]:+:iKL\Ze)rOn<rQCq/6$ii$Q^Z&;1KZJ*tk%oU4Xu_7=7piMc:fL!hs]+F=OB$]K5OB35NOm^@$"!blMA>dUO:#j?9sIK59qdi>q2b=-T]0LC>*6aU4*8>@Fp>"C#1AH!%_)SlEr%=:CBbN*+/bQ0``"%&W#BbM]/S"0AOn7>(?g%bb;+)k_l%i"`%;XdHp5kQd2;notdNF%</9ga/-*$IjA!"?i$3YXjFpr>a4fQ?$nB%FNiJ!%TK0GC#1K1KnZ\D7V"o/Ef8LQTj0u5/Y,=m5PY#.Jj=X5D3&;R,nF.I>9393Q*ofm2W2l<ZQ8#@S,s)7#pY/l!VUiW&.*no%SunVH_sG9/Ug]\bX0nkPTYr+5M:&!W3OJnE5+:'&B7V+>@ju2IT7^gO.._FXfU.0H6da\kqSs\PC,Xae=Z"-QCRUf90+JS%+R^FS%Kd472&S]KC9o>V`=iq@0,Kcqe,=A.r4*aft7!&Ej,P1J*m%/'A,2;"!cYekl,,)G<404/eU`sp@Jp:UkYi8n+i;6nT$q8._NIh8!%IZl?Mp[$O93\a/jV-iG7V3D/j%`R_[I>$i?d6Z3V`fkD+#MIJ'7>4*n..)DaW@=.dAE0H7b:$Xco&H+?l'2b+<Q+*5A_*e#-O(hN%<eH8T9LqFeQ&gRRaqWCq[`H;+Vc(q(X<KQmD9&`dTuqA:MeX65r,:EU3R*AF+YuD8:5h2DSr0:i*k=rgN2R?:$7>o+:/R''EJUTW%3*.k+./!J6O5^A1`,1o[SE($)j8b>jksd.(fmR8(2:hV[?4WO58DatW[cYMa0W:@p8b))fUkj,i`r`9_#p'H`"'#d,/8Km6I,')R%8KX&9YI$],$DiB34?%bi.pF6LH)WU0-EF4B@c/Xl^ZO%5RH>dogj4e.7iYi(>a;QOoCjdNVo6Nq`_VF8cqNU#<^7HOqoJ^H!o)p-%O&Fsh%RF9)jf-V8)*s,qKZpjMi_9>m*BG=)&ZaB0@N%LG<Mfh3!bD$1VWqAVKLf!XCRBLE#`p:J,Z/r.p\S?fXH[,I:]=17;Gdli%,DE>@T_hBE.6-[)e&RTk%ppM()%pR=QF-&EgBth`6.LLD,EUQ9?"_H*IXO0O.;j$&gIORA'd]#CF([f>;@E><<k]p?Pm=XoKQ*in%)"d2-EM/l!1fA;o_,&,`[&>E7PfkAS7)-Dm4f#Xr6'DaK%FOhaO7NB8QdaQLFe"8*DZMsQ8P!o3m*XF#1GpU*.Kmh#\CP'GJ)[q;%:%kI^Xd9_n<T#+-fM^:!%/GSl()3sZYqRC16E0N=!$bD\eRTX(5[q>4pG)^j]E,8EXMgFH.AA7qb(;T_=UPWFD.l+e]ol5%-2Af=%XQbW-Pie=K<1H*2E=9e?)e$#eqiJTQTA@@%ZQABA[%O%(Z36.gYas\9f3$008j4`?hEP4;9o?]0gf3jdY<tQYXo=:%](".:]iJ^"%.SliMomt,2,+:KI)j!8.Z9eJ:TogO]^DJQ5]fp+rBWBLteCgS)A;nFB4F9npPIO.]c&8-m=I"2?ju/NaIJV4oDrf)4=fjW4DkkLV%&BoMX5EE@b*ob^1SK&lK10[$-Ms./o7AS:;adt;N"XX9>QUqC@o\@6t^Hs3iJE(+-5tu3i:fAfA$:\eBSLhn-#rVR%gHWd6m^gX+%]gf"oZ7JM4Sp"NZW(]`0WsFg0Ej!4!P>-u`)"b,8L+7ES)6Ge)R2'_=0jZFnKsTn+&SrZ\7B%*8]Otbono.#ppHpEQL'gu0GRfcm%"(H!,:?%S]B,Gg5;QSDq:mj7rJUkpo6`Qo1)ntV\CZl?lgjCD,&tO-qe;35)J6;R=mc"?/U0hVO%N"Op*XlglLr4.kmQ+Fgc'sl)%OWW@7X3Cpc6Y4]"SSY&fI"<C9Go"j,4c;4.1p`IhKg"hRABlR^^K:@cOd`&3X?@jF,$^F:<[>jFfk@W"P@Ha(nIu<V#W>paPmT+c%>')@(!\Z(YR8PNZ2f;S%%hi`A>b=Z28bY7MF(A6,!)io%[72LI..kH6W!4^C5Q/9]T1Ua/=g*U=/LJGFN`:D.FW[NaKbbC=O-[^P%M)e6g?Q=,IJpo/@Jtl@UEIDfqQ.FmEO]\WTl?%/GEih<1dcZ?[JqXN!m]R;o[YadhbU'9e:m7]c0q(Z87!-&Z]fd0]0,:Bq2u,?C%MXAqXc&.6*[HtbHF,p.?Aq<F25b&eT)O'L.Bfq<\+WNZ+&q<8"-+Cf)"2Z<RQBeI=cA<rn_K"ZdY+S:!3j@i_WDS'Zd&o55TduL$%RAu$fg(EX?;h\oa$s*[rq,RmjU3a'=8JnV_W7k\1cgo\nH#]>3as^s**%P!)MJC-$pQ/h8=`gEbIBkKcJBFHS!51r(79Tf9(f7P*%Y#"=8[Q9,*=cIkHAQGY3$aL9D#0(NCk#jD/;A+o``/*LQ.3\!pL.aH;8:(OP6948cX@9*k!T>p,GK/Y,+k/L8N*ss.E8"AQ,7:2c%!\7TC"(<aWf*`P14:uAkFg/YV#K0)oheGDT!Raqm)]'O?IUHGA@A]bX7&j<5UZ[@"FZj3`9$eq#BL#jV@qa5+RoLWr_Z^[?.Gr7!%=T.7]lQid=a>(4KJl0Ce0JA(J.'83Xnn"E9TN?P/>Ok<.Sf"QWdB^u;'EPj<]^rCoehlJE0L97ti,o8$4is"`>BDe.6@[Q@e;Cg,%S2;<M;N/@[_icO%8_3O"-;m2&f6[(QM3XcjA62k@(^BeBpM*I6COd:'i0OI33KHX6:\O(5a6`!@.CY9.Q_rXrq34uF)?J8\%Ut9o%_&e(<-BYoQnt4ET@eU3S.\f(;Z<&b[N8>2e3"V2Q0oDHm:iN2(Jj@_Fl@RAhe_OMp`eiombZ(%S;^sXh%:@p_p?*[cH+IiSWUp4U%&!NJ3"YWDTWr>7f>]W3!r3\'Xlk*+%S+%;>4S;OK#roIUF?iTKW;Apaa\stdAJl58LhL2%X4\p*amR!4hr)G*'uM]4f@aj!Fek.q%lAQ&-mcCUQ4#,C#H&7@Kno)]-JZ?21^BOp`O_[-\cc&O"&0]J7)$mL*n@]NY'JaK\XXfmhV!8&]o9h'00:ai"\G!b_NU#lsUPahp%?UokJ_0WLFJ16Tr$"&W;$ot`$*8Pmbm"67HP6W<ZW6cldE,7]oC@rSra<V.hX).Vt+UNE,=Z$9@8W=u)))XEUr(f8$8#<7"l_5eF%aB%L%euXZeNf)0FM.DndGdq6,nqM#ddb5g4&ZKhiLrGrDN(>C%-7"`;)5\skk;sOt,EmUOmLOC0*4#(*!10!u6d.'>J4b>$4)_HD%%\)3_D%95Zh_klR\5JEG@uTA%Q\*2*"ffZ9/m*s1p=[tmef<=kDM`H#QAZE)ccro]+HfQ%L22YcZADsT0N824>#X!T?2Dp6S6&0u%FsetH.i!6Y5lsB+B1[<]I_KHt#?\%u]rV8J(q\SZg#RqF)Y*.+peWINC93MlP8@fl:B7`,@73_hNmMbO;MJN(6Vq+@BhBJ$Sk;%Q%]:6`/PIEY1;@'-16tJ6@F4,m]4&a;TP!WifaE/AZ"M;c$7uEf_!Hi^ccJWp=8lWR$LCFZX$qLGZDVBbI)Of/CdC'g=bTHp!%StK_%'D&7cI[<cugE]Rg>XYKC'NCS>RQqJT"EKOT,aoh[KQJnY7_lqc65NKH]CC!''Or+3N@a>j<#OPUZ"c)*0T,\b&]pFF-'(P"]Q/qR%2^J,(O[1#ch#>`AqpSa4R=7a&"17e#ke]Cgh]*gCB#AcB&o(],A9k=IQ:YP`PJSKb=8qcYI$aa@Rf)8MbIi2,0GOCXP(3-bW_="B%@njCR:sh4-2I#o(dg1Ycei]6miL].c%u.65>:BD=)r16g'>cNn.r%lKV-H-GDlfjk3.!0NER9k$^uY9io6)'cE2PUnT^05t(XWI[%.tZVVr@\GMHBkPH"<#:;>g+20,aVDHPO#]23='=gXsC`9WLfrWQ)SuHlGld0lVpR2V!1;o1-f1r5/Q,]OGT+KjFco"V2:uMi3(bt%h,M41E$9c,!PKaUYLl.liSCGXE>?!1bSaitF`C\M\e6r%.@S4rASOu+gO]\6O'=-N*@S2'X0#>]jFIJqr2eSlPAGH#"jPncC!17!%Tod*oXho=KMAn'[@T7&(T*WV29o;m'"[V.epQC+^=EW$U,)W9HLXEf0m5/U4fHtHXT3Wj*pt$WljPG;ZhGlR3BB@6@//Q^iAqt^i%`lGZ5$t3B&Hq(6$XhZ`$:[%e2=<#EP&a,XE@HX[eQS=8hlc\0d_W8bH0>@5JP>?YtlK))#56&mn=52KFmm$^GeNa',`U@,]o#]e(%q#&UmYMT8rM`7g\D^[jMnP;CLlM7j$:HnU=kF[1qfo+J^rV%s/IJ`$qYOq5nJ,8um04'/%l-7OkYPmI=hgbXinIPZl8,RVYCZ5)M%s8%X,?9`]0me%ALs5+n^qpKfq-2#o>If,+*0-3=SpTHdXc#:97PaO])i(kU/s4p0e\bkCRkHEbAil.gfrVju95"Y5>D0kUCbMM1o%_M:_/4,0hsj03q%KC<,prme'Y^\X%qaRA^8;%L_4iTlQ>o05J:oW-kq`tL:"P]->oNrSs(qN*p8P4/>&/t<H@(\,C(kcas8KB<"%%(N3Znq=='*rOCQN#.*hG_!DNZ4@JbMjZ8[$TT_0,C[H`C2E5']AQsQXr]B5[?LO8jDo5i1QsFshq/7_qokljm"Ng8rJN]$`/mZ,J%A]T$%HPVHD-[&9:/#LQG+QQ0Ap#D_`m!s4J3q#mtZ>sX`GK%aDF^CCe>lo+DLb[ZM20tsZD(Y4tr:q@3+8:N^)%Qj8P;4UPc^K>0%0itKnp_Bj#fKCsI:4PnE8Bjo+=`I8F&.?-6?a'_RgSLa$8@H_1&\5OIMqC0IP-hA.6-g5@fG`Y0fnCGF8%46F/J"YM\D)#e:/:=>%AV7c*dcbSSJ`0#Km+EG)@EAnjIW@qja*(/4hcnMVm_@qj\b+'V"&,P"-O(iYRru/g6+d^EN'4k]<#"&9.gPTU+Gt8GB$TCrfVGiU%0$a/;'?9j;4#2/kA*X*NP.kr9]d]Mc?W0"RGJ*lCYj:GV2ngH9$QJ4K4WEs1\Wt#_47V1>GtWtegY%PB&7_E\K`NWJC^`fM`6!EC%[ZUHWfVBj/LcU1_@?MB_E;5QGDD<-=JFDdd1YCG<D\TOG'02J/(:Gsp>VL=A88:5YOe3UT_3)"8@I<qZE/Nbc2ma_\K8".t33c%J%K^WCVro?PYaM8Z-+K,Y8rq!*W`r3TEKq)%CfHu:[[K`t4r<"-:"n'nSh3^[/]Jb)2-*N#n?TmX8/r3F6>qcm&?!8FDdJe44DKP-.%ZQ$#">1b9pg%Ya@/mL)Ro[4@:k+NKriYnuIh=<0=@%ipH_hCWP)aD[QE?:DZ4*ap\(thj5egJAXfnYcH"]us9h>UAkTj1f*M"@j@%fZD$O_,g$TqYl1M3H4C/S#_QuPn&[D2V[,#)04KdhiK.TM4OQ-)s4LhBBtbLkNp+.hZKs2p@%QO06pf,Eb$p"SCfHb%9pMIlh_K)%jZr&Q:GTtkF93X]`\&9d#@(m(N_J[gCm3/$c#6dfYO>eGfVB1>C?=P#-Kjd`#WP7/ThR9]j;muLcYpF\JE-bNB>(Gs`_GTD9el3W%kM3Wk9.gn4f$o^o-*5\LC0>u;el6$g]lJP$ohhnE/S)#`L$c2!Ygn*.^45*A%M-(/*ZU`4'E\M7W%i#<R7p-rZlt?NkJS\ndFlmB%/NSCKj>L`bV.]LW,-lL6`bffAgWuGCm*ok8.BQu5*GiDkgd^Mn@&i,&J4,c]-]QIZllWnpB-]MWqSn^:\Xlh[IR<\`:r)..ksVt`%T%N>XD!:6[mFPW(DD4hNaWr7C&XRXq."\\o/,Z`37d,F`jj&U;Om$W%3K(<f>KfQu:`ub.q,C;?T!OskCd5@:hPJcLlLsVSSR]BV%`0lUpRkR!;@bZY#*(#uDE;T!UOcO0kaZ59fhcn;oNI3*jIgB0_:4hL8D92G0Nic($L/u'-^[>^X)3h?0R(PnU8hKi[9FOH1-\'M:%[r^pf`-I0I2Opg]qk_8F`8_8KICH-4;,:nEBd)67D4('2[C#dXqdjQ]pRX@>&c0ZVKnX5,olAIcD91hN(IfUCXX3-[g4!rp)GuoQ%9CDB#;A6^>%9^HTYgof)dd$YqpH:r[oH^7FFOE^#DU]_!XnpS-/uf48jRSGpG9$>ZhB>Y0,3dhu`!RNd::W`H]C'E9,s$,adB?>6%R^?1apSW$]q:a1^phS=?L!<BK?SV"p3]Wf1j)-14\=;Z0\.Cnef!C]R2NXpg111MD.Ri]Q_n]$-U[3GVpG)#^pBcc<^L^J@Hq.6I%\AaJTlaQb+T!I\^qfC5ZQs>JD3jAV%DAlc7O]h;C?CFRJo!*TA_b9U)m%m"4X-0UBInr,_I14m)Uu+Dq`#r1a'+G@VFp8\R(huN7%Mf_j2a[`W3menBth:(f*:ssZtbHDb_e<P#jnM/8F]mlh@"W#B2.jBULUih)o8CJC*gj8ipbhp*`UqQZK$2"5[O5&M9Wt&6MS,GQt%7524;=4X6:q'6Q*TJgbi-h<E_/uG*&lRB%d=PI'6&H89X'@p"CEp,ZoF<CbGYikIL7(ritC4Ai=5?k_t^6]h+M,jmB`QM>XC*DSQ%cM$Rt9d!R)m);BdY<JSIhfH65+oK%PX&2A`4;k1G6j'@$s.1J4=78qeSpO,>hfo$6'Ym)tO#L,kU*AYVf$L$ZgrJ-2b?1sGf#Y"[%2MAiSIl5A+kP_.bKuHF8J'O2TU\C\!j0PH6YBr9D3IIS?Qb!N[1h?9C7CWlh@^NilZ_YCR[$_Zd#T#s7gt@!bJ`?D$m))60\.qJi%qbr;f\%SIKi31s">L6DH@"Z,TZfV/OXtl)kMs=c_8-U&^H%-Pc_(=QPRbs5VR"[EDrR&nt]_pnD[!<$;8Bq9i!N+*ti$ZUu>peWY%@QE?EWK9W^2RJS12HlJCW9-6FR":[qC`Pq]O+5p\0TitAHkV\J5$3Vd@UQDM.QHRm?P)qimb*G6j18_nnnNRpSa-jDhF^tgelUI^%iIr>J`Ho9r`BYC;L065G))]H>DRgbm#&C[DR<6M&UZP3NZ!u:t"VOg4)Zcf)Jq-sfq7#tImN1Tn:WHp8XLV"gIr]T7h@iiHT[S*A%6liN-QSsNFHhhKq@.h^h[t_+LOCr_8S0N6)[iE"-7O"#ec!k#?FuFdNB+K/ZrB)$fhss#>)S\e05_&L!B00m]pMq-qOMc+9YCT3)%86`Di^7\epe]Z%/;KDCBh\pe,80Gf08"TCLdq.GZFFaO$_4qV-A`36W>m;>rfidV1'NRW%@+b^p+\V/0Rq&cC>/RgumMu#.>N`e'%Um7bC\Q0:k;!`#r"O8(TR/2(d1r&.''HS:iI3jdWpAJL"^u.7Y_)fkFW&oafPbd,h@K[G)SlfDe<9p94"U8Q?OE)4JKt2sXoK1'"%)0-QF5;s;G"W7I.,Vb/V#jotuT83!7%(15G<+6.0L%c;sYumjg:a7GBK#]8_ZWe/e/MW[;bbMP<>Jmh'/fZALZ-X6Mb_Ho!kfTTC%G9UR'"(I_aaN#Z>*I8bDa'K?3e)o8Ll@ZF7EHr$>odKJ^ULNQ?3g;aEf]YXO8ag6/or;4>F]Ar!_^YG"/CTE$_I-`Y<D@9RBF?7q%`D-hY"_:Fd0!L(^mItu\`c-R(fI/Zr`saF0Q)rE!fsr8&9IaV)3Qfa:f[1I&'eQ$p&3kc.0l``Pa0C0u>IE=I8L[\CjB7@T2o^-r%+f_DCln%X+O#N7HjbR#'AAP#06aCAp/i@-9p7V-]&ulC&9J@JU'feHYON^d*p"Z2j*:FX'1L_Rl[OC]pTVWL<WdR,t\lH\4YtR=@%Or+j/SQ$&#"ilt78:&iG2hVQTa=4msH^jqnc'57BD]4MX=[=\5X=TE:Ya'h"``_uf1[EEHWCl/Xr"(()J.0[JjE4jbUO!_#-m6/n%h^P5BQB6`H/4d-R"-7G4N$)l2J5m."?0t7i^ooHq6+6rl&08sTfN!#>c)AEqfq?QgO5sn;hTG>cZ82-InfnBO6P-)S&ROo@6s(1Y%a^fFD#V*Lc+04c'iEB"caI%a#KqDsE:6B1n8m8c]4QDMYFWtpVbsE&;<7'%g*p."/m`*PYSfqjWBBk&6Oc3(p"fUr<1.7<Y*X)^]%+=gIc7Rc<GhGbp6)=jZPKhd(H6b7KBm"-Z]+&S4IFhl<,<gmi42bf"s$S!eIZ1RSXKiK<so=+6A,QJW\mULF#Td\GB/:F&*Qou%,%5,nY)C;-&d+M4a*m$g:s!G!lo$5IYKRh)<YT=^4DJ%jNM<'AFAD`Nn?CA)+c&:',X-]O^Ao&-9E8l>fsT*%IdFb6Ie#)1L1Yu`+p%'7.dbdT$_r[$scV8?@c+R`egb)9b;B\ta%T]iMY,TR:5>JP+#Y_'q6,:r$BmBbff3UVdLUTcl,sQkf$@i"\YX$li*]='ce#+iQE"%NE!Ni4;oiJfM5FZd[8a?@jH=g=U[<6HlR^I^Nqd6A#=AiGVSgUODKQq_]]XA337fncPlTGnQJJ4$=hYl?6_.^3e]qm:\hQVR[`>.%%BHp,Wk-95P<`bg:1!k*K=9#I7cpAD0)0u;RQs,=+q/@3W*^r_D&S3SR\tq``m\':crPM;rLIDhJ,cT*,p-q1&-qEUhAhomTIWtW%,lAdK)JW,d<=/I9RDto@XLN(\`E$!/bm28Km<HC6poQ"Q4G*C82KHa3UM2FZOMn=@(+Q$bTa%hoE'lr*dZH5%0mpAb&J(.f&3%^=%%U^=OX]g)]]frYIVJrog;WP#'q81b@+M;2.N+25k0`JmNPSN9p$G(+'Wl\-c^`)Ja*""*iNp-h.$>ut:L<>Vq[M*WYihU9gc_40M%k#XM%2>=VE+euem&.PgD(@(sQ)>6j&C4(FlL!*HY\/`Q]n`.;S28s>K4Dqpr^h0B@il)%u5).rk6G$^5^_QU1S2:[sP".U.!<I4s%]C:_.$nW")qsM'7MYC00p$)6pCe917Pf0eM/dt:eIR++?'1p:X=F]`es2Goe@CP2_EpO.ILl<ufk:M7bhnUe^1?G0(ZEBR[Q[DT8%)AjoZ4"D)IV#c/fF<Nnt@7s(L!*Fl;'&>V:OG/,Pj9]4Z9qfK\W7m2M9S8/+<Y%-$L.MqDc877h77>#&MWH<M%-5;Tr.Z^WOL<Ac%Whri39.ug'8RH^9Z&\\_-BoZh+&Rh)VTLP6>p=ddPt]2%FG[VQk"5hI3gtm;_&G_P<Y2U\!FV>0jD,kF!L+cd4n<_P+dp0JHj$^:%\5c/[+dTCCJ3e\*L)7qeg0g<;od]sC")4LZ-AF3%?lf(T&aTNmAh.ciefCur?TZsg(CVu3S-BU7#LI6WO9Yh>6FL-^^K.lEB2m.'%1BGV5r&/^1C_g<GIqnR$Od%`c-:RA8R*@7H]uZfZ&VN$\QV;oVnqJ!,A@6=&"m2b!`IuruN5f#A;WR[^d/?%<,W,_A%G42ZU5^dg%Gj7P7,n1298qWIRr!\E&]$@"bitMXo\8`1=6bgZ(q80h86m7g@pd&QTYr.L'I\JiCk`IuUDa4'>[IL<t6?hjWO73DSb[q),Sq3Q!%;?I7h571um-+c]O7eeFB-fWSf5:p?VKE1LR<O`aij8Q1D&pP.BUr5RWTqmAa)X2PG:%HMrQCiVW9-7/S)![*s9%m>bLJ!!&!1C[M%!=]Z46>\7tTW?(6Nmo$tb\)7gg[>Xe!rUSu55t$H&-(e[msb7\BZ;4S[kAg#k=g9Z,:hQ/N^/V/)#MkVJ*4goo3-CO[2XAhp\HYU%mg76W4JA[aqec<.@JlF@s0hYPXs&QQ>\b60*uFA2^]0Qer\8Es7E9D3/Fch9`GU,h4taYK3#jSl/YG`e(V,-WTT")YCJN8HKOU4,%F0RihgS+)uJJnj8TfHS0nF),6G-$gFm(orlGUljc"Z_,D4<Na-h%.Bk8?Ui0Y2sX(4osQd=0BkTY.dfK#P/\=[F1+q"B"reqL)&?%J+`_p0Alc,a-PTns3L._(M4ph+KJAaO8RQ>kNg`rb1D-VU.p+4lK))S]`#m;Da4,c=+>9=R(N7E>BurtJ;kKKH'S;eh7);%!quPQ%rYuBX'RWH4m$YV9[ls=)mXBWVXm_X7qm2@1alpC"RfCFgO8jP(a8\;q5<P"cq1!bj^]&G%rojI`l5+j;&uKqq,Z<H+;)+hM_HaW5%Nbmssi!RKk84>^NUHi-)mn54[L?P"jFK?Ph?KSL&Or:2k\1WR'\iA>'.]H'GbH@Y<"B=Q\aq/)j<K9SQ%G8.78S#4^>hMTu>oWlZ%>s3*[BX%$hhkE1i3*-0KU@HH8%LBd$^h-3?(0<gIk=gZB,aI[FPn.DEU7;d(NI,6=FBMI9Ppa(OPZ-V?^gbOuJ1n4m,&<'.+JsK9%=ES">+GgV2[LMX5+.(K`hK,,V@(juV!D?+JBqrHD$R?pZQ$Oj]6[0mBQ:@/qBV`FWQlrk@<lYH?`CW&O?0Z_"_%F?'lmBp-O?"s#%0rAkcaYj+V[`50)m[qPC';f%@HE)\Xe#j-'eO[#BN:j>&cM:FZYq,o_LI!E^T6K^=%f;1g/JA'CJl%$T!%Z`(baR]GGbYT+pMSD0%IFg:T@ju*<+'*>C7LcMTj9q[G3ueoc)1"SN"BEN^@3>5`Di9>"&G]3$WQspa#o,0.0YNSbm\T@&Q$iWK)E*!dHk!0:o<lZE73jk#%Ht&ZC2)pc!2OY2U]6f)j,-;?)YP#<.F^Z`oTWl!Y\iET>P+Tel=oOP.<k2CBDC8E.Q[u;U)=B0F%`:8s8J""<12>B='ois9eFL*]%k%,)\\@CcK$mc6\((>)3,0BV1j!JR:%rh-JGQnLO\V%AEFs^2IK,EO,6[e/W`$4D#(Ij(*i':rb"fEme3rDg*]V.$S(7J)P3+HqI%IZQq(.+a4*#'VZU"37d5#$oWmQAKBuLQMjH@7*2((Npg:+s8)7=hd/L:a([Oma0%=.*7T8Qhr1[rR]Wa_5+aBZOSII-n@WgSD>4u%34nBC0,ft8rVfU='Rq`rE?[RoEj)rJ[0Q0NG'U9T>u*\?]0<$T6.?Do"d%?dT"L_V+lXVZS\QJiHY3A[^1e!X:'78Ch#q4aE5#`H%L..(&DT4NfRe*BI.J&B^RnAIV])![Clb,tj.kj@SE'f+Yn1o9l;iEe_K=1Du/]VLt7e7QB9])?W&=!&8J4NoHE53,AP-i'F+2B"C%9Ri:JON]3:2a<C\h$mmG\Dg^n9jkWS&mMXo7l]EMil&OhBX4;f%F5FKR?_bsb^S/pKLn>3o8&jVf6jUZd'$6qaFfq,.6a`+)ChZl%U$5HPS@(8Y5c9>r'+0.8rc=ns@_RLdjprkT.eRNJ5mAIp%B.CLA8oasaT.9_c#uYnEOnH)<V$Z/KrM#$(fJ,(V2dSL^aeQKKa\E(%a]prQ&$js1$MAde]oHcdeujY>:Q4c+&;0A./q87V!0*EjIuO<a%c&3<[(n.<k6TB2UYe:6()9Mqgb,$fK-MPI.XhC87L9!/=B=ri%!>B&s!<ecac&hb6W64oV9kb1uF=oTK7p`f%OZP3CVk4)]NMUg-cU5Z(>cKKoLNUm^N"Fr6(BJaiM`Ke;,E&*(0[jojTU`$;.VBd%%gH`r7Z]eG'Nme%:4lR2kR'-re9u,RrZkpV3:mcH1jUq_p:feHBib<k>Es:E*VY*C,jqN%YZJpM_[LNOfAKb"0A-2H?eT6_@XpI'+%6[/MoCc`cHb?bF\Lb'/pIaFA:8cDVuG;dY(29@Zrhp..X>s<`UR$$"XnWNYj2i`EUNm()CT]Ej"7Ql!*6oZ;KMG4aNWSTn!$#^A>%bP>+jgONAbSt!XucT*]qAce]d&qNP4eF4MmN%-&eD#/M\ir=PJ3qSYS'/cf$-,"M%kCCK*Dg>=&$hA9$on2sn&-G88ZiqLcYkm36%]aoea*?[)uWAX7dcS%tpC\,ofLufhnl18=\8,QhtbE^2jKnU*n9J@YZg1B9_'SuSW7<MF#E^]c^5a*9A_"1@'kNF\gHE,A$!G"Hf%8+]cA9;\@o!eq"*RAR,s/:_l-1A06iIsIs<Tnf<a4Z!oJ_A:B-Q8-kB=&k%(]Kcjri=Hd/XKF\gY&Sn6S^M2aU!DjSQ`KaBY/'"K%?1?L"_bc)!/_#3kF(=;Or+JhRO--%RaCl.3KM6U$J+&sH(sD0,",R/41(UX?3"3D,i[bYj"\*9\c;iqk#,W+HUH9nnd?t)F.:G"3%TF*j9mbJK;'>NVs'pO4RAf+PkJ]B^@!aWI4coB@e"KdKB(H=<,cP$F:cq?'M6A**1Loj=lD'>S67HmFWKt<^=gL<rpRd@>4:F/Am%@DY(ah^t#5eF5/p97.*g&4<]:mW/))M@q4eO>6j!F:al^n"HU=Ik6Mq'gSFH"4de>[hq)-'7!D>-QcbJ!7p?78dqccI&b\jA8<t(%OFU!$'IDNj;ulAA>"%E_,UBOkfEUX*j'?>q=]\`A+n:E[o&8AL1/-[V#El?Z(_m\GO*"PG%>beCQHtL64o/t%IU`>;[0E&\m*mBl%>WHcF@#RXl9<o'&1GRH\'8[dUl4X6:&)-#?j`hu,]Hj-f(D\-]N[L*YkG7>"7g%+;90b^EMEb^TlFB/q:1T#[jKpVpUG2Cql3Z=+%:-]@n+9!,)'Z>(;:*e-/T^X$GFj.%"/YAaZ(l5H9o=Ru]#7s):=dK":O5!RaRjs(*ohDBk@B@Dg)XOE\(c8?58k3o!NA07+WZK"\%aXApo<Q)&a_WAi)"+YnT8=Cj[.3?uB7.<o^7>HQ::^s=BLffen=HO8S#Pl*U[#Gm$#WhtoZh@7gSE3n8g5t)nL8O.`H26ZWHN!<N%/%<6/o5`&nr*FV.NcQ\e=P>>JpOPQ6pZMpeg_90GY&c,Hj>o5bmtG!W>oK#udZ6cT_G'fsa;%,6a(^i+kb[5t]=+?gbM.<).gQ:j%NjHimA_tisHBF9Up`&<M@#$ik>D?X)oS;:"S:i?:Aff7LEN$R+mT0o>0obsH`S7puPH.r6Y'^cBCP9gg:jl7[@2p)u8%kJnH?--K%$h+Jt.T\iMYB%U]q`PLk1$Bc#g;.cs4AO$`YupC5q)nc9DQhPXY%"5&ni`'b9GN7#_4bDH@tXa/b-aAb^aJ'@>[:.[O"Ju9^'AZf%n0*QSXZI6IR-O)4r#Hb]"1'Ht)Mb#dps$>A`s"HZ7BX"V?FGCf-XM8"I/kVkS7:g%132^G"1`NlXG)1N/1o`P)omBn[2tYTZqr>=%4P#PYF%0bj37P#Brj;8S5,"o=L#7XL`,#"opIKd..$U6!.BqJKr7cdL&>aHCNaJN&Nr+&'5tDJ;2V=H?M:/q`qR]5]I/!Bsh"_d<%.7<6\-N5nk)oHQRRk[RNYja.`@BSD-,i%ASHK:+`b@ghZn$mq"`MAtmr`qq*:9kUHGoCtMjfK6%b^Ds_G#b6Ubr"N"g9G!Z^OC:k%?9`clpuspNgOGOQ-]@UU.kJG*qPeIQYL=kk&uQdeEf(ZCo_@%a\Ar1ck^^3&,X/#<JUg:EZ2gk]3.R9cq)cAC@(t28E^)`F?otD[%7]701%%hhh;R;k3&lrOU!mCX5NNp:Z&CQXrq)-Eg%2KpI"bZ1-"%1LQPtdYD%M*A^n1,^^"#_9tP/9V?(E4Q.WY,hW#6uh7_^k(;%1EsAKP<L`WAMLu5;MF2M>S1@DmUE'CU(_L_18=slK1PqK8/.gH&MC:_,@[;\>,!+(XWqVEJR?N_%qBSI*tTZ,.538g4i+lJT0F=[%?[e23juE'L/akT=59Q"N@W,rJ]2#_8"-S^=OHEYRHaj2N?4rro)9?4b"N3%-ToP?E!e'oOa*^Sj+lkjZ5-XcjqB?/K7U79h-`*5M%:BJsY6cV!>nI!&9r*f4C,)_4Ij+M<m;^$a0&]c\cc/0b*%Au&V,>Dj$Wkp.l`.n<KZ2IXO09]iZXk1R$`+7iqdkXMPWoY*p0RWL+%$F:>>3?3i[P,ECT,6/M_(1(L8?q&&\QoQcY:?i-'95r@JMTA/r(,AW5]iI`tDN8=/ZH?m!m'qZ#82NR7:1ik2a:Z^7%4B'lJ0iZ*%iUXj$E&J8h0+HK>Z-`X]rmVd[kc%St2%u'IUR>#E?4_MXYh1H1JRi98pRYu3WPBYdA2#)4Y$r]q&8O8!OQ;-Q6R%IaK+&<q"f,pa%41:C4mr`sV+Zm41LnHO%7D@A>d*SFF]!e0d[:$f=O>]eGZ8%%lKJ8DdaI!'NoQ]kh.h3NPBo?V?,l2nm=&]h7AW#ma`X8?"!)EkD%nhhfOW9*RaX?]qO7&i+*Ouu%+QK/^FBgp5k.9a'QH>6R,4A>6c_%.NXk1E>i1IH47N+,j6`g0CgCT@0uqa6/ie&:H!ke'P:T$6Fu%(q[ciNtE+oG+'n*Wr)]_?k`j&\Q_<u(l9)XMj5%$Z_#<V+1LRgcLDAMM.EMP*QZVJ4eJ+]2gBq5[M@;!p/ukB>4WnMX`d<!=5UBB%&+BQr#nS^3!%j[uGGN_/CDqi.TL.#@Ukum2NBA@Wo0([W"I?9"fFm3]E'e7q8P;,l13\]$YgOdX2NE^kOIMc-"_mNkkBmmb>,UR_%K'!PjR!ji7\\r88/uHA&-.OI&TuI2"bYu0`K:no(g^ML/"?+foVcO^7=WA[7Tf6>?[N9.sDisOB(kT,f-mWDd*lpUf&lakn1$LNP%0JV.]:YPH/k6iP1SLHA(5?)j9o(X^2]o("2mq(-pLbrsm&Y9rU`jF&Q'Xt-8Mi=[,o,:.i,!IA+,1WV00g,ts0[8JWX,Xk18D+#s%=iIe,ieL&rg*VkjU&'+pl@e/N3D<FH0c%h2`<6Ol_t@YY9W;uDj-^"!(+L2PmY'I1W#[!@4nuRP1kS%E?9MeDTV<ou&Uf!rI[ZC6%]P2^'9kX<RQ"E)+WVHT5-$f848!>+F$COPLSk=r\ad`SAmKbkS8uHQbT\JgS-YZaX9op`IdDVt^*QfO=6Ff;ueGVaUc4lWPN4^+F%HAjo]M[gSG^fu[)ni2`&npE)G1`4[oW`(I7MJlo['tY`^g^o>uGOc06.UXuQFfMeq,Z)/;;B3Ssq)B*iKU8Z:AD4j3TQnVRYZ30\%W)F$K6^Q>MK`NB"6-,7#&)p">_RhF&Z'G@MGFWAE1^%?ik#r8FM$S&#,Ong$Lg#0-VGacrnjo4"$,OJH_JiMsR*CMhL,!WYU_^5A%.?%V3`#+DO'4EjVF:N&2G`=F&PnEq8%4\^lL:PCJH'jjI58$i&S<HpkQn`<DP;RS;A.*MEnuJ1-^p>TgA]ONc*+k9W&?5ot_skWl%("Ui&p];,QbI?=N^)u.`5P^X!^Nf_SYASjY4!N#5rN8<"UjV.HL<uMA[(-i`K.cJh"s7L*reE/`^3T8FrCF:ab4Rqlg@$Q48Yqsh%`r]Jp]234Vc_ojurfg!P%855MKhO-W:U/o\IPVB,YMX]^ncqcDIt3VEA<+S=m,(;L5#qRE%h=jl$1C2I3lJ[qm^cUMR8Lfn23JRX%<gFRk>_['E)K:H&SHX&<*Ji5ocIk$B8d)4U8(lgg!*^!aCP"2k(H$<u1gQngV+m5*gkK@i;LC;,SkScdUF.KQ%2Aa$#u5mQDj_b0%(R0N6>;WMB,`8/%]>4%bnZS6,!]&Ch@ONUI0+.r.edBlrBN[S*5t.V\Pesr/QA<QY$5+"Z5#[PC'"qJ#5mtc4!grZcTc4J++@-^n%#S4#H6%CD$FIJgP)*(,DLAZm`K;I4!</GJO$S@?.2D>>pP?T[pko_(7m`A_UP(_c5J`2^WP*N<3SRKf=H-'lS%RQ%0S:VC=<i:AD%S]L>md7.J=m/EEO<-$mQ"S7`N"Gp(dN"o@2rRjeUH4SlMr<48\6<1mm+dra/Eo*,5]@3uqQLdBY,"Q>he'<KS"qq2tjhVn*`Oh@3%li^8L:lU^.J>`dqS\N$p*VfMqps^M1_#bJu'3eD4ZD)/kqijBC3DBgQFRQS]*j)p1]S'=Dnm*HBp(TiiD2<$<-`u]kJ[?hNhaJO+%d*dr;oUqO%F;646(M;Wg`-"TCV.VL`/s8=@Q:4(V@9h5/UEC4OY'?cuISIR!@eA>?._<K%"+TVJR?KER7`T-m@57'cYHnb:il_j*%MZ#_V9@tS!)GGI7jE,A0e1Tat&R^TIYTqs%a,]ZPfFa,r[&AfJF*a"f0`.qHQ607hGQ7YD,;PcM(10;'/sHQT$#'P';p[(5>blK^%s4NboEboQE=#A9>,0`quF9>V0KaE<akCS3a;[>qr0aNCg>T'DJVQR`]M2Nr8#.$iKaig*.!<s)]EFYVP>JOYE,/S$`!gi(hKS_bo%HV?AJY;2QW"OEB&WZ2[3$S>XV]/u<U(,F?4&c3Ns/#I*6d'(<2K)@,RoGsQ:SrqQUV`V]);YA.kS4jrPYi#eh00jb)AQkZ&[E+/4%8;6;TBS\,&(MR2FiBo%!OO2T>FI;$PRFVhH<F(7/BZU;^-k$VO!ll&=)mc2&]\8f$,"sPU)-MrZ-Y2FlroMKbiP(4dW0")(-TDO?%k=cW]5p:/>l&+EBJsA*T2mYU)(\T./S2MCQ31S*:!']%O8nMXJ3_-"r47`5jG98s7608FDF[kd_PBo4O@U9VX9g;-;@_20%0f>CA%iX>r83&=ukFuslQ4!qGFiB9m#N9!*N.AI^sO\(*nJ!(AhgT;a`![89\\l:Q#E%5j5<+QC:.GR3.XWTsS4PLMHG"(;#>XmXdKo_&r%;e1GI8Yei-T\rb4!9elGAF/_6V$X=5J#l(/_AI?>61:Nj9s4_V@0uWsp`DWO@GM;`Bo+Og^Yt#)6CLo.SHFGbNeor4EB6!gdU7HC%+m6N/VBo<0J7QrB;]3gGhn]12JB[&(kW_<f@\rI^nu8W*R@.<7PhG&MO)%<Ch7,.;Q5W3CN2afBQ\Z&cEH>ALmGmc7Qte7E(:d&4%3<R/id#9<k1idh!LbM!s#Re9)6W?./>_Ze3miZ%I`Yu.9^`X*c`R`$)OiVU'`&f92%oD&5&=9bl[,<*m)X$B>nb,Mo"/YfYL9Xt6%nT.8>[CJ-YI>u2!qNWI'ct:jG)='F2@hho<77A_7gFqRBCBOu"2bDRZF?d`qN,ou_6/m56EUY,4&7RMp1oXS="aQ:k5a2XhQqJ!A%ERAti#DS-CAp`Sa7Io_E&4[E^"^ikq0I)50TQdB+&f5UZlfY3+R=I'pF)mILTNm9C3oEVuDtF:/Y[OKY*\jq9g:&c[ff5WbFc[N2%p0Aq>![u%^Tg<F%+QtBh&sS$jQ<^AJ%_LqI(&Qe$#)^O.qI8!+*AI'cFC0841d!ITq&QKp/1o@ITbAJ'E)_":HD_#[6:>5g:cg,>%7MLe`_Z@VHb!lfhT)oQ&5qT?O.TCZW@VYM[L5Q*f>SM^-$3H'JKqa,@V:)-?<-Ve!a9*u+p6.,H.YM,8YZH?URRm,$HUPKNoJUB0%'TZ7=3t7Q2;+[qDE'5$pZ;3e#kWFVIN=\#4Oq#q8gIU00[tnsaUo@[POH)DR3P3PS[!m"&`6#!qlr[q##W&Nd3Q4CRH"_>^o)YFB%LcQ]qQ^8%qa?dpoUIbLP;uGQU+6"h&Uq=k';hnCZ+4LKsPrJRM1'[L2k"6o)X@Q?ZRBu;%k^"luT*Uu_B>hF@POJi7<WKCfnZll/%&h.hG*^`4,W?]QB*O4iCmps0!AB3<"FVSEjEGT+J"U-"qP(HdbaJdWOM-t9L6nCL!Mh.c/9.`Kp5UV[i?SoO5/];lrRMk&W[VENZ%%Bal!DZd2](hnA\Ji"GbR.GDSfC$X8np2MZ6=)q49c[ZV+e**+)iu'#F@6rl[Pmuc)5)T(67)(6k@So%equ3o37\GrITS4n3R*B)%>+!kOc<AR_cp7aC1^rIZO.<8Odiu'Th6ol;cLd@=;Eu!,m'njt3]]hG0Et5/Q;"0\:6*0Y:Q`1(Tk)C,mb59A<PU?nkZ(H64$9+I%;C'2#M#_5YDM#bN:6M!qZ@XPF$rS@;,1S'NiX6FM=WkRG3'4fP7NlpE@bBBD8<d':.EfG/9ZYUtp%Lis?AaX.k`g+-Ahr9%]i:Oa%,EI,3YV64Vg!f!u,!/%j_-69/A2cptT]3&X\5\Z6"-I(jI)_$)da.Hr*VBs*;+$u].;=l**6Mg(AJF1CLlb&`8C[Al"lrW_ead;-%-C))S`Gj]mIgX^Epl&<U/!=f5CWq)/C[J'H:#c=ngZG<>,<LDW2e(tV9IM25/p8(no#BUP\D5<$<lD$4i[E?dK0^Pn@g&u+EX.FV%J930j*Bb/cT]k])b2,Z,mjtaO;_jHDLbZ=s;bImJpB$P73KZ4",CNm@_D2a)A+k$-"WuG1LufeSmZ9cic7[c6PJk>l*!BH8luM1=%!d:XFM7d!cLKqJti@ijCbC#:+#.+]aRK.'!XF;PR;8K$.#Z1`;qU`RZcc@L;;[0MoAoW;d.fA0"U[30)X9]G*_1`c<58:Hq&g)mt%McU!\7Iono\RL-UjK^;9CNPuGf.!hs)8CuC<Fui+iO'$j2WYbfl8:hiZWo9^84].)2H"h:ooThPi(;,'F!br"iFlgo3ZhM#;)tN@%/Kcmh>S1;,*RT5)VT8Y77`km6<oI>H#Z"S+>=X1FjX_gD'+GD5`'7m'-VK#`fd38\i1PHRFhs4sGV[Qr%uGL52_\L[RknbE'ukIu%X8Z)KY9hj4q$c:\@*sM1l0mS77.G:r8*c,Hh$<%&FApeKUkhZm=*u6O*)R@OU(*Co-O``)Nc\R-1"Wt`,hBPcggCX%8,>`7iX*^8%$UVi+T^!2`Ugh7G.!%A1T[koL$VtaQV4q=ThdgSEWl8,MhGB`./LA1#[c1:;18E#+CB/Ik*>VPF,t*!F2QFWt!t_7Q,[)E*W]p2<%1k%j,Ct,`Q=Z%$I7rjX0'nZasSd<S40mW5(_R,@4R$u`/\CVm3?sCF/6lqbU.#/]=mDSE=oJjC%`"I^/F0Wnr=4r]j-g8Fo1X^EK%Q;B78d4OPM3HDV'bHZD'N@2uhJ1.RB[_<oc%i:0fh-0BQGpiohdC7UAd.8_s+7i<JpD[P:et!Y>_BKp:U!6_jQ8bnaV\2ct9b\4D%V#ja)Jpf?/GWSWsK`rOO<)e+(iG5IBpGW<%ig\3grM>*r1h7@4ke*U>ItkKs\.sbbX>SMj(KE\,>NbsiBm&SVMV0FJZLl[H(s<\*%FF\'c`Ln>%7P&[k&OaK(\?cm(oF%p!q\-'FMX:bPHXjp%P3e.)W*R'f623]n8s-tsV_hsf5B.=r,[K($1EGFgS/;cH(tD`$M&,"i%+k,]!B,@Y4oPnf+AUlDJ2[]`Tr??Egm"LhdM%QFcGIDrd]FPg;4h\5@YB_OO-RM(,DT0s*,QA]Lgkm-2hk\mTe5is+"u=#>\U\8N%:>8cf)Q\[hYl!g@W&-7?hlu`LkCnV:=qOieYZBB$a/D!d(D#CW)e7N6[EoYOUk!irWTmS.YpFa^],9i8No$_Kk=CpgO=K+caI6=X%XniLM/)UH&`lClP&IqS/<%h.[#k!?<s595j;V/qPXCbVHTOUl<RSuO3Vio?A.;ugHo/_(BYleVe@%tF$;IU4B*-Ba"<#uOF%&^iY%an^d/mE(WTTNj4I/UA3W[?-Tp)3L^iaaE;!`ECG8)8?a8OBDRA$uEo?4O1t-`0&n*#31pA25oigfaqTcRrli9-7>/k\Z6alTk-2F%.;AZ]?H7mu@8c_I8=^55o#s.OE,1[6Ph/W1mVJ))3?jEJD:-YHNu9,R-I7d8'HN$oX]pWlj;ulfKe_B[n6H9EZEF^PC>_")a&VJA%K+*;E'7$;C(0;2U,@XBVN`tunq\oF=dSOK"WR"[OL7dkACg*G+fsHTtjt*S-_f%6E\rRX_+%;Se!_"4V$aK-mW'XXWc[d]*ZBWu%%@ipo$,O6nR_V93W&Vf`F86&U"'OID]brO-doqqj`X'HulQ/B!ro>f<hU-;oJ/3j^^U+raZ0Xp.s#c+7_X#R^oCCk\q!``lGAcQdO%'j'PAdeSd)![R>f7a:/%ST-WGDI?pUn%e/6@(A]OM@fkN,`pk"nqC^U=VaN0'k*Z,BK2_df<8Qo`92HDlh=)8BZO@h!CW/ri]`\l%3t!'!G/&nT[]8f`VW]b!;Io<&?qbcPEQ+lS>0)j?SQ:G)Qe(>HTk>0A<sclMg9#`UK0Ua7I'j_ZC#eabLd<F&+qRc=Z`s-O/',#Z%C0.A593%7ZN54^NWo.Xnp3'tJJFA^e(>*bSB9[JWPae=C%Y7VlH)k]:;-*9W^]d4OL]gHV&!L!HhTLe^@%;(>F!D.FgI3[4:sIm^%Pq)oR?Ih#G/Zu1T[b_Kq.GsDb^HXb:;Y3P'2\EQ[kTa-KNFdPZC21&G:J?pU;jb.:aGS.RW=qbTCV*.31'/Q>IRp4&Y5#CKqZ&>d%p2l)jN8m<h$_`RHY@T"5!"2A@->D?ldYUI;[EnU01Q9`%HaGU[Shedh7V6NKQXd$FMA9cF9rk`H@0(/la#_9CM6o#M/9`5mR8j&'%*;I21P2)X<;@!kJj@%5b\<[tS6**W]AX"To0U5O<M:m!<l=T%,MN9bS!*:HYOT?_M<>I_Mh54Z1N5gF=;N4=!4p\Q3^(.Z_YJYAu%]9SfS*GiUTiCb`.M=@E%_N85*=Ds1WDnuA,=EtQ-'EI]R'C\+9**+50S^bZZSd]g?%F9Pa%O*C3MA1)B,iN-_irrQ&1!>I3YU';f%<$QZ"-HR^4dJ`ePNW`gIn7=Oec,+gu.<H(an!gU;@RZ.1G@Vom\.EFD''QtNN<;hL@o)8r,_uH$g_-QG(`"N^cM0b-9WtJpS"j%c%a2Z^&-@Zt*KUENF!C%tE#">hLD<"O3HO/P;Q$0+nC`Na1&VPW6.3*UUgmIjk`>d,t("4,.+S@V%hj>aJqO,.Ka[^YS&#*l1`2reo%2jZiMTj>TW&KMB5Pc!Tp+LA7-(lapQpiDBbm]+=!@>cKGK:XO>.hGc:3Y2DV0WSrLW'Krh6ZogN1k-WKQ'RC;5>KnKPY00R)Iuc5%3Tl??03%Z5'LG[5<Rg_Z5"/>9'f=f!cT_9+'"(TBpa-[[fS6bOYTc7$5S6#sbqsFK,e"lR&O`?.-DKYu(@6GTG)!L,*1pX@\C,B]%/c$p%1&GsE4D"-iAo2$1?^C]?14igENf)HolrD;G('j3JKik!V!gLKVbbU]Ie3=Rmo2%q?A`[1uK4p('3O?MYb-Q%/aNJOD&hJ/8%q1iNXD*^!!Emb_Xd`mT/iP>k"'>1^A)&D@8MF\tupo=ngNe.L(<4!XF4Ng&1b#7Qp&#Si$(*q4(>E/_WI-N]k*'pGMOBu19Mn)Ue%2PAt/_pYf*5VHn5l<@.pZ#t;\K!`'P[,mT797^$HH]F!Q;[oRsPZ'M^b@#;@Hn3'^=ldVcKO^]*L#=R!q8NPM`G&.sMjB%>#CQZn%6M:,%.Fg,fFo>X/9'sU>?a<@R@I+2U:Cf*2hl.!frZN,<iC(mfE@iUE'[ApaS`i$OV6%[;dls/.6iPn<p)?>YbpRUDI$h0`De]Yh%7I6mA$FqkKOf:P)8"RbJa1iA?`(2rHS+c.tQ`i5MQ#j.2c5!7mC]lW5#Abs>BZ`GO%.c@q&[Zsi;iV8bGStT<Zq1=UJHp(Wj+GYd%l<"=-=#V:FKI7Q&a_EsoCPK4h<8>;*'Qgu8,t_"%Vn*<g8D@^52h7P1Kj<%'>G6jfLhc)5fZ!6U;)Jc>h#MK^qErT-5)#--_V6]e%IO/2`Q<I/tTqN!*eSn25?%]07e:I.1N7RS_=]mQ:GU'!_:D`uB98loY0fROQ=B2B5E]Jl/HsiLd_.B/ZVE%NfV:O]o^E<]JZUAnU%Y`'4s`Jj?@Kb%0#RC)(]]K:]r3Kk!q_KBEbFUa.3gI)mj7>7*26IpH_N\@s?CV=[)@g3jD):eYQ`_.!-H4`KqO4:O=e]1_`*Bfk*%XMFF:FKY2)a?Q+K6r8?\+sCN^^9$L7);Qi$DWNDdO8.@$X!os_P"l9JB<_j\^dSSH&D4gT5l\Q.[R:dqF%$r%4V9^E_2)*dk>0H,%8h+u)*cEbIOUUFl;c'r)VdROs&ATDE;.9Yg?8I8C#\bF$\Du(kTV:^]hV8c9_5*1@Oj%HaePh<>/D"_1:N>KbKE4B=F@>5*,2>^a%Tkm&j'G4#23[53/+\C`(Yt.O6`$?Y7IjJ5eJYZsgC+k$K:#*A"Qps^NM8G[eSlg>AAGHBV'=kAP;oVH!p]hA30mGL[m&qVH66p,s%Tl,cTT6`9SaI<i+6*>/i!?%t!KMSO'kdO-hDrAk%CX'D03#piq!(,EkL9-K*]6OjJ7+_<HPTO:>+j7MXK0Wa2?R+]ls.&A>PO;e5%'FD\-<3+<7k.QFMa^,&s)L\FNfTThf'PsQG6bNK<V3;0LF[[BR;LX12NZN[he[ap,'e^R/feZ2+"Sg5uljQ0=5f>C.+CQi(*:p^%%fc=teQl+%s+C.,%'I4Go8+Ie_)ljXVI*[?Y>h"V7g*QRWI3!hD=2QPg#W0M`.I9$q)j",nr[FpH,>iQ47O/Ca`>5Y$!t--2aGOiu%3:[UT%*::"\XjIgaHNX%8e2P,+1^c[r,sB"Qbc6oUf^ZbhqeWk1LOWZic+9LA#WP`DZgcCFcG']k#fO+N[cC.LNl6qX;m=noLq&H%\_t,/-oJ@mW.dK/P%GdIXoh*RF`-/2XT4T?e-[&O#ZSPo7,6q'IY7<J8=,mSiXT_cV\SWR("^nM?")g'"U/G:V%dPi8+O7q9RKm)%JgK+;>cW(\l.0Al^'\8(EM63Tf#M@kf3G/!)2"u\q>RRirST%fXoJ=.T7;1eifC;"roIKNqnWelro,l?rorg.cX+A4qs67K^A.QT%o,"$KN_B5Lh];afr&8P$IJMD0DdP[-o!`!(!QafRI/F46ptMG>h6[+lgs)pW~>%AI9_PrivateDataEnd